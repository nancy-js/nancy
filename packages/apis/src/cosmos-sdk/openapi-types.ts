/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/cosmos/auth/v1beta1/account_info/{address}": {
    /**
     * AccountInfo queries account info which is common to all account types.
     * @description Since: cosmos-sdk 0.47
     */
    get: operations["AccountInfo"];
  };
  "/cosmos/auth/v1beta1/accounts": {
    /**
     * Accounts returns all the existing accounts.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     *
     * Since: cosmos-sdk 0.43
     */
    get: operations["Accounts"];
  };
  "/cosmos/auth/v1beta1/accounts/{address}": {
    /** Account returns account details based on address. */
    get: operations["Account"];
  };
  "/cosmos/auth/v1beta1/address_by_id/{id}": {
    /**
     * AccountAddressByID returns account address based on account number.
     * @description Since: cosmos-sdk 0.46.2
     */
    get: operations["AccountAddressByID"];
  };
  "/cosmos/auth/v1beta1/bech32": {
    /**
     * Bech32Prefix queries bech32Prefix
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["Bech32Prefix"];
  };
  "/cosmos/auth/v1beta1/bech32/{address_bytes}": {
    /**
     * AddressBytesToString converts Account Address bytes to string
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["AddressBytesToString"];
  };
  "/cosmos/auth/v1beta1/bech32/{address_string}": {
    /**
     * AddressStringToBytes converts Address string to bytes
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["AddressStringToBytes"];
  };
  "/cosmos/auth/v1beta1/module_accounts": {
    /**
     * ModuleAccounts returns all the existing module accounts.
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["ModuleAccounts"];
  };
  "/cosmos/auth/v1beta1/module_accounts/{name}": {
    /** ModuleAccountByName returns the module account info by module name */
    get: operations["ModuleAccountByName"];
  };
  "/cosmos/auth/v1beta1/params": {
    /** Params queries all parameters. */
    get: operations["AuthParams"];
  };
  "/cosmos/bank/v1beta1/balances/{address}": {
    /**
     * AllBalances queries the balance of all coins for a single account.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["AllBalances"];
  };
  "/cosmos/bank/v1beta1/balances/{address}/by_denom": {
    /** Balance queries the balance of a single coin for a single account. */
    get: operations["Balance"];
  };
  "/cosmos/bank/v1beta1/denom_owners/{denom}": {
    /**
     * DenomOwners queries for all account addresses that own a particular token
     * denomination.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     *
     * Since: cosmos-sdk 0.46
     */
    get: operations["DenomOwners"];
  };
  "/cosmos/bank/v1beta1/denoms_metadata": {
    /**
     * DenomsMetadata queries the client metadata for all registered coin
     * denominations.
     */
    get: operations["DenomsMetadata"];
  };
  "/cosmos/bank/v1beta1/denoms_metadata/{denom}": {
    /** DenomsMetadata queries the client metadata of a given coin denomination. */
    get: operations["DenomMetadata"];
  };
  "/cosmos/bank/v1beta1/denoms_metadata_by_query_string": {
    /** DenomsMetadata queries the client metadata of a given coin denomination. */
    get: operations["DenomMetadataByQueryString"];
  };
  "/cosmos/bank/v1beta1/params": {
    /** Params queries the parameters of x/bank module. */
    get: operations["BankParams"];
  };
  "/cosmos/bank/v1beta1/send_enabled": {
    /**
     * SendEnabled queries for SendEnabled entries.
     * @description This query only returns denominations that have specific SendEnabled settings.
     * Any denomination that does not have a specific setting will use the default
     * params.default_send_enabled, and will not be returned by this query.
     *
     * Since: cosmos-sdk 0.47
     */
    get: operations["SendEnabled"];
  };
  "/cosmos/bank/v1beta1/spendable_balances/{address}": {
    /**
     * SpendableBalances queries the spendable balance of all coins for a single
     * account.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     *
     * Since: cosmos-sdk 0.46
     */
    get: operations["SpendableBalances"];
  };
  "/cosmos/bank/v1beta1/spendable_balances/{address}/by_denom": {
    /**
     * SpendableBalanceByDenom queries the spendable balance of a single denom for
     * a single account.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     *
     * Since: cosmos-sdk 0.47
     */
    get: operations["SpendableBalanceByDenom"];
  };
  "/cosmos/bank/v1beta1/supply": {
    /**
     * TotalSupply queries the total supply of all coins.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["TotalSupply"];
  };
  "/cosmos/bank/v1beta1/supply/by_denom": {
    /**
     * SupplyOf queries the supply of a single coin.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["SupplyOf"];
  };
  "/cosmos/base/tendermint/v1beta1/abci_query": {
    /**
     * ABCIQuery defines a query handler that supports ABCI queries directly to the
     * application, bypassing Tendermint completely. The ABCI query must contain
     * a valid and supported path, including app, custom, p2p, and store.
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["ABCIQuery"];
  };
  "/cosmos/base/tendermint/v1beta1/blocks/latest": {
    /** GetLatestBlock returns the latest block. */
    get: operations["GetLatestBlock"];
  };
  "/cosmos/base/tendermint/v1beta1/blocks/{height}": {
    /** GetBlockByHeight queries block for given height. */
    get: operations["GetBlockByHeight"];
  };
  "/cosmos/base/tendermint/v1beta1/node_info": {
    /** GetNodeInfo queries the current node info. */
    get: operations["GetNodeInfo"];
  };
  "/cosmos/base/tendermint/v1beta1/syncing": {
    /** GetSyncing queries node syncing. */
    get: operations["GetSyncing"];
  };
  "/cosmos/base/tendermint/v1beta1/validatorsets/latest": {
    /** GetLatestValidatorSet queries latest validator-set. */
    get: operations["GetLatestValidatorSet"];
  };
  "/cosmos/base/tendermint/v1beta1/validatorsets/{height}": {
    /** GetValidatorSetByHeight queries validator-set at a given height. */
    get: operations["GetValidatorSetByHeight"];
  };
  "/cosmos/base/node/v1beta1/config": {
    /** Config queries for the operator configuration. */
    get: operations["Config"];
  };
  "/cosmos/base/node/v1beta1/status": {
    /** Status queries for the node status. */
    get: operations["Status"];
  };
  "/cosmos/distribution/v1beta1/community_pool": {
    /** CommunityPool queries the community pool coins. */
    get: operations["CommunityPool"];
  };
  "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards": {
    /**
     * DelegationTotalRewards queries the total rewards accrued by each
     * validator.
     */
    get: operations["DelegationTotalRewards"];
  };
  "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}": {
    /** DelegationRewards queries the total rewards accrued by a delegation. */
    get: operations["DelegationRewards"];
  };
  "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators": {
    /** DelegatorValidators queries the validators of a delegator. */
    get: operations["DelegatorValidators"];
  };
  "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address": {
    /** DelegatorWithdrawAddress queries withdraw address of a delegator. */
    get: operations["DelegatorWithdrawAddress"];
  };
  "/cosmos/distribution/v1beta1/params": {
    /** Params queries params of the distribution module. */
    get: operations["DistributionParams"];
  };
  "/cosmos/distribution/v1beta1/validators/{validator_address}": {
    /** ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator */
    get: operations["ValidatorDistributionInfo"];
  };
  "/cosmos/distribution/v1beta1/validators/{validator_address}/commission": {
    /** ValidatorCommission queries accumulated commission for a validator. */
    get: operations["ValidatorCommission"];
  };
  "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards": {
    /** ValidatorOutstandingRewards queries rewards of a validator address. */
    get: operations["ValidatorOutstandingRewards"];
  };
  "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes": {
    /** ValidatorSlashes queries slash events of a validator. */
    get: operations["ValidatorSlashes"];
  };
  "/cosmos/evidence/v1beta1/evidence": {
    /** AllEvidence queries all evidence. */
    get: operations["AllEvidence"];
  };
  "/cosmos/evidence/v1beta1/evidence/{hash}": {
    /** Evidence queries evidence based on evidence hash. */
    get: operations["Evidence"];
  };
  "/cosmos/gov/v1beta1/params/{params_type}": {
    /** Params queries all parameters of the gov module. */
    get: operations["GovParams"];
  };
  "/cosmos/gov/v1beta1/proposals": {
    /** Proposals queries all proposals based on given status. */
    get: operations["Proposals"];
  };
  "/cosmos/gov/v1beta1/proposals/{proposal_id}": {
    /** Proposal queries proposal details based on ProposalID. */
    get: operations["Proposal"];
  };
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits": {
    /** Deposits queries all deposits of a single proposal. */
    get: operations["Deposits"];
  };
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}": {
    /** Deposit queries single deposit information based on proposalID, depositor address. */
    get: operations["Deposit"];
  };
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/tally": {
    /** TallyResult queries the tally of a proposal vote. */
    get: operations["TallyResult"];
  };
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes": {
    /** Votes queries votes of a given proposal. */
    get: operations["Votes"];
  };
  "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}": {
    /** Vote queries voted information based on proposalID, voterAddr. */
    get: operations["Vote"];
  };
  "/cosmos/gov/v1/constitution": {
    /** Constitution queries the chain's constitution. */
    get: operations["Constitution"];
  };
  "/cosmos/gov/v1/params/{params_type}": {
    /** Params queries all parameters of the gov module. */
    get: operations["GovV1Params"];
  };
  "/cosmos/gov/v1/proposals": {
    /** Proposals queries all proposals based on given status. */
    get: operations["GovV1Proposal"];
  };
  "/cosmos/gov/v1/proposals/{proposal_id}": {
    /** Proposal queries proposal details based on ProposalID. */
    get: operations["GovV1Proposal"];
  };
  "/cosmos/gov/v1/proposals/{proposal_id}/deposits": {
    /** Deposits queries all deposits of a single proposal. */
    get: operations["GovV1Deposit"];
  };
  "/cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}": {
    /** Deposit queries single deposit information based on proposalID, depositAddr. */
    get: operations["GovV1Deposit"];
  };
  "/cosmos/gov/v1/proposals/{proposal_id}/tally": {
    /** TallyResult queries the tally of a proposal vote. */
    get: operations["GovV1TallyResult"];
  };
  "/cosmos/gov/v1/proposals/{proposal_id}/votes": {
    /** Votes queries votes of a given proposal. */
    get: operations["GovV1Votes"];
  };
  "/cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}": {
    /** Vote queries voted information based on proposalID, voterAddr. */
    get: operations["GovV1Vote"];
  };
  "/cosmos/mint/v1beta1/annual_provisions": {
    /** AnnualProvisions current minting annual provisions value. */
    get: operations["AnnualProvisions"];
  };
  "/cosmos/mint/v1beta1/inflation": {
    /** Inflation returns the current minting inflation value. */
    get: operations["Inflation"];
  };
  "/cosmos/mint/v1beta1/params": {
    /** Params returns the total set of minting parameters. */
    get: operations["MintParams"];
  };
  "/cosmos/params/v1beta1/params": {
    /**
     * Params queries a specific parameter of a module, given its subspace and
     * key.
     */
    get: operations["Params"];
  };
  "/cosmos/params/v1beta1/subspaces": {
    /**
     * Subspaces queries for all registered subspaces and all keys for a subspace.
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["Subspaces"];
  };
  "/cosmos/slashing/v1beta1/params": {
    /** Params queries the parameters of slashing module */
    get: operations["SlashingParams"];
  };
  "/cosmos/slashing/v1beta1/signing_infos": {
    /** SigningInfos queries signing info of all validators */
    get: operations["SigningInfos"];
  };
  "/cosmos/slashing/v1beta1/signing_infos/{cons_address}": {
    /** SigningInfo queries the signing info of given cons address */
    get: operations["SigningInfo"];
  };
  "/cosmos/staking/v1beta1/delegations/{delegator_addr}": {
    /**
     * DelegatorDelegations queries all delegations of a given delegator address.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["DelegatorDelegations"];
  };
  "/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations": {
    /**
     * Redelegations queries redelegations of given address.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["Redelegations"];
  };
  "/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations": {
    /**
     * DelegatorUnbondingDelegations queries all unbonding delegations of a given
     * delegator address.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["DelegatorUnbondingDelegations"];
  };
  "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators": {
    /**
     * DelegatorValidators queries all validators info for given delegator
     * address.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["StakingDelegatorValidators"];
  };
  "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}": {
    /**
     * DelegatorValidator queries validator info for given delegator validator
     * pair.
     */
    get: operations["DelegatorValidator"];
  };
  "/cosmos/staking/v1beta1/historical_info/{height}": {
    /** HistoricalInfo queries the historical info for given height. */
    get: operations["HistoricalInfo"];
  };
  "/cosmos/staking/v1beta1/params": {
    /** Parameters queries the staking parameters. */
    get: operations["StakingParams"];
  };
  "/cosmos/staking/v1beta1/pool": {
    /** Pool queries the pool info. */
    get: operations["Pool"];
  };
  "/cosmos/staking/v1beta1/validators": {
    /**
     * Validators queries all validators that match the given status.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["Validators"];
  };
  "/cosmos/staking/v1beta1/validators/{validator_addr}": {
    /** Validator queries validator info for given validator address. */
    get: operations["Validator"];
  };
  "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations": {
    /**
     * ValidatorDelegations queries delegate info for given validator.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["ValidatorDelegations"];
  };
  "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}": {
    /** Delegation queries delegate info for given validator delegator pair. */
    get: operations["Delegation"];
  };
  "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation": {
    /**
     * UnbondingDelegation queries unbonding info for given validator delegator
     * pair.
     */
    get: operations["UnbondingDelegation"];
  };
  "/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations": {
    /**
     * ValidatorUnbondingDelegations queries unbonding delegations of a validator.
     * @description When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     */
    get: operations["ValidatorUnbondingDelegations"];
  };
  "/cosmos/tx/v1beta1/decode": {
    /**
     * TxDecode decodes the transaction.
     * @description Since: cosmos-sdk 0.47
     */
    post: operations["TxDecode"];
  };
  "/cosmos/tx/v1beta1/decode/amino": {
    /**
     * TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
     * @description Since: cosmos-sdk 0.47
     */
    post: operations["TxDecodeAmino"];
  };
  "/cosmos/tx/v1beta1/encode": {
    /**
     * TxEncode encodes the transaction.
     * @description Since: cosmos-sdk 0.47
     */
    post: operations["TxEncode"];
  };
  "/cosmos/tx/v1beta1/encode/amino": {
    /**
     * TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
     * @description Since: cosmos-sdk 0.47
     */
    post: operations["TxEncodeAmino"];
  };
  "/cosmos/tx/v1beta1/simulate": {
    /** Simulate simulates executing a transaction for estimating gas usage. */
    post: operations["Simulate"];
  };
  "/cosmos/tx/v1beta1/txs": {
    /** GetTxsEvent fetches txs by event. */
    get: operations["GetTxsEvent"];
    /** BroadcastTx broadcast transaction. */
    post: operations["BroadcastTx"];
  };
  "/cosmos/tx/v1beta1/txs/block/{height}": {
    /**
     * GetBlockWithTxs fetches a block with decoded txs.
     * @description Since: cosmos-sdk 0.45.2
     */
    get: operations["GetBlockWithTxs"];
  };
  "/cosmos/tx/v1beta1/txs/{hash}": {
    /** GetTx fetches a tx by hash. */
    get: operations["GetTx"];
  };
  "/cosmos/upgrade/v1beta1/applied_plan/{name}": {
    /** AppliedPlan queries a previously applied upgrade plan by its name. */
    get: operations["AppliedPlan"];
  };
  "/cosmos/upgrade/v1beta1/authority": {
    /**
     * Returns the account with authority to conduct upgrades
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["Authority"];
  };
  "/cosmos/upgrade/v1beta1/current_plan": {
    /** CurrentPlan queries the current upgrade plan. */
    get: operations["CurrentPlan"];
  };
  "/cosmos/upgrade/v1beta1/module_versions": {
    /**
     * ModuleVersions queries the list of module versions from state.
     * @description Since: cosmos-sdk 0.43
     */
    get: operations["ModuleVersions"];
  };
  "/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}": {
    /**
     * UpgradedConsensusState queries the consensus state that will serve
     * as a trusted kernel for the next version of this chain. It will only be
     * stored at the last height of this chain.
     * UpgradedConsensusState RPC not supported with legacy querier
     * This rpc is deprecated now that IBC has its own replacement
     * (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
     */
    get: operations["UpgradedConsensusState"];
  };
  "/cosmos/authz/v1beta1/grants": {
    /** Returns list of `Authorization`, granted to the grantee by the granter. */
    get: operations["Grants"];
  };
  "/cosmos/authz/v1beta1/grants/grantee/{grantee}": {
    /**
     * GranteeGrants returns a list of `GrantAuthorization` by grantee.
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["GranteeGrants"];
  };
  "/cosmos/authz/v1beta1/grants/granter/{granter}": {
    /**
     * GranterGrants returns list of `GrantAuthorization`, granted by granter.
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["GranterGrants"];
  };
  "/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}": {
    /** Allowance returns granted allwance to the grantee by the granter. */
    get: operations["Allowance"];
  };
  "/cosmos/feegrant/v1beta1/allowances/{grantee}": {
    /** Allowances returns all the grants for the given grantee address. */
    get: operations["Allowances"];
  };
  "/cosmos/feegrant/v1beta1/issued/{granter}": {
    /**
     * AllowancesByGranter returns all the grants given by an address
     * @description Since: cosmos-sdk 0.46
     */
    get: operations["AllowancesByGranter"];
  };
  "/cosmos/nft/v1beta1/balance/{owner}/{class_id}": {
    /** Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721 */
    get: operations["NftBalance"];
  };
  "/cosmos/nft/v1beta1/classes": {
    /** Classes queries all NFT classes */
    get: operations["Classes"];
  };
  "/cosmos/nft/v1beta1/classes/{class_id}": {
    /** Class queries an NFT class based on its id */
    get: operations["Class"];
  };
  "/cosmos/nft/v1beta1/nfts": {
    /**
     * NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in
     * ERC721Enumerable
     */
    get: operations["NFTs"];
  };
  "/cosmos/nft/v1beta1/nfts/{class_id}/{id}": {
    /** NFT queries an NFT based on its class and id. */
    get: operations["NFT"];
  };
  "/cosmos/nft/v1beta1/owner/{class_id}/{id}": {
    /** Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721 */
    get: operations["Owner"];
  };
  "/cosmos/nft/v1beta1/supply/{class_id}": {
    /** Supply queries the number of NFTs from the given class, same as totalSupply of ERC721. */
    get: operations["Supply"];
  };
  "/cosmos/group/v1/group_info/{group_id}": {
    /** GroupInfo queries group info based on group id. */
    get: operations["GroupInfo"];
  };
  "/cosmos/group/v1/group_members/{group_id}": {
    /** GroupMembers queries members of a group by group id. */
    get: operations["GroupMembers"];
  };
  "/cosmos/group/v1/group_policies_by_admin/{admin}": {
    /** GroupPoliciesByAdmin queries group policies by admin address. */
    get: operations["GroupPoliciesByAdmin"];
  };
  "/cosmos/group/v1/group_policies_by_group/{group_id}": {
    /** GroupPoliciesByGroup queries group policies by group id. */
    get: operations["GroupPoliciesByGroup"];
  };
  "/cosmos/group/v1/group_policy_info/{address}": {
    /** GroupPolicyInfo queries group policy info based on account address of group policy. */
    get: operations["GroupPolicyInfo"];
  };
  "/cosmos/group/v1/groups": {
    /**
     * Groups queries all groups in state.
     * @description Since: cosmos-sdk 0.47.1
     */
    get: operations["Groups"];
  };
  "/cosmos/group/v1/groups_by_admin/{admin}": {
    /** GroupsByAdmin queries groups by admin address. */
    get: operations["GroupsByAdmin"];
  };
  "/cosmos/group/v1/groups_by_member/{address}": {
    /** GroupsByMember queries groups by member address. */
    get: operations["GroupsByMember"];
  };
  "/cosmos/group/v1/proposal/{proposal_id}": {
    /** Proposal queries a proposal based on proposal id. */
    get: operations["GroupProposal"];
  };
  "/cosmos/group/v1/proposals/{proposal_id}/tally": {
    /**
     * TallyResult returns the tally result of a proposal. If the proposal is
     * still in voting period, then this query computes the current tally state,
     * which might not be final. On the other hand, if the proposal is final,
     * then it simply returns the `final_tally_result` state stored in the
     * proposal itself.
     */
    get: operations["GroupTallyResult"];
  };
  "/cosmos/group/v1/proposals_by_group_policy/{address}": {
    /** ProposalsByGroupPolicy queries proposals based on account address of group policy. */
    get: operations["ProposalsByGroupPolicy"];
  };
  "/cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}": {
    /** VoteByProposalVoter queries a vote by proposal id and voter. */
    get: operations["VoteByProposalVoter"];
  };
  "/cosmos/group/v1/votes_by_proposal/{proposal_id}": {
    /** VotesByProposal queries a vote by proposal id. */
    get: operations["VotesByProposal"];
  };
  "/cosmos/group/v1/votes_by_voter/{voter}": {
    /** VotesByVoter queries a vote by voter. */
    get: operations["VotesByVoter"];
  };
  "/cosmos/circuit/v1/accounts": {
    /** Account returns account permissions. */
    get: operations["CircuitAccounts"];
  };
  "/cosmos/circuit/v1/accounts/{address}": {
    /** Account returns account permissions. */
    get: operations["CircuitAccount"];
  };
  "/cosmos/circuit/v1/disable_list": {
    /** DisabledList returns a list of disabled message urls */
    get: operations["DisabledList"];
  };
  "/cosmos/consensus/v1/params": {
    /** Params queries the parameters of x/consensus module. */
    get: operations["ConsensusParams"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * @description AddressBytesToStringResponse is the response type for AddressString rpc method.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.auth.v1beta1.AddressBytesToStringResponse": {
      address_string?: string;
    };
    /**
     * @description AddressStringToBytesResponse is the response type for AddressBytes rpc method.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.auth.v1beta1.AddressStringToBytesResponse": {
      /** Format: byte */
      address_bytes?: string;
    };
    /**
     * @description BaseAccount defines a base account type. It contains all the necessary fields
     * for basic account functionality. Any custom account type should extend this
     * type for additional functionality (e.g. vesting).
     */
    "cosmos.auth.v1beta1.BaseAccount": {
      address?: string;
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      pub_key?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /** Format: uint64 */
      account_number?: string;
      /** Format: uint64 */
      sequence?: string;
    };
    /**
     * @description Bech32PrefixResponse is the response type for Bech32Prefix rpc method.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.auth.v1beta1.Bech32PrefixResponse": {
      bech32_prefix?: string;
    };
    /** @description Params defines the parameters for the auth module. */
    "cosmos.auth.v1beta1.Params": {
      /** Format: uint64 */
      max_memo_characters?: string;
      /** Format: uint64 */
      tx_sig_limit?: string;
      /** Format: uint64 */
      tx_size_cost_per_byte?: string;
      /** Format: uint64 */
      sig_verify_cost_ed25519?: string;
      /** Format: uint64 */
      sig_verify_cost_secp256k1?: string;
    };
    /**
     * QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method
     * @description Since: cosmos-sdk 0.46.2
     */
    "cosmos.auth.v1beta1.QueryAccountAddressByIDResponse": {
      account_address?: string;
    };
    /**
     * @description QueryAccountInfoResponse is the Query/AccountInfo response type.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.auth.v1beta1.QueryAccountInfoResponse": {
      /** @description info is the account info which is represented by BaseAccount. */
      info?: {
        address?: string;
        /**
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        pub_key?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
        /** Format: uint64 */
        account_number?: string;
        /** Format: uint64 */
        sequence?: string;
      };
    };
    /** @description QueryAccountResponse is the response type for the Query/Account RPC method. */
    "cosmos.auth.v1beta1.QueryAccountResponse": {
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      account?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
    };
    /**
     * @description QueryAccountsResponse is the response type for the Query/Accounts RPC method.
     *
     * Since: cosmos-sdk 0.43
     */
    "cosmos.auth.v1beta1.QueryAccountsResponse": {
      /** accounts are the existing accounts */
      accounts?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName RPC method. */
    "cosmos.auth.v1beta1.QueryModuleAccountByNameResponse": {
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      account?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
    };
    /**
     * @description QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.auth.v1beta1.QueryModuleAccountsResponse": {
      accounts?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
    };
    /** @description QueryParamsResponse is the response type for the Query/Params RPC method. */
    "cosmos.auth.v1beta1.QueryParamsResponse": {
      /** @description params defines the parameters of the module. */
      params?: {
        /** Format: uint64 */
        max_memo_characters?: string;
        /** Format: uint64 */
        tx_sig_limit?: string;
        /** Format: uint64 */
        tx_size_cost_per_byte?: string;
        /** Format: uint64 */
        sig_verify_cost_ed25519?: string;
        /** Format: uint64 */
        sig_verify_cost_secp256k1?: string;
      };
    };
    /**
     * PageRequest is to be embedded in gRPC request messages for efficient
     * pagination. Ex:
     * @description message SomeRequest {
     *          Foo some_parameter = 1;
     *          PageRequest pagination = 2;
     *  }
     */
    "cosmos.base.query.v1beta1.PageRequest": {
      /**
       * Format: byte
       * @description key is a value returned in PageResponse.next_key to begin
       * querying the next page most efficiently. Only one of offset or key
       * should be set.
       */
      key?: string;
      /**
       * Format: uint64
       * @description offset is a numeric offset that can be used when key is unavailable.
       * It is less efficient than using key. Only one of offset or key should
       * be set.
       */
      offset?: string;
      /**
       * Format: uint64
       * @description limit is the total number of results to be returned in the result page.
       * If left empty it will default to a value to be set by each app.
       */
      limit?: string;
      /**
       * @description count_total is set to true  to indicate that the result set should include
       * a count of the total number of items available for pagination in UIs.
       * count_total is only respected when offset is used. It is ignored when key
       * is set.
       */
      count_total?: boolean;
      /**
       * @description reverse is set to true if results are to be returned in the descending order.
       *
       * Since: cosmos-sdk 0.43
       */
      reverse?: boolean;
    };
    /**
     * @description PageResponse is to be embedded in gRPC response messages where the
     * corresponding request message has used PageRequest.
     *
     *  message SomeResponse {
     *          repeated Bar results = 1;
     *          PageResponse page = 2;
     *  }
     */
    "cosmos.base.query.v1beta1.PageResponse": {
      /**
       * Format: byte
       * @description next_key is the key to be passed to PageRequest.key to
       * query the next page most efficiently. It will be empty if
       * there are no more results.
       */
      next_key?: string;
      /**
       * total is total number of results available if PageRequest.count_total
       * was set, its value is undefined otherwise
       * Format: uint64
       */
      total?: string;
    };
    /**
     * @description `Any` contains an arbitrary serialized protocol buffer message along with a
     * URL that describes the type of the serialized message.
     *
     * Protobuf library provides support to pack/unpack Any values in the form
     * of utility functions or additional generated methods of the Any type.
     *
     * Example 1: Pack and unpack a message in C++.
     *
     *     Foo foo = ...;
     *     Any any;
     *     any.PackFrom(foo);
     *     ...
     *     if (any.UnpackTo(&foo)) {
     *       ...
     *     }
     *
     * Example 2: Pack and unpack a message in Java.
     *
     *     Foo foo = ...;
     *     Any any = Any.pack(foo);
     *     ...
     *     if (any.is(Foo.class)) {
     *       foo = any.unpack(Foo.class);
     *     }
     *     // or ...
     *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
     *       foo = any.unpack(Foo.getDefaultInstance());
     *     }
     *
     * Example 3: Pack and unpack a message in Python.
     *
     *     foo = Foo(...)
     *     any = Any()
     *     any.Pack(foo)
     *     ...
     *     if any.Is(Foo.DESCRIPTOR):
     *       any.Unpack(foo)
     *       ...
     *
     * Example 4: Pack and unpack a message in Go
     *
     *      foo := &pb.Foo{...}
     *      any, err := anypb.New(foo)
     *      if err != nil {
     *        ...
     *      }
     *      ...
     *      foo := &pb.Foo{}
     *      if err := any.UnmarshalTo(foo); err != nil {
     *        ...
     *      }
     *
     * The pack methods provided by protobuf library will by default use
     * 'type.googleapis.com/full.type.name' as the type URL and the unpack
     * methods only use the fully qualified type name after the last '/'
     * in the type URL, for example "foo.bar.com/x/y.z" will yield type
     * name "y.z".
     *
     * JSON
     *
     * The JSON representation of an `Any` value uses the regular
     * representation of the deserialized, embedded message, with an
     * additional field `@type` which contains the type URL. Example:
     *
     *     package google.profile;
     *     message Person {
     *       string first_name = 1;
     *       string last_name = 2;
     *     }
     *
     *     {
     *       "@type": "type.googleapis.com/google.profile.Person",
     *       "firstName": <string>,
     *       "lastName": <string>
     *     }
     *
     * If the embedded message type is well-known and has a custom JSON
     * representation, that representation will be embedded adding a field
     * `value` which holds the custom JSON in addition to the `@type`
     * field. Example (for message [google.protobuf.Duration][]):
     *
     *     {
     *       "@type": "type.googleapis.com/google.protobuf.Duration",
     *       "value": "1.212s"
     *     }
     */
    "google.protobuf.Any": {
      /**
       * @description A URL/resource name that uniquely identifies the type of the serialized
       * protocol buffer message. This string must contain at least
       * one "/" character. The last segment of the URL's path must represent
       * the fully qualified name of the type (as in
       * `path/google.protobuf.Duration`). The name should be in a canonical form
       * (e.g., leading "." is not accepted).
       *
       * In practice, teams usually precompile into the binary all types that they
       * expect it to use in the context of Any. However, for URLs which use the
       * scheme `http`, `https`, or no scheme, one can optionally set up a type
       * server that maps type URLs to message definitions as follows:
       *
       * * If no scheme is provided, `https` is assumed.
       * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
       *   value in binary format, or produce an error.
       * * Applications are allowed to cache lookup results based on the
       *   URL, or have them precompiled into a binary to avoid any
       *   lookup. Therefore, binary compatibility needs to be preserved
       *   on changes to types. (Use versioned type names to manage
       *   breaking changes.)
       *
       * Note: this functionality is not currently available in the official
       * protobuf release, and it is not used for type URLs beginning with
       * type.googleapis.com.
       *
       * Schemes other than `http`, `https` (or the empty scheme) might be
       * used with implementation specific semantics.
       */
      type_url?: string;
      /**
       * Format: byte
       * @description Must be a valid serialized protocol buffer of the above specified type.
       */
      value?: string;
    };
    "grpc.gateway.runtime.Error": {
      error?: string;
      /** Format: int32 */
      code?: number;
      message?: string;
      details?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
    };
    /**
     * @description DenomOwner defines structure representing an account that owns or holds a
     * particular denominated token. It contains the account address and account
     * balance of the denominated token.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.bank.v1beta1.DenomOwner": {
      /** @description address defines the address that owns a particular denomination. */
      address?: string;
      /**
       * @description Coin defines a token with a denomination and an amount.
       *
       * NOTE: The amount field is an Int which implements the custom method
       * signatures required by gogoproto.
       */
      balance?: {
        denom?: string;
        amount?: string;
      };
    };
    /**
     * @description DenomUnit represents a struct that describes a given
     * denomination unit of the basic token.
     */
    "cosmos.bank.v1beta1.DenomUnit": {
      /** @description denom represents the string name of the given denom unit (e.g uatom). */
      denom?: string;
      /**
       * Format: int64
       * @description exponent represents power of 10 exponent that one must
       * raise the base_denom to in order to equal the given DenomUnit's denom
       * 1 denom = 10^exponent base_denom
       * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
       * exponent = 6, thus: 1 atom = 10^6 uatom).
       */
      exponent?: number;
      /** aliases is a list of string aliases for the given denom */
      aliases?: string[];
    };
    /**
     * @description Metadata represents a struct that describes
     * a basic token.
     */
    "cosmos.bank.v1beta1.Metadata": {
      description?: string;
      /** denom_units represents the list of DenomUnit's for a given coin */
      denom_units?: {
          /** @description denom represents the string name of the given denom unit (e.g uatom). */
          denom?: string;
          /**
           * Format: int64
           * @description exponent represents power of 10 exponent that one must
           * raise the base_denom to in order to equal the given DenomUnit's denom
           * 1 denom = 10^exponent base_denom
           * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
           * exponent = 6, thus: 1 atom = 10^6 uatom).
           */
          exponent?: number;
          /** aliases is a list of string aliases for the given denom */
          aliases?: string[];
        }[];
      /** @description base represents the base denom (should be the DenomUnit with exponent = 0). */
      base?: string;
      /**
       * @description display indicates the suggested denom that should be
       * displayed in clients.
       */
      display?: string;
      /**
       * name defines the name of the token (eg: Cosmos Atom)
       * @description Since: cosmos-sdk 0.43
       */
      name?: string;
      /**
       * @description symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
       * be the same as the display.
       *
       * Since: cosmos-sdk 0.43
       */
      symbol?: string;
      /**
       * @description URI to a document (on or off-chain) that contains additional information. Optional.
       *
       * Since: cosmos-sdk 0.46
       */
      uri?: string;
      /**
       * @description URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
       * the document didn't change. Optional.
       *
       * Since: cosmos-sdk 0.46
       */
      uri_hash?: string;
    };
    /** @description Params defines the parameters for the bank module. */
    "cosmos.bank.v1beta1.Params": {
      /**
       * @description Deprecated: Use of SendEnabled in params is deprecated.
       * For genesis, use the newly added send_enabled field in the genesis object.
       * Storage, lookup, and manipulation of this information is now in the keeper.
       *
       * As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
       */
      send_enabled?: {
          denom?: string;
          enabled?: boolean;
        }[];
      default_send_enabled?: boolean;
    };
    /**
     * @description QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
     * method.
     */
    "cosmos.bank.v1beta1.QueryAllBalancesResponse": {
      /** @description balances is the balances of all the coins. */
      balances?: {
          denom?: string;
          amount?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryBalanceResponse is the response type for the Query/Balance RPC method. */
    "cosmos.bank.v1beta1.QueryBalanceResponse": {
      /**
       * @description Coin defines a token with a denomination and an amount.
       *
       * NOTE: The amount field is an Int which implements the custom method
       * signatures required by gogoproto.
       */
      balance?: {
        denom?: string;
        amount?: string;
      };
    };
    /**
     * @description QueryDenomMetadataByQueryStringResponse is the response type for the Query/DenomMetadata RPC
     * method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
     */
    "cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse": {
      /**
       * @description Metadata represents a struct that describes
       * a basic token.
       */
      metadata?: {
        description?: string;
        /** denom_units represents the list of DenomUnit's for a given coin */
        denom_units?: {
            /** @description denom represents the string name of the given denom unit (e.g uatom). */
            denom?: string;
            /**
             * Format: int64
             * @description exponent represents power of 10 exponent that one must
             * raise the base_denom to in order to equal the given DenomUnit's denom
             * 1 denom = 10^exponent base_denom
             * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
             * exponent = 6, thus: 1 atom = 10^6 uatom).
             */
            exponent?: number;
            /** aliases is a list of string aliases for the given denom */
            aliases?: string[];
          }[];
        /** @description base represents the base denom (should be the DenomUnit with exponent = 0). */
        base?: string;
        /**
         * @description display indicates the suggested denom that should be
         * displayed in clients.
         */
        display?: string;
        /**
         * name defines the name of the token (eg: Cosmos Atom)
         * @description Since: cosmos-sdk 0.43
         */
        name?: string;
        /**
         * @description symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
         * be the same as the display.
         *
         * Since: cosmos-sdk 0.43
         */
        symbol?: string;
        /**
         * @description URI to a document (on or off-chain) that contains additional information. Optional.
         *
         * Since: cosmos-sdk 0.46
         */
        uri?: string;
        /**
         * @description URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
         * the document didn't change. Optional.
         *
         * Since: cosmos-sdk 0.46
         */
        uri_hash?: string;
      };
    };
    /**
     * @description QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
     * method.
     */
    "cosmos.bank.v1beta1.QueryDenomMetadataResponse": {
      /**
       * @description Metadata represents a struct that describes
       * a basic token.
       */
      metadata?: {
        description?: string;
        /** denom_units represents the list of DenomUnit's for a given coin */
        denom_units?: {
            /** @description denom represents the string name of the given denom unit (e.g uatom). */
            denom?: string;
            /**
             * Format: int64
             * @description exponent represents power of 10 exponent that one must
             * raise the base_denom to in order to equal the given DenomUnit's denom
             * 1 denom = 10^exponent base_denom
             * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
             * exponent = 6, thus: 1 atom = 10^6 uatom).
             */
            exponent?: number;
            /** aliases is a list of string aliases for the given denom */
            aliases?: string[];
          }[];
        /** @description base represents the base denom (should be the DenomUnit with exponent = 0). */
        base?: string;
        /**
         * @description display indicates the suggested denom that should be
         * displayed in clients.
         */
        display?: string;
        /**
         * name defines the name of the token (eg: Cosmos Atom)
         * @description Since: cosmos-sdk 0.43
         */
        name?: string;
        /**
         * @description symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
         * be the same as the display.
         *
         * Since: cosmos-sdk 0.43
         */
        symbol?: string;
        /**
         * @description URI to a document (on or off-chain) that contains additional information. Optional.
         *
         * Since: cosmos-sdk 0.46
         */
        uri?: string;
        /**
         * @description URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
         * the document didn't change. Optional.
         *
         * Since: cosmos-sdk 0.46
         */
        uri_hash?: string;
      };
    };
    /**
     * @description QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.bank.v1beta1.QueryDenomOwnersResponse": {
      denom_owners?: {
          /** @description address defines the address that owns a particular denomination. */
          address?: string;
          /**
           * @description Coin defines a token with a denomination and an amount.
           *
           * NOTE: The amount field is an Int which implements the custom method
           * signatures required by gogoproto.
           */
          balance?: {
            denom?: string;
            amount?: string;
          };
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
     * method.
     */
    "cosmos.bank.v1beta1.QueryDenomsMetadataResponse": {
      /** @description metadata provides the client information for all the registered tokens. */
      metadatas?: {
          description?: string;
          /** denom_units represents the list of DenomUnit's for a given coin */
          denom_units?: {
              /** @description denom represents the string name of the given denom unit (e.g uatom). */
              denom?: string;
              /**
               * Format: int64
               * @description exponent represents power of 10 exponent that one must
               * raise the base_denom to in order to equal the given DenomUnit's denom
               * 1 denom = 10^exponent base_denom
               * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
               * exponent = 6, thus: 1 atom = 10^6 uatom).
               */
              exponent?: number;
              /** aliases is a list of string aliases for the given denom */
              aliases?: string[];
            }[];
          /** @description base represents the base denom (should be the DenomUnit with exponent = 0). */
          base?: string;
          /**
           * @description display indicates the suggested denom that should be
           * displayed in clients.
           */
          display?: string;
          /**
           * name defines the name of the token (eg: Cosmos Atom)
           * @description Since: cosmos-sdk 0.43
           */
          name?: string;
          /**
           * @description symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
           * be the same as the display.
           *
           * Since: cosmos-sdk 0.43
           */
          symbol?: string;
          /**
           * @description URI to a document (on or off-chain) that contains additional information. Optional.
           *
           * Since: cosmos-sdk 0.46
           */
          uri?: string;
          /**
           * @description URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
           * the document didn't change. Optional.
           *
           * Since: cosmos-sdk 0.46
           */
          uri_hash?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryParamsResponse defines the response type for querying x/bank parameters. */
    "cosmos.bank.v1beta1.QueryParamsResponse": {
      /** @description params provides the parameters of the bank module. */
      params?: {
        /**
         * @description Deprecated: Use of SendEnabled in params is deprecated.
         * For genesis, use the newly added send_enabled field in the genesis object.
         * Storage, lookup, and manipulation of this information is now in the keeper.
         *
         * As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
         */
        send_enabled?: {
            denom?: string;
            enabled?: boolean;
          }[];
        default_send_enabled?: boolean;
      };
    };
    /**
     * @description QuerySendEnabledResponse defines the RPC response of a SendEnable query.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.bank.v1beta1.QuerySendEnabledResponse": {
      send_enabled?: {
          denom?: string;
          enabled?: boolean;
        }[];
      /**
       * @description pagination defines the pagination in the response. This field is only
       * populated if the denoms field in the request is empty.
       */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
     * querying an account's spendable balance for a specific denom.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse": {
      /**
       * @description Coin defines a token with a denomination and an amount.
       *
       * NOTE: The amount field is an Int which implements the custom method
       * signatures required by gogoproto.
       */
      balance?: {
        denom?: string;
        amount?: string;
      };
    };
    /**
     * @description QuerySpendableBalancesResponse defines the gRPC response structure for querying
     * an account's spendable balances.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.bank.v1beta1.QuerySpendableBalancesResponse": {
      /** @description balances is the spendable balances of all the coins. */
      balances?: {
          denom?: string;
          amount?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method. */
    "cosmos.bank.v1beta1.QuerySupplyOfResponse": {
      /**
       * @description Coin defines a token with a denomination and an amount.
       *
       * NOTE: The amount field is an Int which implements the custom method
       * signatures required by gogoproto.
       */
      amount?: {
        denom?: string;
        amount?: string;
      };
    };
    /**
     * QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
     * method
     */
    "cosmos.bank.v1beta1.QueryTotalSupplyResponse": {
      /** supply is the supply of the coins */
      supply?: {
          denom?: string;
          amount?: string;
        }[];
      /**
       * @description pagination defines the pagination in the response.
       *
       * Since: cosmos-sdk 0.43
       */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description SendEnabled maps coin denom to a send_enabled status (whether a denom is
     * sendable).
     */
    "cosmos.bank.v1beta1.SendEnabled": {
      denom?: string;
      enabled?: boolean;
    };
    /**
     * @description Coin defines a token with a denomination and an amount.
     *
     * NOTE: The amount field is an Int which implements the custom method
     * signatures required by gogoproto.
     */
    "cosmos.base.v1beta1.Coin": {
      denom?: string;
      amount?: string;
    };
    /**
     * @description ABCIQueryResponse defines the response structure for the ABCIQuery gRPC query.
     *
     * Note: This type is a duplicate of the ResponseQuery proto type defined in
     * Tendermint.
     */
    "cosmos.base.tendermint.v1beta1.ABCIQueryResponse": {
      /** Format: int64 */
      code?: number;
      log?: string;
      info?: string;
      /** Format: int64 */
      index?: string;
      /** Format: byte */
      key?: string;
      /** Format: byte */
      value?: string;
      /**
       * @description ProofOps is Merkle proof defined by the list of ProofOps.
       *
       * Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
       */
      proof_ops?: {
        ops?: {
            type?: string;
            /** Format: byte */
            key?: string;
            /** Format: byte */
            data?: string;
          }[];
      };
      /** Format: int64 */
      height?: string;
      codespace?: string;
    };
    /**
     * @description Block is tendermint type Block, with the Header proposer address
     * field converted to bech32 string.
     */
    "cosmos.base.tendermint.v1beta1.Block": {
      /** @description Header defines the structure of a Tendermint block header. */
      header?: {
        /**
         * basic block info
         * @description Consensus captures the consensus rules for processing a block in the blockchain,
         * including all blockchain data structures and the rules of the application's
         * state transition machine.
         */
        version?: {
          /** Format: uint64 */
          block?: string;
          /** Format: uint64 */
          app?: string;
        };
        chain_id?: string;
        /** Format: int64 */
        height?: string;
        /** Format: date-time */
        time?: string;
        /** BlockID */
        last_block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        /**
         * hashes of block data
         * Format: byte
         */
        last_commit_hash?: string;
        /** Format: byte */
        data_hash?: string;
        /**
         * hashes from the app output from the prev block
         * Format: byte
         */
        validators_hash?: string;
        /** Format: byte */
        next_validators_hash?: string;
        /** Format: byte */
        consensus_hash?: string;
        /** Format: byte */
        app_hash?: string;
        /** Format: byte */
        last_results_hash?: string;
        /**
         * consensus info
         * Format: byte
         */
        evidence_hash?: string;
        /**
         * @description proposer_address is the original block proposer address, formatted as a Bech32 string.
         * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
         * for better UX.
         */
        proposer_address?: string;
      };
      /** Data contains the set of transactions included in the block */
      data?: {
        /**
         * @description Txs that will be applied by state @ block.Height+1.
         * NOTE: not all txs here are valid.  We're just agreeing on the order first.
         * This means that block.AppHash does not include these txs.
         */
        txs?: string[];
      };
      evidence?: {
        evidence?: ({
            /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
            duplicate_vote_evidence?: {
              /**
               * @description Vote represents a prevote or precommit vote from validators for
               * consensus.
               */
              vote_a?: {
                /**
                 * @description SignedMsgType is a type of signed message in the consensus.
                 *
                 *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                 *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                 * @default SIGNED_MSG_TYPE_UNKNOWN
                 * @enum {string}
                 */
                type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                /** Format: int64 */
                height?: string;
                /** Format: int32 */
                round?: number;
                /** BlockID */
                block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /** Format: date-time */
                timestamp?: string;
                /** Format: byte */
                validator_address?: string;
                /** Format: int32 */
                validator_index?: number;
                /**
                 * Format: byte
                 * @description Vote signature by the validator if they participated in consensus for the
                 * associated block.
                 */
                signature?: string;
                /**
                 * Format: byte
                 * @description Vote extension provided by the application. Only valid for precommit
                 * messages.
                 */
                extension?: string;
                /**
                 * Format: byte
                 * @description Vote extension signature by the validator if they participated in
                 * consensus for the associated block.
                 * Only valid for precommit messages.
                 */
                extension_signature?: string;
              };
              /**
               * @description Vote represents a prevote or precommit vote from validators for
               * consensus.
               */
              vote_b?: {
                /**
                 * @description SignedMsgType is a type of signed message in the consensus.
                 *
                 *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                 *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                 * @default SIGNED_MSG_TYPE_UNKNOWN
                 * @enum {string}
                 */
                type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                /** Format: int64 */
                height?: string;
                /** Format: int32 */
                round?: number;
                /** BlockID */
                block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /** Format: date-time */
                timestamp?: string;
                /** Format: byte */
                validator_address?: string;
                /** Format: int32 */
                validator_index?: number;
                /**
                 * Format: byte
                 * @description Vote signature by the validator if they participated in consensus for the
                 * associated block.
                 */
                signature?: string;
                /**
                 * Format: byte
                 * @description Vote extension provided by the application. Only valid for precommit
                 * messages.
                 */
                extension?: string;
                /**
                 * Format: byte
                 * @description Vote extension signature by the validator if they participated in
                 * consensus for the associated block.
                 * Only valid for precommit messages.
                 */
                extension_signature?: string;
              };
              /** Format: int64 */
              total_voting_power?: string;
              /** Format: int64 */
              validator_power?: string;
              /** Format: date-time */
              timestamp?: string;
            };
            /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
            light_client_attack_evidence?: {
              conflicting_block?: {
                signed_header?: {
                  /** @description Header defines the structure of a block header. */
                  header?: {
                    /**
                     * basic block info
                     * @description Consensus captures the consensus rules for processing a block in the blockchain,
                     * including all blockchain data structures and the rules of the application's
                     * state transition machine.
                     */
                    version?: {
                      /** Format: uint64 */
                      block?: string;
                      /** Format: uint64 */
                      app?: string;
                    };
                    chain_id?: string;
                    /** Format: int64 */
                    height?: string;
                    /** Format: date-time */
                    time?: string;
                    /** BlockID */
                    last_block_id?: {
                      /** Format: byte */
                      hash?: string;
                      /** PartsetHeader */
                      part_set_header?: {
                        /** Format: int64 */
                        total?: number;
                        /** Format: byte */
                        hash?: string;
                      };
                    };
                    /**
                     * hashes of block data
                     * Format: byte
                     */
                    last_commit_hash?: string;
                    /** Format: byte */
                    data_hash?: string;
                    /**
                     * hashes from the app output from the prev block
                     * Format: byte
                     */
                    validators_hash?: string;
                    /** Format: byte */
                    next_validators_hash?: string;
                    /** Format: byte */
                    consensus_hash?: string;
                    /** Format: byte */
                    app_hash?: string;
                    /** Format: byte */
                    last_results_hash?: string;
                    /**
                     * consensus info
                     * Format: byte
                     */
                    evidence_hash?: string;
                    /** Format: byte */
                    proposer_address?: string;
                  };
                  /** @description Commit contains the evidence that a block was committed by a set of validators. */
                  commit?: {
                    /** Format: int64 */
                    height?: string;
                    /** Format: int32 */
                    round?: number;
                    /** BlockID */
                    block_id?: {
                      /** Format: byte */
                      hash?: string;
                      /** PartsetHeader */
                      part_set_header?: {
                        /** Format: int64 */
                        total?: number;
                        /** Format: byte */
                        hash?: string;
                      };
                    };
                    signatures?: ({
                        /**
                         * BlockIdFlag indicates which BlockID the signature is for
                         * @default BLOCK_ID_FLAG_UNKNOWN
                         * @enum {string}
                         */
                        block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        signature?: string;
                      })[];
                  };
                };
                validator_set?: {
                  validators?: {
                      /** Format: byte */
                      address?: string;
                      /** PublicKey defines the keys available for use with Validators */
                      pub_key?: {
                        /** Format: byte */
                        ed25519?: string;
                        /** Format: byte */
                        secp256k1?: string;
                      };
                      /** Format: int64 */
                      voting_power?: string;
                      /** Format: int64 */
                      proposer_priority?: string;
                    }[];
                  proposer?: {
                    /** Format: byte */
                    address?: string;
                    /** PublicKey defines the keys available for use with Validators */
                    pub_key?: {
                      /** Format: byte */
                      ed25519?: string;
                      /** Format: byte */
                      secp256k1?: string;
                    };
                    /** Format: int64 */
                    voting_power?: string;
                    /** Format: int64 */
                    proposer_priority?: string;
                  };
                  /** Format: int64 */
                  total_voting_power?: string;
                };
              };
              /** Format: int64 */
              common_height?: string;
              byzantine_validators?: {
                  /** Format: byte */
                  address?: string;
                  /** PublicKey defines the keys available for use with Validators */
                  pub_key?: {
                    /** Format: byte */
                    ed25519?: string;
                    /** Format: byte */
                    secp256k1?: string;
                  };
                  /** Format: int64 */
                  voting_power?: string;
                  /** Format: int64 */
                  proposer_priority?: string;
                }[];
              /** Format: int64 */
              total_voting_power?: string;
              /** Format: date-time */
              timestamp?: string;
            };
          })[];
      };
      /** @description Commit contains the evidence that a block was committed by a set of validators. */
      last_commit?: {
        /** Format: int64 */
        height?: string;
        /** Format: int32 */
        round?: number;
        /** BlockID */
        block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        signatures?: ({
            /**
             * BlockIdFlag indicates which BlockID the signature is for
             * @default BLOCK_ID_FLAG_UNKNOWN
             * @enum {string}
             */
            block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
            /** Format: byte */
            validator_address?: string;
            /** Format: date-time */
            timestamp?: string;
            /** Format: byte */
            signature?: string;
          })[];
      };
    };
    /** @description GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight RPC method. */
    "cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse": {
      /** BlockID */
      block_id?: {
        /** Format: byte */
        hash?: string;
        /** PartsetHeader */
        part_set_header?: {
          /** Format: int64 */
          total?: number;
          /** Format: byte */
          hash?: string;
        };
      };
      /** Deprecated: please use `sdk_block` instead */
      block?: {
        /** @description Header defines the structure of a block header. */
        header?: {
          /**
           * basic block info
           * @description Consensus captures the consensus rules for processing a block in the blockchain,
           * including all blockchain data structures and the rules of the application's
           * state transition machine.
           */
          version?: {
            /** Format: uint64 */
            block?: string;
            /** Format: uint64 */
            app?: string;
          };
          chain_id?: string;
          /** Format: int64 */
          height?: string;
          /** Format: date-time */
          time?: string;
          /** BlockID */
          last_block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /**
           * hashes of block data
           * Format: byte
           */
          last_commit_hash?: string;
          /** Format: byte */
          data_hash?: string;
          /**
           * hashes from the app output from the prev block
           * Format: byte
           */
          validators_hash?: string;
          /** Format: byte */
          next_validators_hash?: string;
          /** Format: byte */
          consensus_hash?: string;
          /** Format: byte */
          app_hash?: string;
          /** Format: byte */
          last_results_hash?: string;
          /**
           * consensus info
           * Format: byte
           */
          evidence_hash?: string;
          /** Format: byte */
          proposer_address?: string;
        };
        /** Data contains the set of transactions included in the block */
        data?: {
          /**
           * @description Txs that will be applied by state @ block.Height+1.
           * NOTE: not all txs here are valid.  We're just agreeing on the order first.
           * This means that block.AppHash does not include these txs.
           */
          txs?: string[];
        };
        evidence?: {
          evidence?: ({
              /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
              duplicate_vote_evidence?: {
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_a?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_b?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: int64 */
                validator_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
              /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
              light_client_attack_evidence?: {
                conflicting_block?: {
                  signed_header?: {
                    /** @description Header defines the structure of a block header. */
                    header?: {
                      /**
                       * basic block info
                       * @description Consensus captures the consensus rules for processing a block in the blockchain,
                       * including all blockchain data structures and the rules of the application's
                       * state transition machine.
                       */
                      version?: {
                        /** Format: uint64 */
                        block?: string;
                        /** Format: uint64 */
                        app?: string;
                      };
                      chain_id?: string;
                      /** Format: int64 */
                      height?: string;
                      /** Format: date-time */
                      time?: string;
                      /** BlockID */
                      last_block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      /**
                       * hashes of block data
                       * Format: byte
                       */
                      last_commit_hash?: string;
                      /** Format: byte */
                      data_hash?: string;
                      /**
                       * hashes from the app output from the prev block
                       * Format: byte
                       */
                      validators_hash?: string;
                      /** Format: byte */
                      next_validators_hash?: string;
                      /** Format: byte */
                      consensus_hash?: string;
                      /** Format: byte */
                      app_hash?: string;
                      /** Format: byte */
                      last_results_hash?: string;
                      /**
                       * consensus info
                       * Format: byte
                       */
                      evidence_hash?: string;
                      /** Format: byte */
                      proposer_address?: string;
                    };
                    /** @description Commit contains the evidence that a block was committed by a set of validators. */
                    commit?: {
                      /** Format: int64 */
                      height?: string;
                      /** Format: int32 */
                      round?: number;
                      /** BlockID */
                      block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      signatures?: ({
                          /**
                           * BlockIdFlag indicates which BlockID the signature is for
                           * @default BLOCK_ID_FLAG_UNKNOWN
                           * @enum {string}
                           */
                          block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                          /** Format: byte */
                          validator_address?: string;
                          /** Format: date-time */
                          timestamp?: string;
                          /** Format: byte */
                          signature?: string;
                        })[];
                    };
                  };
                  validator_set?: {
                    validators?: {
                        /** Format: byte */
                        address?: string;
                        /** PublicKey defines the keys available for use with Validators */
                        pub_key?: {
                          /** Format: byte */
                          ed25519?: string;
                          /** Format: byte */
                          secp256k1?: string;
                        };
                        /** Format: int64 */
                        voting_power?: string;
                        /** Format: int64 */
                        proposer_priority?: string;
                      }[];
                    proposer?: {
                      /** Format: byte */
                      address?: string;
                      /** PublicKey defines the keys available for use with Validators */
                      pub_key?: {
                        /** Format: byte */
                        ed25519?: string;
                        /** Format: byte */
                        secp256k1?: string;
                      };
                      /** Format: int64 */
                      voting_power?: string;
                      /** Format: int64 */
                      proposer_priority?: string;
                    };
                    /** Format: int64 */
                    total_voting_power?: string;
                  };
                };
                /** Format: int64 */
                common_height?: string;
                byzantine_validators?: {
                    /** Format: byte */
                    address?: string;
                    /** PublicKey defines the keys available for use with Validators */
                    pub_key?: {
                      /** Format: byte */
                      ed25519?: string;
                      /** Format: byte */
                      secp256k1?: string;
                    };
                    /** Format: int64 */
                    voting_power?: string;
                    /** Format: int64 */
                    proposer_priority?: string;
                  }[];
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
            })[];
        };
        /** @description Commit contains the evidence that a block was committed by a set of validators. */
        last_commit?: {
          /** Format: int64 */
          height?: string;
          /** Format: int32 */
          round?: number;
          /** BlockID */
          block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          signatures?: ({
              /**
               * BlockIdFlag indicates which BlockID the signature is for
               * @default BLOCK_ID_FLAG_UNKNOWN
               * @enum {string}
               */
              block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
              /** Format: byte */
              validator_address?: string;
              /** Format: date-time */
              timestamp?: string;
              /** Format: byte */
              signature?: string;
            })[];
        };
      };
      /**
       * Since: cosmos-sdk 0.47
       * @description Block is tendermint type Block, with the Header proposer address
       * field converted to bech32 string.
       */
      sdk_block?: {
        /** @description Header defines the structure of a Tendermint block header. */
        header?: {
          /**
           * basic block info
           * @description Consensus captures the consensus rules for processing a block in the blockchain,
           * including all blockchain data structures and the rules of the application's
           * state transition machine.
           */
          version?: {
            /** Format: uint64 */
            block?: string;
            /** Format: uint64 */
            app?: string;
          };
          chain_id?: string;
          /** Format: int64 */
          height?: string;
          /** Format: date-time */
          time?: string;
          /** BlockID */
          last_block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /**
           * hashes of block data
           * Format: byte
           */
          last_commit_hash?: string;
          /** Format: byte */
          data_hash?: string;
          /**
           * hashes from the app output from the prev block
           * Format: byte
           */
          validators_hash?: string;
          /** Format: byte */
          next_validators_hash?: string;
          /** Format: byte */
          consensus_hash?: string;
          /** Format: byte */
          app_hash?: string;
          /** Format: byte */
          last_results_hash?: string;
          /**
           * consensus info
           * Format: byte
           */
          evidence_hash?: string;
          /**
           * @description proposer_address is the original block proposer address, formatted as a Bech32 string.
           * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
           * for better UX.
           */
          proposer_address?: string;
        };
        /** Data contains the set of transactions included in the block */
        data?: {
          /**
           * @description Txs that will be applied by state @ block.Height+1.
           * NOTE: not all txs here are valid.  We're just agreeing on the order first.
           * This means that block.AppHash does not include these txs.
           */
          txs?: string[];
        };
        evidence?: {
          evidence?: ({
              /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
              duplicate_vote_evidence?: {
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_a?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_b?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: int64 */
                validator_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
              /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
              light_client_attack_evidence?: {
                conflicting_block?: {
                  signed_header?: {
                    /** @description Header defines the structure of a block header. */
                    header?: {
                      /**
                       * basic block info
                       * @description Consensus captures the consensus rules for processing a block in the blockchain,
                       * including all blockchain data structures and the rules of the application's
                       * state transition machine.
                       */
                      version?: {
                        /** Format: uint64 */
                        block?: string;
                        /** Format: uint64 */
                        app?: string;
                      };
                      chain_id?: string;
                      /** Format: int64 */
                      height?: string;
                      /** Format: date-time */
                      time?: string;
                      /** BlockID */
                      last_block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      /**
                       * hashes of block data
                       * Format: byte
                       */
                      last_commit_hash?: string;
                      /** Format: byte */
                      data_hash?: string;
                      /**
                       * hashes from the app output from the prev block
                       * Format: byte
                       */
                      validators_hash?: string;
                      /** Format: byte */
                      next_validators_hash?: string;
                      /** Format: byte */
                      consensus_hash?: string;
                      /** Format: byte */
                      app_hash?: string;
                      /** Format: byte */
                      last_results_hash?: string;
                      /**
                       * consensus info
                       * Format: byte
                       */
                      evidence_hash?: string;
                      /** Format: byte */
                      proposer_address?: string;
                    };
                    /** @description Commit contains the evidence that a block was committed by a set of validators. */
                    commit?: {
                      /** Format: int64 */
                      height?: string;
                      /** Format: int32 */
                      round?: number;
                      /** BlockID */
                      block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      signatures?: ({
                          /**
                           * BlockIdFlag indicates which BlockID the signature is for
                           * @default BLOCK_ID_FLAG_UNKNOWN
                           * @enum {string}
                           */
                          block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                          /** Format: byte */
                          validator_address?: string;
                          /** Format: date-time */
                          timestamp?: string;
                          /** Format: byte */
                          signature?: string;
                        })[];
                    };
                  };
                  validator_set?: {
                    validators?: {
                        /** Format: byte */
                        address?: string;
                        /** PublicKey defines the keys available for use with Validators */
                        pub_key?: {
                          /** Format: byte */
                          ed25519?: string;
                          /** Format: byte */
                          secp256k1?: string;
                        };
                        /** Format: int64 */
                        voting_power?: string;
                        /** Format: int64 */
                        proposer_priority?: string;
                      }[];
                    proposer?: {
                      /** Format: byte */
                      address?: string;
                      /** PublicKey defines the keys available for use with Validators */
                      pub_key?: {
                        /** Format: byte */
                        ed25519?: string;
                        /** Format: byte */
                        secp256k1?: string;
                      };
                      /** Format: int64 */
                      voting_power?: string;
                      /** Format: int64 */
                      proposer_priority?: string;
                    };
                    /** Format: int64 */
                    total_voting_power?: string;
                  };
                };
                /** Format: int64 */
                common_height?: string;
                byzantine_validators?: {
                    /** Format: byte */
                    address?: string;
                    /** PublicKey defines the keys available for use with Validators */
                    pub_key?: {
                      /** Format: byte */
                      ed25519?: string;
                      /** Format: byte */
                      secp256k1?: string;
                    };
                    /** Format: int64 */
                    voting_power?: string;
                    /** Format: int64 */
                    proposer_priority?: string;
                  }[];
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
            })[];
        };
        /** @description Commit contains the evidence that a block was committed by a set of validators. */
        last_commit?: {
          /** Format: int64 */
          height?: string;
          /** Format: int32 */
          round?: number;
          /** BlockID */
          block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          signatures?: ({
              /**
               * BlockIdFlag indicates which BlockID the signature is for
               * @default BLOCK_ID_FLAG_UNKNOWN
               * @enum {string}
               */
              block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
              /** Format: byte */
              validator_address?: string;
              /** Format: date-time */
              timestamp?: string;
              /** Format: byte */
              signature?: string;
            })[];
        };
      };
    };
    /** @description GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method. */
    "cosmos.base.tendermint.v1beta1.GetLatestBlockResponse": {
      /** BlockID */
      block_id?: {
        /** Format: byte */
        hash?: string;
        /** PartsetHeader */
        part_set_header?: {
          /** Format: int64 */
          total?: number;
          /** Format: byte */
          hash?: string;
        };
      };
      /** Deprecated: please use `sdk_block` instead */
      block?: {
        /** @description Header defines the structure of a block header. */
        header?: {
          /**
           * basic block info
           * @description Consensus captures the consensus rules for processing a block in the blockchain,
           * including all blockchain data structures and the rules of the application's
           * state transition machine.
           */
          version?: {
            /** Format: uint64 */
            block?: string;
            /** Format: uint64 */
            app?: string;
          };
          chain_id?: string;
          /** Format: int64 */
          height?: string;
          /** Format: date-time */
          time?: string;
          /** BlockID */
          last_block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /**
           * hashes of block data
           * Format: byte
           */
          last_commit_hash?: string;
          /** Format: byte */
          data_hash?: string;
          /**
           * hashes from the app output from the prev block
           * Format: byte
           */
          validators_hash?: string;
          /** Format: byte */
          next_validators_hash?: string;
          /** Format: byte */
          consensus_hash?: string;
          /** Format: byte */
          app_hash?: string;
          /** Format: byte */
          last_results_hash?: string;
          /**
           * consensus info
           * Format: byte
           */
          evidence_hash?: string;
          /** Format: byte */
          proposer_address?: string;
        };
        /** Data contains the set of transactions included in the block */
        data?: {
          /**
           * @description Txs that will be applied by state @ block.Height+1.
           * NOTE: not all txs here are valid.  We're just agreeing on the order first.
           * This means that block.AppHash does not include these txs.
           */
          txs?: string[];
        };
        evidence?: {
          evidence?: ({
              /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
              duplicate_vote_evidence?: {
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_a?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_b?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: int64 */
                validator_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
              /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
              light_client_attack_evidence?: {
                conflicting_block?: {
                  signed_header?: {
                    /** @description Header defines the structure of a block header. */
                    header?: {
                      /**
                       * basic block info
                       * @description Consensus captures the consensus rules for processing a block in the blockchain,
                       * including all blockchain data structures and the rules of the application's
                       * state transition machine.
                       */
                      version?: {
                        /** Format: uint64 */
                        block?: string;
                        /** Format: uint64 */
                        app?: string;
                      };
                      chain_id?: string;
                      /** Format: int64 */
                      height?: string;
                      /** Format: date-time */
                      time?: string;
                      /** BlockID */
                      last_block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      /**
                       * hashes of block data
                       * Format: byte
                       */
                      last_commit_hash?: string;
                      /** Format: byte */
                      data_hash?: string;
                      /**
                       * hashes from the app output from the prev block
                       * Format: byte
                       */
                      validators_hash?: string;
                      /** Format: byte */
                      next_validators_hash?: string;
                      /** Format: byte */
                      consensus_hash?: string;
                      /** Format: byte */
                      app_hash?: string;
                      /** Format: byte */
                      last_results_hash?: string;
                      /**
                       * consensus info
                       * Format: byte
                       */
                      evidence_hash?: string;
                      /** Format: byte */
                      proposer_address?: string;
                    };
                    /** @description Commit contains the evidence that a block was committed by a set of validators. */
                    commit?: {
                      /** Format: int64 */
                      height?: string;
                      /** Format: int32 */
                      round?: number;
                      /** BlockID */
                      block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      signatures?: ({
                          /**
                           * BlockIdFlag indicates which BlockID the signature is for
                           * @default BLOCK_ID_FLAG_UNKNOWN
                           * @enum {string}
                           */
                          block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                          /** Format: byte */
                          validator_address?: string;
                          /** Format: date-time */
                          timestamp?: string;
                          /** Format: byte */
                          signature?: string;
                        })[];
                    };
                  };
                  validator_set?: {
                    validators?: {
                        /** Format: byte */
                        address?: string;
                        /** PublicKey defines the keys available for use with Validators */
                        pub_key?: {
                          /** Format: byte */
                          ed25519?: string;
                          /** Format: byte */
                          secp256k1?: string;
                        };
                        /** Format: int64 */
                        voting_power?: string;
                        /** Format: int64 */
                        proposer_priority?: string;
                      }[];
                    proposer?: {
                      /** Format: byte */
                      address?: string;
                      /** PublicKey defines the keys available for use with Validators */
                      pub_key?: {
                        /** Format: byte */
                        ed25519?: string;
                        /** Format: byte */
                        secp256k1?: string;
                      };
                      /** Format: int64 */
                      voting_power?: string;
                      /** Format: int64 */
                      proposer_priority?: string;
                    };
                    /** Format: int64 */
                    total_voting_power?: string;
                  };
                };
                /** Format: int64 */
                common_height?: string;
                byzantine_validators?: {
                    /** Format: byte */
                    address?: string;
                    /** PublicKey defines the keys available for use with Validators */
                    pub_key?: {
                      /** Format: byte */
                      ed25519?: string;
                      /** Format: byte */
                      secp256k1?: string;
                    };
                    /** Format: int64 */
                    voting_power?: string;
                    /** Format: int64 */
                    proposer_priority?: string;
                  }[];
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
            })[];
        };
        /** @description Commit contains the evidence that a block was committed by a set of validators. */
        last_commit?: {
          /** Format: int64 */
          height?: string;
          /** Format: int32 */
          round?: number;
          /** BlockID */
          block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          signatures?: ({
              /**
               * BlockIdFlag indicates which BlockID the signature is for
               * @default BLOCK_ID_FLAG_UNKNOWN
               * @enum {string}
               */
              block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
              /** Format: byte */
              validator_address?: string;
              /** Format: date-time */
              timestamp?: string;
              /** Format: byte */
              signature?: string;
            })[];
        };
      };
      /**
       * Since: cosmos-sdk 0.47
       * @description Block is tendermint type Block, with the Header proposer address
       * field converted to bech32 string.
       */
      sdk_block?: {
        /** @description Header defines the structure of a Tendermint block header. */
        header?: {
          /**
           * basic block info
           * @description Consensus captures the consensus rules for processing a block in the blockchain,
           * including all blockchain data structures and the rules of the application's
           * state transition machine.
           */
          version?: {
            /** Format: uint64 */
            block?: string;
            /** Format: uint64 */
            app?: string;
          };
          chain_id?: string;
          /** Format: int64 */
          height?: string;
          /** Format: date-time */
          time?: string;
          /** BlockID */
          last_block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /**
           * hashes of block data
           * Format: byte
           */
          last_commit_hash?: string;
          /** Format: byte */
          data_hash?: string;
          /**
           * hashes from the app output from the prev block
           * Format: byte
           */
          validators_hash?: string;
          /** Format: byte */
          next_validators_hash?: string;
          /** Format: byte */
          consensus_hash?: string;
          /** Format: byte */
          app_hash?: string;
          /** Format: byte */
          last_results_hash?: string;
          /**
           * consensus info
           * Format: byte
           */
          evidence_hash?: string;
          /**
           * @description proposer_address is the original block proposer address, formatted as a Bech32 string.
           * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
           * for better UX.
           */
          proposer_address?: string;
        };
        /** Data contains the set of transactions included in the block */
        data?: {
          /**
           * @description Txs that will be applied by state @ block.Height+1.
           * NOTE: not all txs here are valid.  We're just agreeing on the order first.
           * This means that block.AppHash does not include these txs.
           */
          txs?: string[];
        };
        evidence?: {
          evidence?: ({
              /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
              duplicate_vote_evidence?: {
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_a?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_b?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: int64 */
                validator_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
              /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
              light_client_attack_evidence?: {
                conflicting_block?: {
                  signed_header?: {
                    /** @description Header defines the structure of a block header. */
                    header?: {
                      /**
                       * basic block info
                       * @description Consensus captures the consensus rules for processing a block in the blockchain,
                       * including all blockchain data structures and the rules of the application's
                       * state transition machine.
                       */
                      version?: {
                        /** Format: uint64 */
                        block?: string;
                        /** Format: uint64 */
                        app?: string;
                      };
                      chain_id?: string;
                      /** Format: int64 */
                      height?: string;
                      /** Format: date-time */
                      time?: string;
                      /** BlockID */
                      last_block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      /**
                       * hashes of block data
                       * Format: byte
                       */
                      last_commit_hash?: string;
                      /** Format: byte */
                      data_hash?: string;
                      /**
                       * hashes from the app output from the prev block
                       * Format: byte
                       */
                      validators_hash?: string;
                      /** Format: byte */
                      next_validators_hash?: string;
                      /** Format: byte */
                      consensus_hash?: string;
                      /** Format: byte */
                      app_hash?: string;
                      /** Format: byte */
                      last_results_hash?: string;
                      /**
                       * consensus info
                       * Format: byte
                       */
                      evidence_hash?: string;
                      /** Format: byte */
                      proposer_address?: string;
                    };
                    /** @description Commit contains the evidence that a block was committed by a set of validators. */
                    commit?: {
                      /** Format: int64 */
                      height?: string;
                      /** Format: int32 */
                      round?: number;
                      /** BlockID */
                      block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      signatures?: ({
                          /**
                           * BlockIdFlag indicates which BlockID the signature is for
                           * @default BLOCK_ID_FLAG_UNKNOWN
                           * @enum {string}
                           */
                          block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                          /** Format: byte */
                          validator_address?: string;
                          /** Format: date-time */
                          timestamp?: string;
                          /** Format: byte */
                          signature?: string;
                        })[];
                    };
                  };
                  validator_set?: {
                    validators?: {
                        /** Format: byte */
                        address?: string;
                        /** PublicKey defines the keys available for use with Validators */
                        pub_key?: {
                          /** Format: byte */
                          ed25519?: string;
                          /** Format: byte */
                          secp256k1?: string;
                        };
                        /** Format: int64 */
                        voting_power?: string;
                        /** Format: int64 */
                        proposer_priority?: string;
                      }[];
                    proposer?: {
                      /** Format: byte */
                      address?: string;
                      /** PublicKey defines the keys available for use with Validators */
                      pub_key?: {
                        /** Format: byte */
                        ed25519?: string;
                        /** Format: byte */
                        secp256k1?: string;
                      };
                      /** Format: int64 */
                      voting_power?: string;
                      /** Format: int64 */
                      proposer_priority?: string;
                    };
                    /** Format: int64 */
                    total_voting_power?: string;
                  };
                };
                /** Format: int64 */
                common_height?: string;
                byzantine_validators?: {
                    /** Format: byte */
                    address?: string;
                    /** PublicKey defines the keys available for use with Validators */
                    pub_key?: {
                      /** Format: byte */
                      ed25519?: string;
                      /** Format: byte */
                      secp256k1?: string;
                    };
                    /** Format: int64 */
                    voting_power?: string;
                    /** Format: int64 */
                    proposer_priority?: string;
                  }[];
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
            })[];
        };
        /** @description Commit contains the evidence that a block was committed by a set of validators. */
        last_commit?: {
          /** Format: int64 */
          height?: string;
          /** Format: int32 */
          round?: number;
          /** BlockID */
          block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          signatures?: ({
              /**
               * BlockIdFlag indicates which BlockID the signature is for
               * @default BLOCK_ID_FLAG_UNKNOWN
               * @enum {string}
               */
              block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
              /** Format: byte */
              validator_address?: string;
              /** Format: date-time */
              timestamp?: string;
              /** Format: byte */
              signature?: string;
            })[];
        };
      };
    };
    /** @description GetLatestValidatorSetResponse is the response type for the Query/GetValidatorSetByHeight RPC method. */
    "cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse": {
      /** Format: int64 */
      block_height?: string;
      validators?: ({
          address?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          pub_key?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /** Format: int64 */
          voting_power?: string;
          /** Format: int64 */
          proposer_priority?: string;
        })[];
      /** @description pagination defines an pagination for the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC method. */
    "cosmos.base.tendermint.v1beta1.GetNodeInfoResponse": {
      default_node_info?: {
        protocol_version?: {
          /** Format: uint64 */
          p2p?: string;
          /** Format: uint64 */
          block?: string;
          /** Format: uint64 */
          app?: string;
        };
        default_node_id?: string;
        listen_addr?: string;
        network?: string;
        version?: string;
        /** Format: byte */
        channels?: string;
        moniker?: string;
        other?: {
          tx_index?: string;
          rpc_address?: string;
        };
      };
      /** @description VersionInfo is the type for the GetNodeInfoResponse message. */
      application_version?: {
        name?: string;
        app_name?: string;
        version?: string;
        git_commit?: string;
        build_tags?: string;
        go_version?: string;
        build_deps?: {
            /** module path */
            path?: string;
            /** module version */
            version?: string;
            /** checksum */
            sum?: string;
          }[];
        /** Since: cosmos-sdk 0.43 */
        cosmos_sdk_version?: string;
      };
    };
    /** @description GetSyncingResponse is the response type for the Query/GetSyncing RPC method. */
    "cosmos.base.tendermint.v1beta1.GetSyncingResponse": {
      syncing?: boolean;
    };
    /** @description GetValidatorSetByHeightResponse is the response type for the Query/GetValidatorSetByHeight RPC method. */
    "cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse": {
      /** Format: int64 */
      block_height?: string;
      validators?: ({
          address?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          pub_key?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /** Format: int64 */
          voting_power?: string;
          /** Format: int64 */
          proposer_priority?: string;
        })[];
      /** @description pagination defines an pagination for the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description Header defines the structure of a Tendermint block header. */
    "cosmos.base.tendermint.v1beta1.Header": {
      /**
       * basic block info
       * @description Consensus captures the consensus rules for processing a block in the blockchain,
       * including all blockchain data structures and the rules of the application's
       * state transition machine.
       */
      version?: {
        /** Format: uint64 */
        block?: string;
        /** Format: uint64 */
        app?: string;
      };
      chain_id?: string;
      /** Format: int64 */
      height?: string;
      /** Format: date-time */
      time?: string;
      /** BlockID */
      last_block_id?: {
        /** Format: byte */
        hash?: string;
        /** PartsetHeader */
        part_set_header?: {
          /** Format: int64 */
          total?: number;
          /** Format: byte */
          hash?: string;
        };
      };
      /**
       * hashes of block data
       * Format: byte
       */
      last_commit_hash?: string;
      /** Format: byte */
      data_hash?: string;
      /**
       * hashes from the app output from the prev block
       * Format: byte
       */
      validators_hash?: string;
      /** Format: byte */
      next_validators_hash?: string;
      /** Format: byte */
      consensus_hash?: string;
      /** Format: byte */
      app_hash?: string;
      /** Format: byte */
      last_results_hash?: string;
      /**
       * consensus info
       * Format: byte
       */
      evidence_hash?: string;
      /**
       * @description proposer_address is the original block proposer address, formatted as a Bech32 string.
       * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
       * for better UX.
       */
      proposer_address?: string;
    };
    /** Module is the type for VersionInfo */
    "cosmos.base.tendermint.v1beta1.Module": {
      /** module path */
      path?: string;
      /** module version */
      version?: string;
      /** checksum */
      sum?: string;
    };
    /**
     * @description ProofOp defines an operation used for calculating Merkle root. The data could
     * be arbitrary format, providing necessary data for example neighbouring node
     * hash.
     *
     * Note: This type is a duplicate of the ProofOp proto type defined in Tendermint.
     */
    "cosmos.base.tendermint.v1beta1.ProofOp": {
      type?: string;
      /** Format: byte */
      key?: string;
      /** Format: byte */
      data?: string;
    };
    /**
     * @description ProofOps is Merkle proof defined by the list of ProofOps.
     *
     * Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
     */
    "cosmos.base.tendermint.v1beta1.ProofOps": {
      ops?: {
          type?: string;
          /** Format: byte */
          key?: string;
          /** Format: byte */
          data?: string;
        }[];
    };
    /** @description Validator is the type for the validator-set. */
    "cosmos.base.tendermint.v1beta1.Validator": {
      address?: string;
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      pub_key?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /** Format: int64 */
      voting_power?: string;
      /** Format: int64 */
      proposer_priority?: string;
    };
    /** @description VersionInfo is the type for the GetNodeInfoResponse message. */
    "cosmos.base.tendermint.v1beta1.VersionInfo": {
      name?: string;
      app_name?: string;
      version?: string;
      git_commit?: string;
      build_tags?: string;
      go_version?: string;
      build_deps?: {
          /** module path */
          path?: string;
          /** module version */
          version?: string;
          /** checksum */
          sum?: string;
        }[];
      /** Since: cosmos-sdk 0.43 */
      cosmos_sdk_version?: string;
    };
    /** PublicKey defines the keys available for use with Validators */
    "tendermint.crypto.PublicKey": {
      /** Format: byte */
      ed25519?: string;
      /** Format: byte */
      secp256k1?: string;
    };
    "tendermint.p2p.DefaultNodeInfo": {
      protocol_version?: {
        /** Format: uint64 */
        p2p?: string;
        /** Format: uint64 */
        block?: string;
        /** Format: uint64 */
        app?: string;
      };
      default_node_id?: string;
      listen_addr?: string;
      network?: string;
      version?: string;
      /** Format: byte */
      channels?: string;
      moniker?: string;
      other?: {
        tx_index?: string;
        rpc_address?: string;
      };
    };
    "tendermint.p2p.DefaultNodeInfoOther": {
      tx_index?: string;
      rpc_address?: string;
    };
    "tendermint.p2p.ProtocolVersion": {
      /** Format: uint64 */
      p2p?: string;
      /** Format: uint64 */
      block?: string;
      /** Format: uint64 */
      app?: string;
    };
    "tendermint.types.Block": {
      /** @description Header defines the structure of a block header. */
      header?: {
        /**
         * basic block info
         * @description Consensus captures the consensus rules for processing a block in the blockchain,
         * including all blockchain data structures and the rules of the application's
         * state transition machine.
         */
        version?: {
          /** Format: uint64 */
          block?: string;
          /** Format: uint64 */
          app?: string;
        };
        chain_id?: string;
        /** Format: int64 */
        height?: string;
        /** Format: date-time */
        time?: string;
        /** BlockID */
        last_block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        /**
         * hashes of block data
         * Format: byte
         */
        last_commit_hash?: string;
        /** Format: byte */
        data_hash?: string;
        /**
         * hashes from the app output from the prev block
         * Format: byte
         */
        validators_hash?: string;
        /** Format: byte */
        next_validators_hash?: string;
        /** Format: byte */
        consensus_hash?: string;
        /** Format: byte */
        app_hash?: string;
        /** Format: byte */
        last_results_hash?: string;
        /**
         * consensus info
         * Format: byte
         */
        evidence_hash?: string;
        /** Format: byte */
        proposer_address?: string;
      };
      /** Data contains the set of transactions included in the block */
      data?: {
        /**
         * @description Txs that will be applied by state @ block.Height+1.
         * NOTE: not all txs here are valid.  We're just agreeing on the order first.
         * This means that block.AppHash does not include these txs.
         */
        txs?: string[];
      };
      evidence?: {
        evidence?: ({
            /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
            duplicate_vote_evidence?: {
              /**
               * @description Vote represents a prevote or precommit vote from validators for
               * consensus.
               */
              vote_a?: {
                /**
                 * @description SignedMsgType is a type of signed message in the consensus.
                 *
                 *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                 *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                 * @default SIGNED_MSG_TYPE_UNKNOWN
                 * @enum {string}
                 */
                type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                /** Format: int64 */
                height?: string;
                /** Format: int32 */
                round?: number;
                /** BlockID */
                block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /** Format: date-time */
                timestamp?: string;
                /** Format: byte */
                validator_address?: string;
                /** Format: int32 */
                validator_index?: number;
                /**
                 * Format: byte
                 * @description Vote signature by the validator if they participated in consensus for the
                 * associated block.
                 */
                signature?: string;
                /**
                 * Format: byte
                 * @description Vote extension provided by the application. Only valid for precommit
                 * messages.
                 */
                extension?: string;
                /**
                 * Format: byte
                 * @description Vote extension signature by the validator if they participated in
                 * consensus for the associated block.
                 * Only valid for precommit messages.
                 */
                extension_signature?: string;
              };
              /**
               * @description Vote represents a prevote or precommit vote from validators for
               * consensus.
               */
              vote_b?: {
                /**
                 * @description SignedMsgType is a type of signed message in the consensus.
                 *
                 *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                 *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                 * @default SIGNED_MSG_TYPE_UNKNOWN
                 * @enum {string}
                 */
                type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                /** Format: int64 */
                height?: string;
                /** Format: int32 */
                round?: number;
                /** BlockID */
                block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /** Format: date-time */
                timestamp?: string;
                /** Format: byte */
                validator_address?: string;
                /** Format: int32 */
                validator_index?: number;
                /**
                 * Format: byte
                 * @description Vote signature by the validator if they participated in consensus for the
                 * associated block.
                 */
                signature?: string;
                /**
                 * Format: byte
                 * @description Vote extension provided by the application. Only valid for precommit
                 * messages.
                 */
                extension?: string;
                /**
                 * Format: byte
                 * @description Vote extension signature by the validator if they participated in
                 * consensus for the associated block.
                 * Only valid for precommit messages.
                 */
                extension_signature?: string;
              };
              /** Format: int64 */
              total_voting_power?: string;
              /** Format: int64 */
              validator_power?: string;
              /** Format: date-time */
              timestamp?: string;
            };
            /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
            light_client_attack_evidence?: {
              conflicting_block?: {
                signed_header?: {
                  /** @description Header defines the structure of a block header. */
                  header?: {
                    /**
                     * basic block info
                     * @description Consensus captures the consensus rules for processing a block in the blockchain,
                     * including all blockchain data structures and the rules of the application's
                     * state transition machine.
                     */
                    version?: {
                      /** Format: uint64 */
                      block?: string;
                      /** Format: uint64 */
                      app?: string;
                    };
                    chain_id?: string;
                    /** Format: int64 */
                    height?: string;
                    /** Format: date-time */
                    time?: string;
                    /** BlockID */
                    last_block_id?: {
                      /** Format: byte */
                      hash?: string;
                      /** PartsetHeader */
                      part_set_header?: {
                        /** Format: int64 */
                        total?: number;
                        /** Format: byte */
                        hash?: string;
                      };
                    };
                    /**
                     * hashes of block data
                     * Format: byte
                     */
                    last_commit_hash?: string;
                    /** Format: byte */
                    data_hash?: string;
                    /**
                     * hashes from the app output from the prev block
                     * Format: byte
                     */
                    validators_hash?: string;
                    /** Format: byte */
                    next_validators_hash?: string;
                    /** Format: byte */
                    consensus_hash?: string;
                    /** Format: byte */
                    app_hash?: string;
                    /** Format: byte */
                    last_results_hash?: string;
                    /**
                     * consensus info
                     * Format: byte
                     */
                    evidence_hash?: string;
                    /** Format: byte */
                    proposer_address?: string;
                  };
                  /** @description Commit contains the evidence that a block was committed by a set of validators. */
                  commit?: {
                    /** Format: int64 */
                    height?: string;
                    /** Format: int32 */
                    round?: number;
                    /** BlockID */
                    block_id?: {
                      /** Format: byte */
                      hash?: string;
                      /** PartsetHeader */
                      part_set_header?: {
                        /** Format: int64 */
                        total?: number;
                        /** Format: byte */
                        hash?: string;
                      };
                    };
                    signatures?: ({
                        /**
                         * BlockIdFlag indicates which BlockID the signature is for
                         * @default BLOCK_ID_FLAG_UNKNOWN
                         * @enum {string}
                         */
                        block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        signature?: string;
                      })[];
                  };
                };
                validator_set?: {
                  validators?: {
                      /** Format: byte */
                      address?: string;
                      /** PublicKey defines the keys available for use with Validators */
                      pub_key?: {
                        /** Format: byte */
                        ed25519?: string;
                        /** Format: byte */
                        secp256k1?: string;
                      };
                      /** Format: int64 */
                      voting_power?: string;
                      /** Format: int64 */
                      proposer_priority?: string;
                    }[];
                  proposer?: {
                    /** Format: byte */
                    address?: string;
                    /** PublicKey defines the keys available for use with Validators */
                    pub_key?: {
                      /** Format: byte */
                      ed25519?: string;
                      /** Format: byte */
                      secp256k1?: string;
                    };
                    /** Format: int64 */
                    voting_power?: string;
                    /** Format: int64 */
                    proposer_priority?: string;
                  };
                  /** Format: int64 */
                  total_voting_power?: string;
                };
              };
              /** Format: int64 */
              common_height?: string;
              byzantine_validators?: {
                  /** Format: byte */
                  address?: string;
                  /** PublicKey defines the keys available for use with Validators */
                  pub_key?: {
                    /** Format: byte */
                    ed25519?: string;
                    /** Format: byte */
                    secp256k1?: string;
                  };
                  /** Format: int64 */
                  voting_power?: string;
                  /** Format: int64 */
                  proposer_priority?: string;
                }[];
              /** Format: int64 */
              total_voting_power?: string;
              /** Format: date-time */
              timestamp?: string;
            };
          })[];
      };
      /** @description Commit contains the evidence that a block was committed by a set of validators. */
      last_commit?: {
        /** Format: int64 */
        height?: string;
        /** Format: int32 */
        round?: number;
        /** BlockID */
        block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        signatures?: ({
            /**
             * BlockIdFlag indicates which BlockID the signature is for
             * @default BLOCK_ID_FLAG_UNKNOWN
             * @enum {string}
             */
            block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
            /** Format: byte */
            validator_address?: string;
            /** Format: date-time */
            timestamp?: string;
            /** Format: byte */
            signature?: string;
          })[];
      };
    };
    /** BlockID */
    "tendermint.types.BlockID": {
      /** Format: byte */
      hash?: string;
      /** PartsetHeader */
      part_set_header?: {
        /** Format: int64 */
        total?: number;
        /** Format: byte */
        hash?: string;
      };
    };
    /**
     * BlockIdFlag indicates which BlockID the signature is for
     * @default BLOCK_ID_FLAG_UNKNOWN
     * @enum {string}
     */
    "tendermint.types.BlockIDFlag": "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
    /** @description Commit contains the evidence that a block was committed by a set of validators. */
    "tendermint.types.Commit": {
      /** Format: int64 */
      height?: string;
      /** Format: int32 */
      round?: number;
      /** BlockID */
      block_id?: {
        /** Format: byte */
        hash?: string;
        /** PartsetHeader */
        part_set_header?: {
          /** Format: int64 */
          total?: number;
          /** Format: byte */
          hash?: string;
        };
      };
      signatures?: ({
          /**
           * BlockIdFlag indicates which BlockID the signature is for
           * @default BLOCK_ID_FLAG_UNKNOWN
           * @enum {string}
           */
          block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
          /** Format: byte */
          validator_address?: string;
          /** Format: date-time */
          timestamp?: string;
          /** Format: byte */
          signature?: string;
        })[];
    };
    /** @description CommitSig is a part of the Vote included in a Commit. */
    "tendermint.types.CommitSig": {
      /**
       * BlockIdFlag indicates which BlockID the signature is for
       * @default BLOCK_ID_FLAG_UNKNOWN
       * @enum {string}
       */
      block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
      /** Format: byte */
      validator_address?: string;
      /** Format: date-time */
      timestamp?: string;
      /** Format: byte */
      signature?: string;
    };
    /** Data contains the set of transactions included in the block */
    "tendermint.types.Data": {
      /**
       * @description Txs that will be applied by state @ block.Height+1.
       * NOTE: not all txs here are valid.  We're just agreeing on the order first.
       * This means that block.AppHash does not include these txs.
       */
      txs?: string[];
    };
    /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
    "tendermint.types.DuplicateVoteEvidence": {
      /**
       * @description Vote represents a prevote or precommit vote from validators for
       * consensus.
       */
      vote_a?: {
        /**
         * @description SignedMsgType is a type of signed message in the consensus.
         *
         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
         * @default SIGNED_MSG_TYPE_UNKNOWN
         * @enum {string}
         */
        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
        /** Format: int64 */
        height?: string;
        /** Format: int32 */
        round?: number;
        /** BlockID */
        block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        /** Format: date-time */
        timestamp?: string;
        /** Format: byte */
        validator_address?: string;
        /** Format: int32 */
        validator_index?: number;
        /**
         * Format: byte
         * @description Vote signature by the validator if they participated in consensus for the
         * associated block.
         */
        signature?: string;
        /**
         * Format: byte
         * @description Vote extension provided by the application. Only valid for precommit
         * messages.
         */
        extension?: string;
        /**
         * Format: byte
         * @description Vote extension signature by the validator if they participated in
         * consensus for the associated block.
         * Only valid for precommit messages.
         */
        extension_signature?: string;
      };
      /**
       * @description Vote represents a prevote or precommit vote from validators for
       * consensus.
       */
      vote_b?: {
        /**
         * @description SignedMsgType is a type of signed message in the consensus.
         *
         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
         * @default SIGNED_MSG_TYPE_UNKNOWN
         * @enum {string}
         */
        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
        /** Format: int64 */
        height?: string;
        /** Format: int32 */
        round?: number;
        /** BlockID */
        block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        /** Format: date-time */
        timestamp?: string;
        /** Format: byte */
        validator_address?: string;
        /** Format: int32 */
        validator_index?: number;
        /**
         * Format: byte
         * @description Vote signature by the validator if they participated in consensus for the
         * associated block.
         */
        signature?: string;
        /**
         * Format: byte
         * @description Vote extension provided by the application. Only valid for precommit
         * messages.
         */
        extension?: string;
        /**
         * Format: byte
         * @description Vote extension signature by the validator if they participated in
         * consensus for the associated block.
         * Only valid for precommit messages.
         */
        extension_signature?: string;
      };
      /** Format: int64 */
      total_voting_power?: string;
      /** Format: int64 */
      validator_power?: string;
      /** Format: date-time */
      timestamp?: string;
    };
    "tendermint.types.Evidence": {
      /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
      duplicate_vote_evidence?: {
        /**
         * @description Vote represents a prevote or precommit vote from validators for
         * consensus.
         */
        vote_a?: {
          /**
           * @description SignedMsgType is a type of signed message in the consensus.
           *
           *  - SIGNED_MSG_TYPE_PREVOTE: Votes
           *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
           * @default SIGNED_MSG_TYPE_UNKNOWN
           * @enum {string}
           */
          type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
          /** Format: int64 */
          height?: string;
          /** Format: int32 */
          round?: number;
          /** BlockID */
          block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /** Format: date-time */
          timestamp?: string;
          /** Format: byte */
          validator_address?: string;
          /** Format: int32 */
          validator_index?: number;
          /**
           * Format: byte
           * @description Vote signature by the validator if they participated in consensus for the
           * associated block.
           */
          signature?: string;
          /**
           * Format: byte
           * @description Vote extension provided by the application. Only valid for precommit
           * messages.
           */
          extension?: string;
          /**
           * Format: byte
           * @description Vote extension signature by the validator if they participated in
           * consensus for the associated block.
           * Only valid for precommit messages.
           */
          extension_signature?: string;
        };
        /**
         * @description Vote represents a prevote or precommit vote from validators for
         * consensus.
         */
        vote_b?: {
          /**
           * @description SignedMsgType is a type of signed message in the consensus.
           *
           *  - SIGNED_MSG_TYPE_PREVOTE: Votes
           *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
           * @default SIGNED_MSG_TYPE_UNKNOWN
           * @enum {string}
           */
          type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
          /** Format: int64 */
          height?: string;
          /** Format: int32 */
          round?: number;
          /** BlockID */
          block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /** Format: date-time */
          timestamp?: string;
          /** Format: byte */
          validator_address?: string;
          /** Format: int32 */
          validator_index?: number;
          /**
           * Format: byte
           * @description Vote signature by the validator if they participated in consensus for the
           * associated block.
           */
          signature?: string;
          /**
           * Format: byte
           * @description Vote extension provided by the application. Only valid for precommit
           * messages.
           */
          extension?: string;
          /**
           * Format: byte
           * @description Vote extension signature by the validator if they participated in
           * consensus for the associated block.
           * Only valid for precommit messages.
           */
          extension_signature?: string;
        };
        /** Format: int64 */
        total_voting_power?: string;
        /** Format: int64 */
        validator_power?: string;
        /** Format: date-time */
        timestamp?: string;
      };
      /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
      light_client_attack_evidence?: {
        conflicting_block?: {
          signed_header?: {
            /** @description Header defines the structure of a block header. */
            header?: {
              /**
               * basic block info
               * @description Consensus captures the consensus rules for processing a block in the blockchain,
               * including all blockchain data structures and the rules of the application's
               * state transition machine.
               */
              version?: {
                /** Format: uint64 */
                block?: string;
                /** Format: uint64 */
                app?: string;
              };
              chain_id?: string;
              /** Format: int64 */
              height?: string;
              /** Format: date-time */
              time?: string;
              /** BlockID */
              last_block_id?: {
                /** Format: byte */
                hash?: string;
                /** PartsetHeader */
                part_set_header?: {
                  /** Format: int64 */
                  total?: number;
                  /** Format: byte */
                  hash?: string;
                };
              };
              /**
               * hashes of block data
               * Format: byte
               */
              last_commit_hash?: string;
              /** Format: byte */
              data_hash?: string;
              /**
               * hashes from the app output from the prev block
               * Format: byte
               */
              validators_hash?: string;
              /** Format: byte */
              next_validators_hash?: string;
              /** Format: byte */
              consensus_hash?: string;
              /** Format: byte */
              app_hash?: string;
              /** Format: byte */
              last_results_hash?: string;
              /**
               * consensus info
               * Format: byte
               */
              evidence_hash?: string;
              /** Format: byte */
              proposer_address?: string;
            };
            /** @description Commit contains the evidence that a block was committed by a set of validators. */
            commit?: {
              /** Format: int64 */
              height?: string;
              /** Format: int32 */
              round?: number;
              /** BlockID */
              block_id?: {
                /** Format: byte */
                hash?: string;
                /** PartsetHeader */
                part_set_header?: {
                  /** Format: int64 */
                  total?: number;
                  /** Format: byte */
                  hash?: string;
                };
              };
              signatures?: ({
                  /**
                   * BlockIdFlag indicates which BlockID the signature is for
                   * @default BLOCK_ID_FLAG_UNKNOWN
                   * @enum {string}
                   */
                  block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  signature?: string;
                })[];
            };
          };
          validator_set?: {
            validators?: {
                /** Format: byte */
                address?: string;
                /** PublicKey defines the keys available for use with Validators */
                pub_key?: {
                  /** Format: byte */
                  ed25519?: string;
                  /** Format: byte */
                  secp256k1?: string;
                };
                /** Format: int64 */
                voting_power?: string;
                /** Format: int64 */
                proposer_priority?: string;
              }[];
            proposer?: {
              /** Format: byte */
              address?: string;
              /** PublicKey defines the keys available for use with Validators */
              pub_key?: {
                /** Format: byte */
                ed25519?: string;
                /** Format: byte */
                secp256k1?: string;
              };
              /** Format: int64 */
              voting_power?: string;
              /** Format: int64 */
              proposer_priority?: string;
            };
            /** Format: int64 */
            total_voting_power?: string;
          };
        };
        /** Format: int64 */
        common_height?: string;
        byzantine_validators?: {
            /** Format: byte */
            address?: string;
            /** PublicKey defines the keys available for use with Validators */
            pub_key?: {
              /** Format: byte */
              ed25519?: string;
              /** Format: byte */
              secp256k1?: string;
            };
            /** Format: int64 */
            voting_power?: string;
            /** Format: int64 */
            proposer_priority?: string;
          }[];
        /** Format: int64 */
        total_voting_power?: string;
        /** Format: date-time */
        timestamp?: string;
      };
    };
    "tendermint.types.EvidenceList": {
      evidence?: ({
          /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
          duplicate_vote_evidence?: {
            /**
             * @description Vote represents a prevote or precommit vote from validators for
             * consensus.
             */
            vote_a?: {
              /**
               * @description SignedMsgType is a type of signed message in the consensus.
               *
               *  - SIGNED_MSG_TYPE_PREVOTE: Votes
               *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
               * @default SIGNED_MSG_TYPE_UNKNOWN
               * @enum {string}
               */
              type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
              /** Format: int64 */
              height?: string;
              /** Format: int32 */
              round?: number;
              /** BlockID */
              block_id?: {
                /** Format: byte */
                hash?: string;
                /** PartsetHeader */
                part_set_header?: {
                  /** Format: int64 */
                  total?: number;
                  /** Format: byte */
                  hash?: string;
                };
              };
              /** Format: date-time */
              timestamp?: string;
              /** Format: byte */
              validator_address?: string;
              /** Format: int32 */
              validator_index?: number;
              /**
               * Format: byte
               * @description Vote signature by the validator if they participated in consensus for the
               * associated block.
               */
              signature?: string;
              /**
               * Format: byte
               * @description Vote extension provided by the application. Only valid for precommit
               * messages.
               */
              extension?: string;
              /**
               * Format: byte
               * @description Vote extension signature by the validator if they participated in
               * consensus for the associated block.
               * Only valid for precommit messages.
               */
              extension_signature?: string;
            };
            /**
             * @description Vote represents a prevote or precommit vote from validators for
             * consensus.
             */
            vote_b?: {
              /**
               * @description SignedMsgType is a type of signed message in the consensus.
               *
               *  - SIGNED_MSG_TYPE_PREVOTE: Votes
               *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
               * @default SIGNED_MSG_TYPE_UNKNOWN
               * @enum {string}
               */
              type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
              /** Format: int64 */
              height?: string;
              /** Format: int32 */
              round?: number;
              /** BlockID */
              block_id?: {
                /** Format: byte */
                hash?: string;
                /** PartsetHeader */
                part_set_header?: {
                  /** Format: int64 */
                  total?: number;
                  /** Format: byte */
                  hash?: string;
                };
              };
              /** Format: date-time */
              timestamp?: string;
              /** Format: byte */
              validator_address?: string;
              /** Format: int32 */
              validator_index?: number;
              /**
               * Format: byte
               * @description Vote signature by the validator if they participated in consensus for the
               * associated block.
               */
              signature?: string;
              /**
               * Format: byte
               * @description Vote extension provided by the application. Only valid for precommit
               * messages.
               */
              extension?: string;
              /**
               * Format: byte
               * @description Vote extension signature by the validator if they participated in
               * consensus for the associated block.
               * Only valid for precommit messages.
               */
              extension_signature?: string;
            };
            /** Format: int64 */
            total_voting_power?: string;
            /** Format: int64 */
            validator_power?: string;
            /** Format: date-time */
            timestamp?: string;
          };
          /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
          light_client_attack_evidence?: {
            conflicting_block?: {
              signed_header?: {
                /** @description Header defines the structure of a block header. */
                header?: {
                  /**
                   * basic block info
                   * @description Consensus captures the consensus rules for processing a block in the blockchain,
                   * including all blockchain data structures and the rules of the application's
                   * state transition machine.
                   */
                  version?: {
                    /** Format: uint64 */
                    block?: string;
                    /** Format: uint64 */
                    app?: string;
                  };
                  chain_id?: string;
                  /** Format: int64 */
                  height?: string;
                  /** Format: date-time */
                  time?: string;
                  /** BlockID */
                  last_block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /**
                   * hashes of block data
                   * Format: byte
                   */
                  last_commit_hash?: string;
                  /** Format: byte */
                  data_hash?: string;
                  /**
                   * hashes from the app output from the prev block
                   * Format: byte
                   */
                  validators_hash?: string;
                  /** Format: byte */
                  next_validators_hash?: string;
                  /** Format: byte */
                  consensus_hash?: string;
                  /** Format: byte */
                  app_hash?: string;
                  /** Format: byte */
                  last_results_hash?: string;
                  /**
                   * consensus info
                   * Format: byte
                   */
                  evidence_hash?: string;
                  /** Format: byte */
                  proposer_address?: string;
                };
                /** @description Commit contains the evidence that a block was committed by a set of validators. */
                commit?: {
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  signatures?: ({
                      /**
                       * BlockIdFlag indicates which BlockID the signature is for
                       * @default BLOCK_ID_FLAG_UNKNOWN
                       * @enum {string}
                       */
                      block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                      /** Format: byte */
                      validator_address?: string;
                      /** Format: date-time */
                      timestamp?: string;
                      /** Format: byte */
                      signature?: string;
                    })[];
                };
              };
              validator_set?: {
                validators?: {
                    /** Format: byte */
                    address?: string;
                    /** PublicKey defines the keys available for use with Validators */
                    pub_key?: {
                      /** Format: byte */
                      ed25519?: string;
                      /** Format: byte */
                      secp256k1?: string;
                    };
                    /** Format: int64 */
                    voting_power?: string;
                    /** Format: int64 */
                    proposer_priority?: string;
                  }[];
                proposer?: {
                  /** Format: byte */
                  address?: string;
                  /** PublicKey defines the keys available for use with Validators */
                  pub_key?: {
                    /** Format: byte */
                    ed25519?: string;
                    /** Format: byte */
                    secp256k1?: string;
                  };
                  /** Format: int64 */
                  voting_power?: string;
                  /** Format: int64 */
                  proposer_priority?: string;
                };
                /** Format: int64 */
                total_voting_power?: string;
              };
            };
            /** Format: int64 */
            common_height?: string;
            byzantine_validators?: {
                /** Format: byte */
                address?: string;
                /** PublicKey defines the keys available for use with Validators */
                pub_key?: {
                  /** Format: byte */
                  ed25519?: string;
                  /** Format: byte */
                  secp256k1?: string;
                };
                /** Format: int64 */
                voting_power?: string;
                /** Format: int64 */
                proposer_priority?: string;
              }[];
            /** Format: int64 */
            total_voting_power?: string;
            /** Format: date-time */
            timestamp?: string;
          };
        })[];
    };
    /** @description Header defines the structure of a block header. */
    "tendermint.types.Header": {
      /**
       * basic block info
       * @description Consensus captures the consensus rules for processing a block in the blockchain,
       * including all blockchain data structures and the rules of the application's
       * state transition machine.
       */
      version?: {
        /** Format: uint64 */
        block?: string;
        /** Format: uint64 */
        app?: string;
      };
      chain_id?: string;
      /** Format: int64 */
      height?: string;
      /** Format: date-time */
      time?: string;
      /** BlockID */
      last_block_id?: {
        /** Format: byte */
        hash?: string;
        /** PartsetHeader */
        part_set_header?: {
          /** Format: int64 */
          total?: number;
          /** Format: byte */
          hash?: string;
        };
      };
      /**
       * hashes of block data
       * Format: byte
       */
      last_commit_hash?: string;
      /** Format: byte */
      data_hash?: string;
      /**
       * hashes from the app output from the prev block
       * Format: byte
       */
      validators_hash?: string;
      /** Format: byte */
      next_validators_hash?: string;
      /** Format: byte */
      consensus_hash?: string;
      /** Format: byte */
      app_hash?: string;
      /** Format: byte */
      last_results_hash?: string;
      /**
       * consensus info
       * Format: byte
       */
      evidence_hash?: string;
      /** Format: byte */
      proposer_address?: string;
    };
    "tendermint.types.LightBlock": {
      signed_header?: {
        /** @description Header defines the structure of a block header. */
        header?: {
          /**
           * basic block info
           * @description Consensus captures the consensus rules for processing a block in the blockchain,
           * including all blockchain data structures and the rules of the application's
           * state transition machine.
           */
          version?: {
            /** Format: uint64 */
            block?: string;
            /** Format: uint64 */
            app?: string;
          };
          chain_id?: string;
          /** Format: int64 */
          height?: string;
          /** Format: date-time */
          time?: string;
          /** BlockID */
          last_block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /**
           * hashes of block data
           * Format: byte
           */
          last_commit_hash?: string;
          /** Format: byte */
          data_hash?: string;
          /**
           * hashes from the app output from the prev block
           * Format: byte
           */
          validators_hash?: string;
          /** Format: byte */
          next_validators_hash?: string;
          /** Format: byte */
          consensus_hash?: string;
          /** Format: byte */
          app_hash?: string;
          /** Format: byte */
          last_results_hash?: string;
          /**
           * consensus info
           * Format: byte
           */
          evidence_hash?: string;
          /** Format: byte */
          proposer_address?: string;
        };
        /** @description Commit contains the evidence that a block was committed by a set of validators. */
        commit?: {
          /** Format: int64 */
          height?: string;
          /** Format: int32 */
          round?: number;
          /** BlockID */
          block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          signatures?: ({
              /**
               * BlockIdFlag indicates which BlockID the signature is for
               * @default BLOCK_ID_FLAG_UNKNOWN
               * @enum {string}
               */
              block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
              /** Format: byte */
              validator_address?: string;
              /** Format: date-time */
              timestamp?: string;
              /** Format: byte */
              signature?: string;
            })[];
        };
      };
      validator_set?: {
        validators?: {
            /** Format: byte */
            address?: string;
            /** PublicKey defines the keys available for use with Validators */
            pub_key?: {
              /** Format: byte */
              ed25519?: string;
              /** Format: byte */
              secp256k1?: string;
            };
            /** Format: int64 */
            voting_power?: string;
            /** Format: int64 */
            proposer_priority?: string;
          }[];
        proposer?: {
          /** Format: byte */
          address?: string;
          /** PublicKey defines the keys available for use with Validators */
          pub_key?: {
            /** Format: byte */
            ed25519?: string;
            /** Format: byte */
            secp256k1?: string;
          };
          /** Format: int64 */
          voting_power?: string;
          /** Format: int64 */
          proposer_priority?: string;
        };
        /** Format: int64 */
        total_voting_power?: string;
      };
    };
    /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
    "tendermint.types.LightClientAttackEvidence": {
      conflicting_block?: {
        signed_header?: {
          /** @description Header defines the structure of a block header. */
          header?: {
            /**
             * basic block info
             * @description Consensus captures the consensus rules for processing a block in the blockchain,
             * including all blockchain data structures and the rules of the application's
             * state transition machine.
             */
            version?: {
              /** Format: uint64 */
              block?: string;
              /** Format: uint64 */
              app?: string;
            };
            chain_id?: string;
            /** Format: int64 */
            height?: string;
            /** Format: date-time */
            time?: string;
            /** BlockID */
            last_block_id?: {
              /** Format: byte */
              hash?: string;
              /** PartsetHeader */
              part_set_header?: {
                /** Format: int64 */
                total?: number;
                /** Format: byte */
                hash?: string;
              };
            };
            /**
             * hashes of block data
             * Format: byte
             */
            last_commit_hash?: string;
            /** Format: byte */
            data_hash?: string;
            /**
             * hashes from the app output from the prev block
             * Format: byte
             */
            validators_hash?: string;
            /** Format: byte */
            next_validators_hash?: string;
            /** Format: byte */
            consensus_hash?: string;
            /** Format: byte */
            app_hash?: string;
            /** Format: byte */
            last_results_hash?: string;
            /**
             * consensus info
             * Format: byte
             */
            evidence_hash?: string;
            /** Format: byte */
            proposer_address?: string;
          };
          /** @description Commit contains the evidence that a block was committed by a set of validators. */
          commit?: {
            /** Format: int64 */
            height?: string;
            /** Format: int32 */
            round?: number;
            /** BlockID */
            block_id?: {
              /** Format: byte */
              hash?: string;
              /** PartsetHeader */
              part_set_header?: {
                /** Format: int64 */
                total?: number;
                /** Format: byte */
                hash?: string;
              };
            };
            signatures?: ({
                /**
                 * BlockIdFlag indicates which BlockID the signature is for
                 * @default BLOCK_ID_FLAG_UNKNOWN
                 * @enum {string}
                 */
                block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                /** Format: byte */
                validator_address?: string;
                /** Format: date-time */
                timestamp?: string;
                /** Format: byte */
                signature?: string;
              })[];
          };
        };
        validator_set?: {
          validators?: {
              /** Format: byte */
              address?: string;
              /** PublicKey defines the keys available for use with Validators */
              pub_key?: {
                /** Format: byte */
                ed25519?: string;
                /** Format: byte */
                secp256k1?: string;
              };
              /** Format: int64 */
              voting_power?: string;
              /** Format: int64 */
              proposer_priority?: string;
            }[];
          proposer?: {
            /** Format: byte */
            address?: string;
            /** PublicKey defines the keys available for use with Validators */
            pub_key?: {
              /** Format: byte */
              ed25519?: string;
              /** Format: byte */
              secp256k1?: string;
            };
            /** Format: int64 */
            voting_power?: string;
            /** Format: int64 */
            proposer_priority?: string;
          };
          /** Format: int64 */
          total_voting_power?: string;
        };
      };
      /** Format: int64 */
      common_height?: string;
      byzantine_validators?: {
          /** Format: byte */
          address?: string;
          /** PublicKey defines the keys available for use with Validators */
          pub_key?: {
            /** Format: byte */
            ed25519?: string;
            /** Format: byte */
            secp256k1?: string;
          };
          /** Format: int64 */
          voting_power?: string;
          /** Format: int64 */
          proposer_priority?: string;
        }[];
      /** Format: int64 */
      total_voting_power?: string;
      /** Format: date-time */
      timestamp?: string;
    };
    /** PartsetHeader */
    "tendermint.types.PartSetHeader": {
      /** Format: int64 */
      total?: number;
      /** Format: byte */
      hash?: string;
    };
    "tendermint.types.SignedHeader": {
      /** @description Header defines the structure of a block header. */
      header?: {
        /**
         * basic block info
         * @description Consensus captures the consensus rules for processing a block in the blockchain,
         * including all blockchain data structures and the rules of the application's
         * state transition machine.
         */
        version?: {
          /** Format: uint64 */
          block?: string;
          /** Format: uint64 */
          app?: string;
        };
        chain_id?: string;
        /** Format: int64 */
        height?: string;
        /** Format: date-time */
        time?: string;
        /** BlockID */
        last_block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        /**
         * hashes of block data
         * Format: byte
         */
        last_commit_hash?: string;
        /** Format: byte */
        data_hash?: string;
        /**
         * hashes from the app output from the prev block
         * Format: byte
         */
        validators_hash?: string;
        /** Format: byte */
        next_validators_hash?: string;
        /** Format: byte */
        consensus_hash?: string;
        /** Format: byte */
        app_hash?: string;
        /** Format: byte */
        last_results_hash?: string;
        /**
         * consensus info
         * Format: byte
         */
        evidence_hash?: string;
        /** Format: byte */
        proposer_address?: string;
      };
      /** @description Commit contains the evidence that a block was committed by a set of validators. */
      commit?: {
        /** Format: int64 */
        height?: string;
        /** Format: int32 */
        round?: number;
        /** BlockID */
        block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        signatures?: ({
            /**
             * BlockIdFlag indicates which BlockID the signature is for
             * @default BLOCK_ID_FLAG_UNKNOWN
             * @enum {string}
             */
            block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
            /** Format: byte */
            validator_address?: string;
            /** Format: date-time */
            timestamp?: string;
            /** Format: byte */
            signature?: string;
          })[];
      };
    };
    /**
     * @description SignedMsgType is a type of signed message in the consensus.
     *
     *  - SIGNED_MSG_TYPE_PREVOTE: Votes
     *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
     * @default SIGNED_MSG_TYPE_UNKNOWN
     * @enum {string}
     */
    "tendermint.types.SignedMsgType": "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
    "tendermint.types.Validator": {
      /** Format: byte */
      address?: string;
      /** PublicKey defines the keys available for use with Validators */
      pub_key?: {
        /** Format: byte */
        ed25519?: string;
        /** Format: byte */
        secp256k1?: string;
      };
      /** Format: int64 */
      voting_power?: string;
      /** Format: int64 */
      proposer_priority?: string;
    };
    "tendermint.types.ValidatorSet": {
      validators?: {
          /** Format: byte */
          address?: string;
          /** PublicKey defines the keys available for use with Validators */
          pub_key?: {
            /** Format: byte */
            ed25519?: string;
            /** Format: byte */
            secp256k1?: string;
          };
          /** Format: int64 */
          voting_power?: string;
          /** Format: int64 */
          proposer_priority?: string;
        }[];
      proposer?: {
        /** Format: byte */
        address?: string;
        /** PublicKey defines the keys available for use with Validators */
        pub_key?: {
          /** Format: byte */
          ed25519?: string;
          /** Format: byte */
          secp256k1?: string;
        };
        /** Format: int64 */
        voting_power?: string;
        /** Format: int64 */
        proposer_priority?: string;
      };
      /** Format: int64 */
      total_voting_power?: string;
    };
    /**
     * @description Vote represents a prevote or precommit vote from validators for
     * consensus.
     */
    "tendermint.types.Vote": {
      /**
       * @description SignedMsgType is a type of signed message in the consensus.
       *
       *  - SIGNED_MSG_TYPE_PREVOTE: Votes
       *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
       * @default SIGNED_MSG_TYPE_UNKNOWN
       * @enum {string}
       */
      type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
      /** Format: int64 */
      height?: string;
      /** Format: int32 */
      round?: number;
      /** BlockID */
      block_id?: {
        /** Format: byte */
        hash?: string;
        /** PartsetHeader */
        part_set_header?: {
          /** Format: int64 */
          total?: number;
          /** Format: byte */
          hash?: string;
        };
      };
      /** Format: date-time */
      timestamp?: string;
      /** Format: byte */
      validator_address?: string;
      /** Format: int32 */
      validator_index?: number;
      /**
       * Format: byte
       * @description Vote signature by the validator if they participated in consensus for the
       * associated block.
       */
      signature?: string;
      /**
       * Format: byte
       * @description Vote extension provided by the application. Only valid for precommit
       * messages.
       */
      extension?: string;
      /**
       * Format: byte
       * @description Vote extension signature by the validator if they participated in
       * consensus for the associated block.
       * Only valid for precommit messages.
       */
      extension_signature?: string;
    };
    /**
     * @description Consensus captures the consensus rules for processing a block in the blockchain,
     * including all blockchain data structures and the rules of the application's
     * state transition machine.
     */
    "tendermint.version.Consensus": {
      /** Format: uint64 */
      block?: string;
      /** Format: uint64 */
      app?: string;
    };
    /** @description ConfigResponse defines the response structure for the Config gRPC query. */
    "cosmos.base.node.v1beta1.ConfigResponse": {
      minimum_gas_price?: string;
      /** pruning settings */
      pruning_keep_recent?: string;
      pruning_interval?: string;
    };
    /** @description StateResponse defines the response structure for the status of a node. */
    "cosmos.base.node.v1beta1.StatusResponse": {
      /** Format: uint64 */
      earliest_store_height?: string;
      /** Format: uint64 */
      height?: string;
      /** Format: date-time */
      timestamp?: string;
      /** Format: byte */
      app_hash?: string;
      /** Format: byte */
      validator_hash?: string;
    };
    /**
     * @description DecCoin defines a token with a denomination and a decimal amount.
     *
     * NOTE: The amount field is an Dec which implements the custom method
     * signatures required by gogoproto.
     */
    "cosmos.base.v1beta1.DecCoin": {
      denom?: string;
      amount?: string;
    };
    /**
     * @description DelegationDelegatorReward represents the properties
     * of a delegator's delegation reward.
     */
    "cosmos.distribution.v1beta1.DelegationDelegatorReward": {
      validator_address?: string;
      reward?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /** @description Params defines the set of params for the distribution module. */
    "cosmos.distribution.v1beta1.Params": {
      community_tax?: string;
      /**
       * @description Deprecated: The base_proposer_reward field is deprecated and is no longer used
       * in the x/distribution module's reward mechanism.
       */
      base_proposer_reward?: string;
      /**
       * @description Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
       * in the x/distribution module's reward mechanism.
       */
      bonus_proposer_reward?: string;
      withdraw_addr_enabled?: boolean;
    };
    /**
     * @description QueryCommunityPoolResponse is the response type for the Query/CommunityPool
     * RPC method.
     */
    "cosmos.distribution.v1beta1.QueryCommunityPoolResponse": {
      /** @description pool defines community pool's coins. */
      pool?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /**
     * @description QueryDelegationRewardsResponse is the response type for the
     * Query/DelegationRewards RPC method.
     */
    "cosmos.distribution.v1beta1.QueryDelegationRewardsResponse": {
      /** @description rewards defines the rewards accrued by a delegation. */
      rewards?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /**
     * @description QueryDelegationTotalRewardsResponse is the response type for the
     * Query/DelegationTotalRewards RPC method.
     */
    "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse": {
      /** @description rewards defines all the rewards accrued by a delegator. */
      rewards?: {
          validator_address?: string;
          reward?: {
              denom?: string;
              amount?: string;
            }[];
        }[];
      /** @description total defines the sum of all the rewards. */
      total?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /**
     * @description QueryDelegatorValidatorsResponse is the response type for the
     * Query/DelegatorValidators RPC method.
     */
    "cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse": {
      /** @description validators defines the validators a delegator is delegating for. */
      validators?: string[];
    };
    /**
     * @description QueryDelegatorWithdrawAddressResponse is the response type for the
     * Query/DelegatorWithdrawAddress RPC method.
     */
    "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse": {
      /** @description withdraw_address defines the delegator address to query for. */
      withdraw_address?: string;
    };
    /** @description QueryParamsResponse is the response type for the Query/Params RPC method. */
    "cosmos.distribution.v1beta1.QueryParamsResponse": {
      /** @description params defines the parameters of the module. */
      params?: {
        community_tax?: string;
        /**
         * @description Deprecated: The base_proposer_reward field is deprecated and is no longer used
         * in the x/distribution module's reward mechanism.
         */
        base_proposer_reward?: string;
        /**
         * @description Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
         * in the x/distribution module's reward mechanism.
         */
        bonus_proposer_reward?: string;
        withdraw_addr_enabled?: boolean;
      };
    };
    /**
     * QueryValidatorCommissionResponse is the response type for the
     * Query/ValidatorCommission RPC method
     */
    "cosmos.distribution.v1beta1.QueryValidatorCommissionResponse": {
      /** @description commission defines the commission the validator received. */
      commission?: {
        commission?: {
            denom?: string;
            amount?: string;
          }[];
      };
    };
    /** @description QueryValidatorDistributionInfoResponse is the response type for the Query/ValidatorDistributionInfo RPC method. */
    "cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse": {
      /** @description operator_address defines the validator operator address. */
      operator_address?: string;
      /** @description self_bond_rewards defines the self delegations rewards. */
      self_bond_rewards?: {
          denom?: string;
          amount?: string;
        }[];
      /** @description commission defines the commission the validator received. */
      commission?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /**
     * @description QueryValidatorOutstandingRewardsResponse is the response type for the
     * Query/ValidatorOutstandingRewards RPC method.
     */
    "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse": {
      /**
       * @description ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
       * for a validator inexpensive to track, allows simple sanity checks.
       */
      rewards?: {
        rewards?: {
            denom?: string;
            amount?: string;
          }[];
      };
    };
    /**
     * @description QueryValidatorSlashesResponse is the response type for the
     * Query/ValidatorSlashes RPC method.
     */
    "cosmos.distribution.v1beta1.QueryValidatorSlashesResponse": {
      /** @description slashes defines the slashes the validator received. */
      slashes?: {
          /** Format: uint64 */
          validator_period?: string;
          fraction?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description ValidatorAccumulatedCommission represents accumulated commission
     * for a validator kept as a running counter, can be withdrawn at any time.
     */
    "cosmos.distribution.v1beta1.ValidatorAccumulatedCommission": {
      commission?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /**
     * @description ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
     * for a validator inexpensive to track, allows simple sanity checks.
     */
    "cosmos.distribution.v1beta1.ValidatorOutstandingRewards": {
      rewards?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /**
     * @description ValidatorSlashEvent represents a validator slash event.
     * Height is implicit within the store key.
     * This is needed to calculate appropriate amount of staking tokens
     * for delegations which are withdrawn after a slash has occurred.
     */
    "cosmos.distribution.v1beta1.ValidatorSlashEvent": {
      /** Format: uint64 */
      validator_period?: string;
      fraction?: string;
    };
    /**
     * @description QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
     * method.
     */
    "cosmos.evidence.v1beta1.QueryAllEvidenceResponse": {
      /** @description evidence returns all evidences. */
      evidence?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryEvidenceResponse is the response type for the Query/Evidence RPC method. */
    "cosmos.evidence.v1beta1.QueryEvidenceResponse": {
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      evidence?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
    };
    /**
     * @description Deposit defines an amount deposited by an account address to an active
     * proposal.
     */
    "cosmos.gov.v1beta1.Deposit": {
      /**
       * Format: uint64
       * @description proposal_id defines the unique id of the proposal.
       */
      proposal_id?: string;
      /** @description depositor defines the deposit addresses from the proposals. */
      depositor?: string;
      /** @description amount to be deposited by depositor. */
      amount?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /** @description DepositParams defines the params for deposits on governance proposals. */
    "cosmos.gov.v1beta1.DepositParams": {
      /** @description Minimum deposit for a proposal to enter voting period. */
      min_deposit?: {
          denom?: string;
          amount?: string;
        }[];
      /**
       * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
       * months.
       */
      max_deposit_period?: string;
    };
    /** @description Proposal defines the core field members of a governance proposal. */
    "cosmos.gov.v1beta1.Proposal": {
      /**
       * Format: uint64
       * @description proposal_id defines the unique id of the proposal.
       */
      proposal_id?: string;
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      content?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /**
       * @description status defines the proposal status.
       * @default PROPOSAL_STATUS_UNSPECIFIED
       * @enum {string}
       */
      status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
      /**
       * @description final_tally_result is the final tally result of the proposal. When
       * querying a proposal via gRPC, this field is not populated until the
       * proposal's voting period has ended.
       */
      final_tally_result?: {
        /** @description yes is the number of yes votes on a proposal. */
        yes?: string;
        /** @description abstain is the number of abstain votes on a proposal. */
        abstain?: string;
        /** @description no is the number of no votes on a proposal. */
        no?: string;
        /** @description no_with_veto is the number of no with veto votes on a proposal. */
        no_with_veto?: string;
      };
      /**
       * Format: date-time
       * @description submit_time is the time of proposal submission.
       */
      submit_time?: string;
      /**
       * Format: date-time
       * @description deposit_end_time is the end time for deposition.
       */
      deposit_end_time?: string;
      /** @description total_deposit is the total deposit on the proposal. */
      total_deposit?: {
          denom?: string;
          amount?: string;
        }[];
      /**
       * Format: date-time
       * @description voting_start_time is the starting time to vote on a proposal.
       */
      voting_start_time?: string;
      /**
       * Format: date-time
       * @description voting_end_time is the end time of voting on a proposal.
       */
      voting_end_time?: string;
    };
    /**
     * @description ProposalStatus enumerates the valid statuses of a proposal.
     *
     *  - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
     *  - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
     * period.
     *  - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
     * period.
     *  - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
     * passed.
     *  - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
     * been rejected.
     *  - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
     * failed.
     * @default PROPOSAL_STATUS_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.gov.v1beta1.ProposalStatus": "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
    /** @description QueryDepositResponse is the response type for the Query/Deposit RPC method. */
    "cosmos.gov.v1beta1.QueryDepositResponse": {
      /**
       * @description Deposit defines an amount deposited by an account address to an active
       * proposal.
       */
      deposit?: {
        /**
         * Format: uint64
         * @description proposal_id defines the unique id of the proposal.
         */
        proposal_id?: string;
        /** @description depositor defines the deposit addresses from the proposals. */
        depositor?: string;
        /** @description amount to be deposited by depositor. */
        amount?: {
            denom?: string;
            amount?: string;
          }[];
      };
    };
    /** @description QueryDepositsResponse is the response type for the Query/Deposits RPC method. */
    "cosmos.gov.v1beta1.QueryDepositsResponse": {
      /** @description deposits defines the requested deposits. */
      deposits?: {
          /**
           * Format: uint64
           * @description proposal_id defines the unique id of the proposal.
           */
          proposal_id?: string;
          /** @description depositor defines the deposit addresses from the proposals. */
          depositor?: string;
          /** @description amount to be deposited by depositor. */
          amount?: {
              denom?: string;
              amount?: string;
            }[];
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryParamsResponse is the response type for the Query/Params RPC method. */
    "cosmos.gov.v1beta1.QueryParamsResponse": {
      /** @description voting_params defines the parameters related to voting. */
      voting_params?: {
        /** @description Duration of the voting period. */
        voting_period?: string;
      };
      /** @description deposit_params defines the parameters related to deposit. */
      deposit_params?: {
        /** @description Minimum deposit for a proposal to enter voting period. */
        min_deposit?: {
            denom?: string;
            amount?: string;
          }[];
        /**
         * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
         * months.
         */
        max_deposit_period?: string;
      };
      /** @description tally_params defines the parameters related to tally. */
      tally_params?: {
        /**
         * Format: byte
         * @description Minimum percentage of total stake needed to vote for a result to be
         * considered valid.
         */
        quorum?: string;
        /**
         * Format: byte
         * @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.
         */
        threshold?: string;
        /**
         * Format: byte
         * @description Minimum value of Veto votes to Total votes ratio for proposal to be
         * vetoed. Default value: 1/3.
         */
        veto_threshold?: string;
      };
    };
    /** @description QueryProposalResponse is the response type for the Query/Proposal RPC method. */
    "cosmos.gov.v1beta1.QueryProposalResponse": {
      /** @description Proposal defines the core field members of a governance proposal. */
      proposal?: {
        /**
         * Format: uint64
         * @description proposal_id defines the unique id of the proposal.
         */
        proposal_id?: string;
        /**
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        content?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
        /**
         * @description status defines the proposal status.
         * @default PROPOSAL_STATUS_UNSPECIFIED
         * @enum {string}
         */
        status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
        /**
         * @description final_tally_result is the final tally result of the proposal. When
         * querying a proposal via gRPC, this field is not populated until the
         * proposal's voting period has ended.
         */
        final_tally_result?: {
          /** @description yes is the number of yes votes on a proposal. */
          yes?: string;
          /** @description abstain is the number of abstain votes on a proposal. */
          abstain?: string;
          /** @description no is the number of no votes on a proposal. */
          no?: string;
          /** @description no_with_veto is the number of no with veto votes on a proposal. */
          no_with_veto?: string;
        };
        /**
         * Format: date-time
         * @description submit_time is the time of proposal submission.
         */
        submit_time?: string;
        /**
         * Format: date-time
         * @description deposit_end_time is the end time for deposition.
         */
        deposit_end_time?: string;
        /** @description total_deposit is the total deposit on the proposal. */
        total_deposit?: {
            denom?: string;
            amount?: string;
          }[];
        /**
         * Format: date-time
         * @description voting_start_time is the starting time to vote on a proposal.
         */
        voting_start_time?: string;
        /**
         * Format: date-time
         * @description voting_end_time is the end time of voting on a proposal.
         */
        voting_end_time?: string;
      };
    };
    /**
     * @description QueryProposalsResponse is the response type for the Query/Proposals RPC
     * method.
     */
    "cosmos.gov.v1beta1.QueryProposalsResponse": {
      /** @description proposals defines all the requested governance proposals. */
      proposals?: ({
          /**
           * Format: uint64
           * @description proposal_id defines the unique id of the proposal.
           */
          proposal_id?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          content?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /**
           * @description status defines the proposal status.
           * @default PROPOSAL_STATUS_UNSPECIFIED
           * @enum {string}
           */
          status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
          /**
           * @description final_tally_result is the final tally result of the proposal. When
           * querying a proposal via gRPC, this field is not populated until the
           * proposal's voting period has ended.
           */
          final_tally_result?: {
            /** @description yes is the number of yes votes on a proposal. */
            yes?: string;
            /** @description abstain is the number of abstain votes on a proposal. */
            abstain?: string;
            /** @description no is the number of no votes on a proposal. */
            no?: string;
            /** @description no_with_veto is the number of no with veto votes on a proposal. */
            no_with_veto?: string;
          };
          /**
           * Format: date-time
           * @description submit_time is the time of proposal submission.
           */
          submit_time?: string;
          /**
           * Format: date-time
           * @description deposit_end_time is the end time for deposition.
           */
          deposit_end_time?: string;
          /** @description total_deposit is the total deposit on the proposal. */
          total_deposit?: {
              denom?: string;
              amount?: string;
            }[];
          /**
           * Format: date-time
           * @description voting_start_time is the starting time to vote on a proposal.
           */
          voting_start_time?: string;
          /**
           * Format: date-time
           * @description voting_end_time is the end time of voting on a proposal.
           */
          voting_end_time?: string;
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryTallyResultResponse is the response type for the Query/Tally RPC method. */
    "cosmos.gov.v1beta1.QueryTallyResultResponse": {
      /** @description tally defines the requested tally. */
      tally?: {
        /** @description yes is the number of yes votes on a proposal. */
        yes?: string;
        /** @description abstain is the number of abstain votes on a proposal. */
        abstain?: string;
        /** @description no is the number of no votes on a proposal. */
        no?: string;
        /** @description no_with_veto is the number of no with veto votes on a proposal. */
        no_with_veto?: string;
      };
    };
    /** @description QueryVoteResponse is the response type for the Query/Vote RPC method. */
    "cosmos.gov.v1beta1.QueryVoteResponse": {
      /**
       * @description Vote defines a vote on a governance proposal.
       * A Vote consists of a proposal ID, the voter, and the vote option.
       */
      vote?: {
        /**
         * Format: uint64
         * @description proposal_id defines the unique id of the proposal.
         */
        proposal_id?: string;
        /** @description voter is the voter address of the proposal. */
        voter?: string;
        /**
         * @description Deprecated: Prefer to use `options` instead. This field is set in queries
         * if and only if `len(options) == 1` and that option has weight 1. In all
         * other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
         * @default VOTE_OPTION_UNSPECIFIED
         * @enum {string}
         */
        option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
        /**
         * @description options is the weighted vote options.
         *
         * Since: cosmos-sdk 0.43
         */
        options?: ({
            /**
             * @description option defines the valid vote options, it must not contain duplicate vote options.
             * @default VOTE_OPTION_UNSPECIFIED
             * @enum {string}
             */
            option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
            /** @description weight is the vote weight associated with the vote option. */
            weight?: string;
          })[];
      };
    };
    /** @description QueryVotesResponse is the response type for the Query/Votes RPC method. */
    "cosmos.gov.v1beta1.QueryVotesResponse": {
      /** @description votes defines the queried votes. */
      votes?: ({
          /**
           * Format: uint64
           * @description proposal_id defines the unique id of the proposal.
           */
          proposal_id?: string;
          /** @description voter is the voter address of the proposal. */
          voter?: string;
          /**
           * @description Deprecated: Prefer to use `options` instead. This field is set in queries
           * if and only if `len(options) == 1` and that option has weight 1. In all
           * other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
           * @default VOTE_OPTION_UNSPECIFIED
           * @enum {string}
           */
          option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
          /**
           * @description options is the weighted vote options.
           *
           * Since: cosmos-sdk 0.43
           */
          options?: ({
              /**
               * @description option defines the valid vote options, it must not contain duplicate vote options.
               * @default VOTE_OPTION_UNSPECIFIED
               * @enum {string}
               */
              option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
              /** @description weight is the vote weight associated with the vote option. */
              weight?: string;
            })[];
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description TallyParams defines the params for tallying votes on governance proposals. */
    "cosmos.gov.v1beta1.TallyParams": {
      /**
       * Format: byte
       * @description Minimum percentage of total stake needed to vote for a result to be
       * considered valid.
       */
      quorum?: string;
      /**
       * Format: byte
       * @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.
       */
      threshold?: string;
      /**
       * Format: byte
       * @description Minimum value of Veto votes to Total votes ratio for proposal to be
       * vetoed. Default value: 1/3.
       */
      veto_threshold?: string;
    };
    /** @description TallyResult defines a standard tally for a governance proposal. */
    "cosmos.gov.v1beta1.TallyResult": {
      /** @description yes is the number of yes votes on a proposal. */
      yes?: string;
      /** @description abstain is the number of abstain votes on a proposal. */
      abstain?: string;
      /** @description no is the number of no votes on a proposal. */
      no?: string;
      /** @description no_with_veto is the number of no with veto votes on a proposal. */
      no_with_veto?: string;
    };
    /**
     * @description Vote defines a vote on a governance proposal.
     * A Vote consists of a proposal ID, the voter, and the vote option.
     */
    "cosmos.gov.v1beta1.Vote": {
      /**
       * Format: uint64
       * @description proposal_id defines the unique id of the proposal.
       */
      proposal_id?: string;
      /** @description voter is the voter address of the proposal. */
      voter?: string;
      /**
       * @description Deprecated: Prefer to use `options` instead. This field is set in queries
       * if and only if `len(options) == 1` and that option has weight 1. In all
       * other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
       * @default VOTE_OPTION_UNSPECIFIED
       * @enum {string}
       */
      option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
      /**
       * @description options is the weighted vote options.
       *
       * Since: cosmos-sdk 0.43
       */
      options?: ({
          /**
           * @description option defines the valid vote options, it must not contain duplicate vote options.
           * @default VOTE_OPTION_UNSPECIFIED
           * @enum {string}
           */
          option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
          /** @description weight is the vote weight associated with the vote option. */
          weight?: string;
        })[];
    };
    /**
     * @description VoteOption enumerates the valid vote options for a given governance proposal.
     *
     *  - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
     *  - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
     *  - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
     *  - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
     *  - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
     * @default VOTE_OPTION_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.gov.v1beta1.VoteOption": "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
    /** @description VotingParams defines the params for voting on governance proposals. */
    "cosmos.gov.v1beta1.VotingParams": {
      /** @description Duration of the voting period. */
      voting_period?: string;
    };
    /**
     * @description WeightedVoteOption defines a unit of vote for vote split.
     *
     * Since: cosmos-sdk 0.43
     */
    "cosmos.gov.v1beta1.WeightedVoteOption": {
      /**
       * @description option defines the valid vote options, it must not contain duplicate vote options.
       * @default VOTE_OPTION_UNSPECIFIED
       * @enum {string}
       */
      option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
      /** @description weight is the vote weight associated with the vote option. */
      weight?: string;
    };
    /**
     * @description Deposit defines an amount deposited by an account address to an active
     * proposal.
     */
    "cosmos.gov.v1.Deposit": {
      /**
       * Format: uint64
       * @description proposal_id defines the unique id of the proposal.
       */
      proposal_id?: string;
      /** @description depositor defines the deposit addresses from the proposals. */
      depositor?: string;
      /** @description amount to be deposited by depositor. */
      amount?: {
          denom?: string;
          amount?: string;
        }[];
    };
    /** @description DepositParams defines the params for deposits on governance proposals. */
    "cosmos.gov.v1.DepositParams": {
      /** @description Minimum deposit for a proposal to enter voting period. */
      min_deposit?: {
          denom?: string;
          amount?: string;
        }[];
      /**
       * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
       * months.
       */
      max_deposit_period?: string;
    };
    /**
     * @description Params defines the parameters for the x/gov module.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.gov.v1.Params": {
      /** @description Minimum deposit for a proposal to enter voting period. */
      min_deposit?: {
          denom?: string;
          amount?: string;
        }[];
      /**
       * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
       * months.
       */
      max_deposit_period?: string;
      /** @description Duration of the voting period. */
      voting_period?: string;
      /**
       * @description Minimum percentage of total stake needed to vote for a result to be
       *  considered valid.
       */
      quorum?: string;
      /** @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5. */
      threshold?: string;
      /**
       * @description Minimum value of Veto votes to Total votes ratio for proposal to be
       *  vetoed. Default value: 1/3.
       */
      veto_threshold?: string;
      /** @description The ratio representing the proportion of the deposit value that must be paid at proposal submission. */
      min_initial_deposit_ratio?: string;
      /**
       * @description The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.
       *
       * Since: cosmos-sdk 0.50
       */
      proposal_cancel_ratio?: string;
      /**
       * @description The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
       * If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.
       *
       * Since: cosmos-sdk 0.50
       */
      proposal_cancel_dest?: string;
      /**
       * @description Duration of the voting period of an expedited proposal.
       *
       * Since: cosmos-sdk 0.50
       */
      expedited_voting_period?: string;
      /**
       * @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.
       *
       * Since: cosmos-sdk 0.50
       */
      expedited_threshold?: string;
      /** @description Minimum expedited deposit for a proposal to enter voting period. */
      expedited_min_deposit?: {
          denom?: string;
          amount?: string;
        }[];
      /** burn deposits if a proposal does not meet quorum */
      burn_vote_quorum?: boolean;
      /** burn deposits if the proposal does not enter voting period */
      burn_proposal_deposit_prevote?: boolean;
      /** burn deposits if quorum with vote type no_veto is met */
      burn_vote_veto?: boolean;
    };
    /** @description Proposal defines the core field members of a governance proposal. */
    "cosmos.gov.v1.Proposal": {
      /**
       * Format: uint64
       * @description id defines the unique id of the proposal.
       */
      id?: string;
      /** @description messages are the arbitrary messages to be executed if the proposal passes. */
      messages?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
      /**
       * @description status defines the proposal status.
       * @default PROPOSAL_STATUS_UNSPECIFIED
       * @enum {string}
       */
      status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
      /**
       * @description final_tally_result is the final tally result of the proposal. When
       * querying a proposal via gRPC, this field is not populated until the
       * proposal's voting period has ended.
       */
      final_tally_result?: {
        /** @description yes_count is the number of yes votes on a proposal. */
        yes_count?: string;
        /** @description abstain_count is the number of abstain votes on a proposal. */
        abstain_count?: string;
        /** @description no_count is the number of no votes on a proposal. */
        no_count?: string;
        /** @description no_with_veto_count is the number of no with veto votes on a proposal. */
        no_with_veto_count?: string;
      };
      /**
       * Format: date-time
       * @description submit_time is the time of proposal submission.
       */
      submit_time?: string;
      /**
       * Format: date-time
       * @description deposit_end_time is the end time for deposition.
       */
      deposit_end_time?: string;
      /** @description total_deposit is the total deposit on the proposal. */
      total_deposit?: {
          denom?: string;
          amount?: string;
        }[];
      /**
       * Format: date-time
       * @description voting_start_time is the starting time to vote on a proposal.
       */
      voting_start_time?: string;
      /**
       * Format: date-time
       * @description voting_end_time is the end time of voting on a proposal.
       */
      voting_end_time?: string;
      /**
       * metadata is any arbitrary metadata attached to the proposal.
       * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#proposal-3
       */
      metadata?: string;
      /**
       * title is the title of the proposal
       * @description Since: cosmos-sdk 0.47
       */
      title?: string;
      /**
       * summary is a short summary of the proposal
       * @description Since: cosmos-sdk 0.47
       */
      summary?: string;
      /**
       * proposer is the address of the proposal sumbitter
       * @description Since: cosmos-sdk 0.47
       */
      proposer?: string;
      /**
       * expedited defines if the proposal is expedited
       * @description Since: cosmos-sdk 0.50
       */
      expedited?: boolean;
      /**
       * failed_reason defines the reason why the proposal failed
       * @description Since: cosmos-sdk 0.50
       */
      failed_reason?: string;
    };
    /**
     * @description ProposalStatus enumerates the valid statuses of a proposal.
     *
     *  - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
     *  - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
     * period.
     *  - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
     * period.
     *  - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
     * passed.
     *  - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
     * been rejected.
     *  - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
     * failed.
     * @default PROPOSAL_STATUS_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.gov.v1.ProposalStatus": "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
    /** QueryConstitutionResponse is the response type for the Query/Constitution RPC method */
    "cosmos.gov.v1.QueryConstitutionResponse": {
      constitution?: string;
    };
    /** @description QueryDepositResponse is the response type for the Query/Deposit RPC method. */
    "cosmos.gov.v1.QueryDepositResponse": {
      /**
       * @description Deposit defines an amount deposited by an account address to an active
       * proposal.
       */
      deposit?: {
        /**
         * Format: uint64
         * @description proposal_id defines the unique id of the proposal.
         */
        proposal_id?: string;
        /** @description depositor defines the deposit addresses from the proposals. */
        depositor?: string;
        /** @description amount to be deposited by depositor. */
        amount?: {
            denom?: string;
            amount?: string;
          }[];
      };
    };
    /** @description QueryDepositsResponse is the response type for the Query/Deposits RPC method. */
    "cosmos.gov.v1.QueryDepositsResponse": {
      /** @description deposits defines the requested deposits. */
      deposits?: {
          /**
           * Format: uint64
           * @description proposal_id defines the unique id of the proposal.
           */
          proposal_id?: string;
          /** @description depositor defines the deposit addresses from the proposals. */
          depositor?: string;
          /** @description amount to be deposited by depositor. */
          amount?: {
              denom?: string;
              amount?: string;
            }[];
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryParamsResponse is the response type for the Query/Params RPC method. */
    "cosmos.gov.v1.QueryParamsResponse": {
      /**
       * @description Deprecated: Prefer to use `params` instead.
       * voting_params defines the parameters related to voting.
       */
      voting_params?: {
        /** @description Duration of the voting period. */
        voting_period?: string;
      };
      /**
       * @description Deprecated: Prefer to use `params` instead.
       * deposit_params defines the parameters related to deposit.
       */
      deposit_params?: {
        /** @description Minimum deposit for a proposal to enter voting period. */
        min_deposit?: {
            denom?: string;
            amount?: string;
          }[];
        /**
         * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
         * months.
         */
        max_deposit_period?: string;
      };
      /**
       * @description Deprecated: Prefer to use `params` instead.
       * tally_params defines the parameters related to tally.
       */
      tally_params?: {
        /**
         * @description Minimum percentage of total stake needed to vote for a result to be
         * considered valid.
         */
        quorum?: string;
        /** @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5. */
        threshold?: string;
        /**
         * @description Minimum value of Veto votes to Total votes ratio for proposal to be
         * vetoed. Default value: 1/3.
         */
        veto_threshold?: string;
      };
      /**
       * @description params defines all the paramaters of x/gov module.
       *
       * Since: cosmos-sdk 0.47
       */
      params?: {
        /** @description Minimum deposit for a proposal to enter voting period. */
        min_deposit?: {
            denom?: string;
            amount?: string;
          }[];
        /**
         * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
         * months.
         */
        max_deposit_period?: string;
        /** @description Duration of the voting period. */
        voting_period?: string;
        /**
         * @description Minimum percentage of total stake needed to vote for a result to be
         *  considered valid.
         */
        quorum?: string;
        /** @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5. */
        threshold?: string;
        /**
         * @description Minimum value of Veto votes to Total votes ratio for proposal to be
         *  vetoed. Default value: 1/3.
         */
        veto_threshold?: string;
        /** @description The ratio representing the proportion of the deposit value that must be paid at proposal submission. */
        min_initial_deposit_ratio?: string;
        /**
         * @description The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.
         *
         * Since: cosmos-sdk 0.50
         */
        proposal_cancel_ratio?: string;
        /**
         * @description The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
         * If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.
         *
         * Since: cosmos-sdk 0.50
         */
        proposal_cancel_dest?: string;
        /**
         * @description Duration of the voting period of an expedited proposal.
         *
         * Since: cosmos-sdk 0.50
         */
        expedited_voting_period?: string;
        /**
         * @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.
         *
         * Since: cosmos-sdk 0.50
         */
        expedited_threshold?: string;
        /** @description Minimum expedited deposit for a proposal to enter voting period. */
        expedited_min_deposit?: {
            denom?: string;
            amount?: string;
          }[];
        /** burn deposits if a proposal does not meet quorum */
        burn_vote_quorum?: boolean;
        /** burn deposits if the proposal does not enter voting period */
        burn_proposal_deposit_prevote?: boolean;
        /** burn deposits if quorum with vote type no_veto is met */
        burn_vote_veto?: boolean;
      };
    };
    /** @description QueryProposalResponse is the response type for the Query/Proposal RPC method. */
    "cosmos.gov.v1.QueryProposalResponse": {
      /** @description Proposal defines the core field members of a governance proposal. */
      proposal?: {
        /**
         * Format: uint64
         * @description id defines the unique id of the proposal.
         */
        id?: string;
        /** @description messages are the arbitrary messages to be executed if the proposal passes. */
        messages?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          }[];
        /**
         * @description status defines the proposal status.
         * @default PROPOSAL_STATUS_UNSPECIFIED
         * @enum {string}
         */
        status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
        /**
         * @description final_tally_result is the final tally result of the proposal. When
         * querying a proposal via gRPC, this field is not populated until the
         * proposal's voting period has ended.
         */
        final_tally_result?: {
          /** @description yes_count is the number of yes votes on a proposal. */
          yes_count?: string;
          /** @description abstain_count is the number of abstain votes on a proposal. */
          abstain_count?: string;
          /** @description no_count is the number of no votes on a proposal. */
          no_count?: string;
          /** @description no_with_veto_count is the number of no with veto votes on a proposal. */
          no_with_veto_count?: string;
        };
        /**
         * Format: date-time
         * @description submit_time is the time of proposal submission.
         */
        submit_time?: string;
        /**
         * Format: date-time
         * @description deposit_end_time is the end time for deposition.
         */
        deposit_end_time?: string;
        /** @description total_deposit is the total deposit on the proposal. */
        total_deposit?: {
            denom?: string;
            amount?: string;
          }[];
        /**
         * Format: date-time
         * @description voting_start_time is the starting time to vote on a proposal.
         */
        voting_start_time?: string;
        /**
         * Format: date-time
         * @description voting_end_time is the end time of voting on a proposal.
         */
        voting_end_time?: string;
        /**
         * metadata is any arbitrary metadata attached to the proposal.
         * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#proposal-3
         */
        metadata?: string;
        /**
         * title is the title of the proposal
         * @description Since: cosmos-sdk 0.47
         */
        title?: string;
        /**
         * summary is a short summary of the proposal
         * @description Since: cosmos-sdk 0.47
         */
        summary?: string;
        /**
         * proposer is the address of the proposal sumbitter
         * @description Since: cosmos-sdk 0.47
         */
        proposer?: string;
        /**
         * expedited defines if the proposal is expedited
         * @description Since: cosmos-sdk 0.50
         */
        expedited?: boolean;
        /**
         * failed_reason defines the reason why the proposal failed
         * @description Since: cosmos-sdk 0.50
         */
        failed_reason?: string;
      };
    };
    /**
     * @description QueryProposalsResponse is the response type for the Query/Proposals RPC
     * method.
     */
    "cosmos.gov.v1.QueryProposalsResponse": {
      /** @description proposals defines all the requested governance proposals. */
      proposals?: ({
          /**
           * Format: uint64
           * @description id defines the unique id of the proposal.
           */
          id?: string;
          /** @description messages are the arbitrary messages to be executed if the proposal passes. */
          messages?: {
              /**
               * @description A URL/resource name that uniquely identifies the type of the serialized
               * protocol buffer message. This string must contain at least
               * one "/" character. The last segment of the URL's path must represent
               * the fully qualified name of the type (as in
               * `path/google.protobuf.Duration`). The name should be in a canonical form
               * (e.g., leading "." is not accepted).
               *
               * In practice, teams usually precompile into the binary all types that they
               * expect it to use in the context of Any. However, for URLs which use the
               * scheme `http`, `https`, or no scheme, one can optionally set up a type
               * server that maps type URLs to message definitions as follows:
               *
               * * If no scheme is provided, `https` is assumed.
               * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
               *   value in binary format, or produce an error.
               * * Applications are allowed to cache lookup results based on the
               *   URL, or have them precompiled into a binary to avoid any
               *   lookup. Therefore, binary compatibility needs to be preserved
               *   on changes to types. (Use versioned type names to manage
               *   breaking changes.)
               *
               * Note: this functionality is not currently available in the official
               * protobuf release, and it is not used for type URLs beginning with
               * type.googleapis.com.
               *
               * Schemes other than `http`, `https` (or the empty scheme) might be
               * used with implementation specific semantics.
               */
              type_url?: string;
              /**
               * Format: byte
               * @description Must be a valid serialized protocol buffer of the above specified type.
               */
              value?: string;
            }[];
          /**
           * @description status defines the proposal status.
           * @default PROPOSAL_STATUS_UNSPECIFIED
           * @enum {string}
           */
          status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
          /**
           * @description final_tally_result is the final tally result of the proposal. When
           * querying a proposal via gRPC, this field is not populated until the
           * proposal's voting period has ended.
           */
          final_tally_result?: {
            /** @description yes_count is the number of yes votes on a proposal. */
            yes_count?: string;
            /** @description abstain_count is the number of abstain votes on a proposal. */
            abstain_count?: string;
            /** @description no_count is the number of no votes on a proposal. */
            no_count?: string;
            /** @description no_with_veto_count is the number of no with veto votes on a proposal. */
            no_with_veto_count?: string;
          };
          /**
           * Format: date-time
           * @description submit_time is the time of proposal submission.
           */
          submit_time?: string;
          /**
           * Format: date-time
           * @description deposit_end_time is the end time for deposition.
           */
          deposit_end_time?: string;
          /** @description total_deposit is the total deposit on the proposal. */
          total_deposit?: {
              denom?: string;
              amount?: string;
            }[];
          /**
           * Format: date-time
           * @description voting_start_time is the starting time to vote on a proposal.
           */
          voting_start_time?: string;
          /**
           * Format: date-time
           * @description voting_end_time is the end time of voting on a proposal.
           */
          voting_end_time?: string;
          /**
           * metadata is any arbitrary metadata attached to the proposal.
           * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#proposal-3
           */
          metadata?: string;
          /**
           * title is the title of the proposal
           * @description Since: cosmos-sdk 0.47
           */
          title?: string;
          /**
           * summary is a short summary of the proposal
           * @description Since: cosmos-sdk 0.47
           */
          summary?: string;
          /**
           * proposer is the address of the proposal sumbitter
           * @description Since: cosmos-sdk 0.47
           */
          proposer?: string;
          /**
           * expedited defines if the proposal is expedited
           * @description Since: cosmos-sdk 0.50
           */
          expedited?: boolean;
          /**
           * failed_reason defines the reason why the proposal failed
           * @description Since: cosmos-sdk 0.50
           */
          failed_reason?: string;
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryTallyResultResponse is the response type for the Query/Tally RPC method. */
    "cosmos.gov.v1.QueryTallyResultResponse": {
      /** @description tally defines the requested tally. */
      tally?: {
        /** @description yes_count is the number of yes votes on a proposal. */
        yes_count?: string;
        /** @description abstain_count is the number of abstain votes on a proposal. */
        abstain_count?: string;
        /** @description no_count is the number of no votes on a proposal. */
        no_count?: string;
        /** @description no_with_veto_count is the number of no with veto votes on a proposal. */
        no_with_veto_count?: string;
      };
    };
    /** @description QueryVoteResponse is the response type for the Query/Vote RPC method. */
    "cosmos.gov.v1.QueryVoteResponse": {
      /**
       * @description Vote defines a vote on a governance proposal.
       * A Vote consists of a proposal ID, the voter, and the vote option.
       */
      vote?: {
        /**
         * Format: uint64
         * @description proposal_id defines the unique id of the proposal.
         */
        proposal_id?: string;
        /** @description voter is the voter address of the proposal. */
        voter?: string;
        /** @description options is the weighted vote options. */
        options?: ({
            /**
             * @description option defines the valid vote options, it must not contain duplicate vote options.
             * @default VOTE_OPTION_UNSPECIFIED
             * @enum {string}
             */
            option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
            /** @description weight is the vote weight associated with the vote option. */
            weight?: string;
          })[];
        /**
         * metadata is any arbitrary metadata attached to the vote.
         * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
         */
        metadata?: string;
      };
    };
    /** @description QueryVotesResponse is the response type for the Query/Votes RPC method. */
    "cosmos.gov.v1.QueryVotesResponse": {
      /** @description votes defines the queried votes. */
      votes?: ({
          /**
           * Format: uint64
           * @description proposal_id defines the unique id of the proposal.
           */
          proposal_id?: string;
          /** @description voter is the voter address of the proposal. */
          voter?: string;
          /** @description options is the weighted vote options. */
          options?: ({
              /**
               * @description option defines the valid vote options, it must not contain duplicate vote options.
               * @default VOTE_OPTION_UNSPECIFIED
               * @enum {string}
               */
              option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
              /** @description weight is the vote weight associated with the vote option. */
              weight?: string;
            })[];
          /**
           * metadata is any arbitrary metadata attached to the vote.
           * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
           */
          metadata?: string;
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description TallyParams defines the params for tallying votes on governance proposals. */
    "cosmos.gov.v1.TallyParams": {
      /**
       * @description Minimum percentage of total stake needed to vote for a result to be
       * considered valid.
       */
      quorum?: string;
      /** @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5. */
      threshold?: string;
      /**
       * @description Minimum value of Veto votes to Total votes ratio for proposal to be
       * vetoed. Default value: 1/3.
       */
      veto_threshold?: string;
    };
    /** @description TallyResult defines a standard tally for a governance proposal. */
    "cosmos.gov.v1.TallyResult": {
      /** @description yes_count is the number of yes votes on a proposal. */
      yes_count?: string;
      /** @description abstain_count is the number of abstain votes on a proposal. */
      abstain_count?: string;
      /** @description no_count is the number of no votes on a proposal. */
      no_count?: string;
      /** @description no_with_veto_count is the number of no with veto votes on a proposal. */
      no_with_veto_count?: string;
    };
    /**
     * @description Vote defines a vote on a governance proposal.
     * A Vote consists of a proposal ID, the voter, and the vote option.
     */
    "cosmos.gov.v1.Vote": {
      /**
       * Format: uint64
       * @description proposal_id defines the unique id of the proposal.
       */
      proposal_id?: string;
      /** @description voter is the voter address of the proposal. */
      voter?: string;
      /** @description options is the weighted vote options. */
      options?: ({
          /**
           * @description option defines the valid vote options, it must not contain duplicate vote options.
           * @default VOTE_OPTION_UNSPECIFIED
           * @enum {string}
           */
          option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
          /** @description weight is the vote weight associated with the vote option. */
          weight?: string;
        })[];
      /**
       * metadata is any arbitrary metadata attached to the vote.
       * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
       */
      metadata?: string;
    };
    /**
     * @description VoteOption enumerates the valid vote options for a given governance proposal.
     *
     *  - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
     *  - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
     *  - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
     *  - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
     *  - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
     * @default VOTE_OPTION_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.gov.v1.VoteOption": "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
    /** @description VotingParams defines the params for voting on governance proposals. */
    "cosmos.gov.v1.VotingParams": {
      /** @description Duration of the voting period. */
      voting_period?: string;
    };
    /** @description WeightedVoteOption defines a unit of vote for vote split. */
    "cosmos.gov.v1.WeightedVoteOption": {
      /**
       * @description option defines the valid vote options, it must not contain duplicate vote options.
       * @default VOTE_OPTION_UNSPECIFIED
       * @enum {string}
       */
      option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
      /** @description weight is the vote weight associated with the vote option. */
      weight?: string;
    };
    /** @description Params defines the parameters for the x/mint module. */
    "cosmos.mint.v1beta1.Params": {
      /** type of coin to mint */
      mint_denom?: string;
      /** maximum annual change in inflation rate */
      inflation_rate_change?: string;
      /** maximum inflation rate */
      inflation_max?: string;
      /** minimum inflation rate */
      inflation_min?: string;
      /** goal of percent bonded atoms */
      goal_bonded?: string;
      /**
       * expected blocks per year
       * Format: uint64
       */
      blocks_per_year?: string;
    };
    /**
     * @description QueryAnnualProvisionsResponse is the response type for the
     * Query/AnnualProvisions RPC method.
     */
    "cosmos.mint.v1beta1.QueryAnnualProvisionsResponse": {
      /**
       * Format: byte
       * @description annual_provisions is the current minting annual provisions value.
       */
      annual_provisions?: string;
    };
    /**
     * @description QueryInflationResponse is the response type for the Query/Inflation RPC
     * method.
     */
    "cosmos.mint.v1beta1.QueryInflationResponse": {
      /**
       * Format: byte
       * @description inflation is the current minting inflation value.
       */
      inflation?: string;
    };
    /** @description QueryParamsResponse is the response type for the Query/Params RPC method. */
    "cosmos.mint.v1beta1.QueryParamsResponse": {
      /** @description params defines the parameters of the module. */
      params?: {
        /** type of coin to mint */
        mint_denom?: string;
        /** maximum annual change in inflation rate */
        inflation_rate_change?: string;
        /** maximum inflation rate */
        inflation_max?: string;
        /** minimum inflation rate */
        inflation_min?: string;
        /** goal of percent bonded atoms */
        goal_bonded?: string;
        /**
         * expected blocks per year
         * Format: uint64
         */
        blocks_per_year?: string;
      };
    };
    /**
     * @description ParamChange defines an individual parameter change, for use in
     * ParameterChangeProposal.
     */
    "cosmos.params.v1beta1.ParamChange": {
      subspace?: string;
      key?: string;
      value?: string;
    };
    /** @description QueryParamsResponse is response type for the Query/Params RPC method. */
    "cosmos.params.v1beta1.QueryParamsResponse": {
      /** @description param defines the queried parameter. */
      param?: {
        subspace?: string;
        key?: string;
        value?: string;
      };
    };
    /**
     * @description QuerySubspacesResponse defines the response types for querying for all
     * registered subspaces and all keys for a subspace.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.params.v1beta1.QuerySubspacesResponse": {
      subspaces?: {
          subspace?: string;
          keys?: string[];
        }[];
    };
    /**
     * @description Subspace defines a parameter subspace name and all the keys that exist for
     * the subspace.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.params.v1beta1.Subspace": {
      subspace?: string;
      keys?: string[];
    };
    /** @description Params represents the parameters used for by the slashing module. */
    "cosmos.slashing.v1beta1.Params": {
      /** Format: int64 */
      signed_blocks_window?: string;
      /** Format: byte */
      min_signed_per_window?: string;
      downtime_jail_duration?: string;
      /** Format: byte */
      slash_fraction_double_sign?: string;
      /** Format: byte */
      slash_fraction_downtime?: string;
    };
    /** QueryParamsResponse is the response type for the Query/Params RPC method */
    "cosmos.slashing.v1beta1.QueryParamsResponse": {
      /** @description Params represents the parameters used for by the slashing module. */
      params?: {
        /** Format: int64 */
        signed_blocks_window?: string;
        /** Format: byte */
        min_signed_per_window?: string;
        downtime_jail_duration?: string;
        /** Format: byte */
        slash_fraction_double_sign?: string;
        /** Format: byte */
        slash_fraction_downtime?: string;
      };
    };
    /**
     * QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
     * method
     */
    "cosmos.slashing.v1beta1.QuerySigningInfoResponse": {
      /**
       * val_signing_info is the signing info of requested val cons address
       * @description ValidatorSigningInfo defines a validator's signing info for monitoring their
       * liveness activity.
       */
      val_signing_info?: {
        address?: string;
        /**
         * Height at which validator was first a candidate OR was un-jailed
         * Format: int64
         */
        start_height?: string;
        /**
         * Format: int64
         * @description Index which is incremented every time a validator is bonded in a block and
         * _may_ have signed a pre-commit or not. This in conjunction with the
         * signed_blocks_window param determines the index in the missed block bitmap.
         */
        index_offset?: string;
        /**
         * Format: date-time
         * @description Timestamp until which the validator is jailed due to liveness downtime.
         */
        jailed_until?: string;
        /**
         * @description Whether or not a validator has been tombstoned (killed out of validator
         * set). It is set once the validator commits an equivocation or for any other
         * configured misbehavior.
         */
        tombstoned?: boolean;
        /**
         * Format: int64
         * @description A counter of missed (unsigned) blocks. It is used to avoid unnecessary
         * reads in the missed block bitmap.
         */
        missed_blocks_counter?: string;
      };
    };
    /**
     * QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
     * method
     */
    "cosmos.slashing.v1beta1.QuerySigningInfosResponse": {
      /** info is the signing info of all validators */
      info?: {
          address?: string;
          /**
           * Height at which validator was first a candidate OR was un-jailed
           * Format: int64
           */
          start_height?: string;
          /**
           * Format: int64
           * @description Index which is incremented every time a validator is bonded in a block and
           * _may_ have signed a pre-commit or not. This in conjunction with the
           * signed_blocks_window param determines the index in the missed block bitmap.
           */
          index_offset?: string;
          /**
           * Format: date-time
           * @description Timestamp until which the validator is jailed due to liveness downtime.
           */
          jailed_until?: string;
          /**
           * @description Whether or not a validator has been tombstoned (killed out of validator
           * set). It is set once the validator commits an equivocation or for any other
           * configured misbehavior.
           */
          tombstoned?: boolean;
          /**
           * Format: int64
           * @description A counter of missed (unsigned) blocks. It is used to avoid unnecessary
           * reads in the missed block bitmap.
           */
          missed_blocks_counter?: string;
        }[];
      /**
       * @description PageResponse is to be embedded in gRPC response messages where the
       * corresponding request message has used PageRequest.
       *
       *  message SomeResponse {
       *          repeated Bar results = 1;
       *          PageResponse page = 2;
       *  }
       */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description ValidatorSigningInfo defines a validator's signing info for monitoring their
     * liveness activity.
     */
    "cosmos.slashing.v1beta1.ValidatorSigningInfo": {
      address?: string;
      /**
       * Height at which validator was first a candidate OR was un-jailed
       * Format: int64
       */
      start_height?: string;
      /**
       * Format: int64
       * @description Index which is incremented every time a validator is bonded in a block and
       * _may_ have signed a pre-commit or not. This in conjunction with the
       * signed_blocks_window param determines the index in the missed block bitmap.
       */
      index_offset?: string;
      /**
       * Format: date-time
       * @description Timestamp until which the validator is jailed due to liveness downtime.
       */
      jailed_until?: string;
      /**
       * @description Whether or not a validator has been tombstoned (killed out of validator
       * set). It is set once the validator commits an equivocation or for any other
       * configured misbehavior.
       */
      tombstoned?: boolean;
      /**
       * Format: int64
       * @description A counter of missed (unsigned) blocks. It is used to avoid unnecessary
       * reads in the missed block bitmap.
       */
      missed_blocks_counter?: string;
    };
    /**
     * @description BondStatus is the status of a validator.
     *
     *  - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
     *  - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
     *  - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
     *  - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
     * @default BOND_STATUS_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.staking.v1beta1.BondStatus": "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
    /** @description Commission defines commission parameters for a given validator. */
    "cosmos.staking.v1beta1.Commission": {
      /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
      commission_rates?: {
        /** @description rate is the commission rate charged to delegators, as a fraction. */
        rate?: string;
        /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
        max_rate?: string;
        /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
        max_change_rate?: string;
      };
      /**
       * Format: date-time
       * @description update_time is the last time the commission rate was changed.
       */
      update_time?: string;
    };
    /**
     * @description CommissionRates defines the initial commission rates to be used for creating
     * a validator.
     */
    "cosmos.staking.v1beta1.CommissionRates": {
      /** @description rate is the commission rate charged to delegators, as a fraction. */
      rate?: string;
      /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
      max_rate?: string;
      /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
      max_change_rate?: string;
    };
    /**
     * @description Delegation represents the bond with tokens held by an account. It is
     * owned by one delegator, and is associated with the voting power of one
     * validator.
     */
    "cosmos.staking.v1beta1.Delegation": {
      /** @description delegator_address is the encoded address of the delegator. */
      delegator_address?: string;
      /** @description validator_address is the encoded address of the validator. */
      validator_address?: string;
      /** @description shares define the delegation shares received. */
      shares?: string;
    };
    /**
     * @description DelegationResponse is equivalent to Delegation except that it contains a
     * balance in addition to shares which is more suitable for client responses.
     */
    "cosmos.staking.v1beta1.DelegationResponse": {
      /**
       * @description Delegation represents the bond with tokens held by an account. It is
       * owned by one delegator, and is associated with the voting power of one
       * validator.
       */
      delegation?: {
        /** @description delegator_address is the encoded address of the delegator. */
        delegator_address?: string;
        /** @description validator_address is the encoded address of the validator. */
        validator_address?: string;
        /** @description shares define the delegation shares received. */
        shares?: string;
      };
      /**
       * @description Coin defines a token with a denomination and an amount.
       *
       * NOTE: The amount field is an Int which implements the custom method
       * signatures required by gogoproto.
       */
      balance?: {
        denom?: string;
        amount?: string;
      };
    };
    /** @description Description defines a validator description. */
    "cosmos.staking.v1beta1.Description": {
      /** @description moniker defines a human-readable name for the validator. */
      moniker?: string;
      /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
      identity?: string;
      /** @description website defines an optional website link. */
      website?: string;
      /** @description security_contact defines an optional email for security contact. */
      security_contact?: string;
      /** @description details define other optional details. */
      details?: string;
    };
    /**
     * @description HistoricalInfo contains header and validator information for a given block.
     * It is stored as part of staking module's state, which persists the `n` most
     * recent HistoricalInfo
     * (`n` is set by the staking module's `historical_entries` parameter).
     */
    "cosmos.staking.v1beta1.HistoricalInfo": {
      /** @description Header defines the structure of a block header. */
      header?: {
        /**
         * basic block info
         * @description Consensus captures the consensus rules for processing a block in the blockchain,
         * including all blockchain data structures and the rules of the application's
         * state transition machine.
         */
        version?: {
          /** Format: uint64 */
          block?: string;
          /** Format: uint64 */
          app?: string;
        };
        chain_id?: string;
        /** Format: int64 */
        height?: string;
        /** Format: date-time */
        time?: string;
        /** prev block info */
        last_block_id?: {
          /** Format: byte */
          hash?: string;
          /** PartsetHeader */
          part_set_header?: {
            /** Format: int64 */
            total?: number;
            /** Format: byte */
            hash?: string;
          };
        };
        /**
         * hashes of block data
         * Format: byte
         */
        last_commit_hash?: string;
        /** Format: byte */
        data_hash?: string;
        /**
         * hashes from the app output from the prev block
         * Format: byte
         */
        validators_hash?: string;
        /** Format: byte */
        next_validators_hash?: string;
        /** Format: byte */
        consensus_hash?: string;
        /** Format: byte */
        app_hash?: string;
        /** Format: byte */
        last_results_hash?: string;
        /**
         * consensus info
         * Format: byte
         */
        evidence_hash?: string;
        /** Format: byte */
        proposer_address?: string;
      };
      valset?: ({
          /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
          operator_address?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          consensus_pubkey?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /** @description jailed defined whether the validator has been jailed from bonded status or not. */
          jailed?: boolean;
          /**
           * @description status is the validator status (bonded/unbonding/unbonded).
           * @default BOND_STATUS_UNSPECIFIED
           * @enum {string}
           */
          status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
          /** @description tokens define the delegated tokens (incl. self-delegation). */
          tokens?: string;
          /** @description delegator_shares defines total shares issued to a validator's delegators. */
          delegator_shares?: string;
          /** @description description defines the description terms for the validator. */
          description?: {
            /** @description moniker defines a human-readable name for the validator. */
            moniker?: string;
            /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
            identity?: string;
            /** @description website defines an optional website link. */
            website?: string;
            /** @description security_contact defines an optional email for security contact. */
            security_contact?: string;
            /** @description details define other optional details. */
            details?: string;
          };
          /**
           * Format: int64
           * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
           */
          unbonding_height?: string;
          /**
           * Format: date-time
           * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
           */
          unbonding_time?: string;
          /** @description commission defines the commission parameters. */
          commission?: {
            /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
            commission_rates?: {
              /** @description rate is the commission rate charged to delegators, as a fraction. */
              rate?: string;
              /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
              max_rate?: string;
              /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
              max_change_rate?: string;
            };
            /**
             * Format: date-time
             * @description update_time is the last time the commission rate was changed.
             */
            update_time?: string;
          };
          /**
           * @description min_self_delegation is the validator's self declared minimum self delegation.
           *
           * Since: cosmos-sdk 0.46
           */
          min_self_delegation?: string;
          /**
           * strictly positive if this validator's unbonding has been stopped by external modules
           * Format: int64
           */
          unbonding_on_hold_ref_count?: string;
          /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
          unbonding_ids?: string[];
        })[];
    };
    /** @description Params defines the parameters for the x/staking module. */
    "cosmos.staking.v1beta1.Params": {
      /** @description unbonding_time is the time duration of unbonding. */
      unbonding_time?: string;
      /**
       * Format: int64
       * @description max_validators is the maximum number of validators.
       */
      max_validators?: number;
      /**
       * Format: int64
       * @description max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
       */
      max_entries?: number;
      /**
       * Format: int64
       * @description historical_entries is the number of historical entries to persist.
       */
      historical_entries?: number;
      /** @description bond_denom defines the bondable coin denomination. */
      bond_denom?: string;
      /** min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators */
      min_commission_rate?: string;
    };
    /**
     * @description Pool is used for tracking bonded and not-bonded token supply of the bond
     * denomination.
     */
    "cosmos.staking.v1beta1.Pool": {
      not_bonded_tokens?: string;
      bonded_tokens?: string;
    };
    /** @description QueryDelegationResponse is response type for the Query/Delegation RPC method. */
    "cosmos.staking.v1beta1.QueryDelegationResponse": {
      /**
       * @description DelegationResponse is equivalent to Delegation except that it contains a
       * balance in addition to shares which is more suitable for client responses.
       */
      delegation_response?: {
        /**
         * @description Delegation represents the bond with tokens held by an account. It is
         * owned by one delegator, and is associated with the voting power of one
         * validator.
         */
        delegation?: {
          /** @description delegator_address is the encoded address of the delegator. */
          delegator_address?: string;
          /** @description validator_address is the encoded address of the validator. */
          validator_address?: string;
          /** @description shares define the delegation shares received. */
          shares?: string;
        };
        /**
         * @description Coin defines a token with a denomination and an amount.
         *
         * NOTE: The amount field is an Int which implements the custom method
         * signatures required by gogoproto.
         */
        balance?: {
          denom?: string;
          amount?: string;
        };
      };
    };
    /**
     * @description QueryDelegatorDelegationsResponse is response type for the
     * Query/DelegatorDelegations RPC method.
     */
    "cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse": {
      /** @description delegation_responses defines all the delegations' info of a delegator. */
      delegation_responses?: {
          /**
           * @description Delegation represents the bond with tokens held by an account. It is
           * owned by one delegator, and is associated with the voting power of one
           * validator.
           */
          delegation?: {
            /** @description delegator_address is the encoded address of the delegator. */
            delegator_address?: string;
            /** @description validator_address is the encoded address of the validator. */
            validator_address?: string;
            /** @description shares define the delegation shares received. */
            shares?: string;
          };
          /**
           * @description Coin defines a token with a denomination and an amount.
           *
           * NOTE: The amount field is an Int which implements the custom method
           * signatures required by gogoproto.
           */
          balance?: {
            denom?: string;
            amount?: string;
          };
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description QueryUnbondingDelegatorDelegationsResponse is response type for the
     * Query/UnbondingDelegatorDelegations RPC method.
     */
    "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse": {
      unbonding_responses?: {
          /** @description delegator_address is the encoded address of the delegator. */
          delegator_address?: string;
          /** @description validator_address is the encoded address of the validator. */
          validator_address?: string;
          /** @description entries are the unbonding delegation entries. */
          entries?: {
              /**
               * Format: int64
               * @description creation_height is the height which the unbonding took place.
               */
              creation_height?: string;
              /**
               * Format: date-time
               * @description completion_time is the unix time for unbonding completion.
               */
              completion_time?: string;
              /** @description initial_balance defines the tokens initially scheduled to receive at completion. */
              initial_balance?: string;
              /** @description balance defines the tokens to receive at completion. */
              balance?: string;
              /**
               * Incrementing id that uniquely identifies this entry
               * Format: uint64
               */
              unbonding_id?: string;
              /**
               * Strictly positive if this entry's unbonding has been stopped by external modules
               * Format: int64
               */
              unbonding_on_hold_ref_count?: string;
            }[];
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description QueryDelegatorValidatorResponse response type for the
     * Query/DelegatorValidator RPC method.
     */
    "cosmos.staking.v1beta1.QueryDelegatorValidatorResponse": {
      /**
       * @description Validator defines a validator, together with the total amount of the
       * Validator's bond shares and their exchange rate to coins. Slashing results in
       * a decrease in the exchange rate, allowing correct calculation of future
       * undelegations without iterating over delegators. When coins are delegated to
       * this validator, the validator is credited with a delegation whose number of
       * bond shares is based on the amount of coins delegated divided by the current
       * exchange rate. Voting power can be calculated as total bonded shares
       * multiplied by exchange rate.
       */
      validator?: {
        /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
        operator_address?: string;
        /**
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        consensus_pubkey?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
        /** @description jailed defined whether the validator has been jailed from bonded status or not. */
        jailed?: boolean;
        /**
         * @description status is the validator status (bonded/unbonding/unbonded).
         * @default BOND_STATUS_UNSPECIFIED
         * @enum {string}
         */
        status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
        /** @description tokens define the delegated tokens (incl. self-delegation). */
        tokens?: string;
        /** @description delegator_shares defines total shares issued to a validator's delegators. */
        delegator_shares?: string;
        /** @description description defines the description terms for the validator. */
        description?: {
          /** @description moniker defines a human-readable name for the validator. */
          moniker?: string;
          /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
          identity?: string;
          /** @description website defines an optional website link. */
          website?: string;
          /** @description security_contact defines an optional email for security contact. */
          security_contact?: string;
          /** @description details define other optional details. */
          details?: string;
        };
        /**
         * Format: int64
         * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
         */
        unbonding_height?: string;
        /**
         * Format: date-time
         * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
         */
        unbonding_time?: string;
        /** @description commission defines the commission parameters. */
        commission?: {
          /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
          commission_rates?: {
            /** @description rate is the commission rate charged to delegators, as a fraction. */
            rate?: string;
            /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
            max_rate?: string;
            /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
            max_change_rate?: string;
          };
          /**
           * Format: date-time
           * @description update_time is the last time the commission rate was changed.
           */
          update_time?: string;
        };
        /**
         * @description min_self_delegation is the validator's self declared minimum self delegation.
         *
         * Since: cosmos-sdk 0.46
         */
        min_self_delegation?: string;
        /**
         * strictly positive if this validator's unbonding has been stopped by external modules
         * Format: int64
         */
        unbonding_on_hold_ref_count?: string;
        /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
        unbonding_ids?: string[];
      };
    };
    /**
     * @description QueryDelegatorValidatorsResponse is response type for the
     * Query/DelegatorValidators RPC method.
     */
    "cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse": {
      /** @description validators defines the validators' info of a delegator. */
      validators?: ({
          /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
          operator_address?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          consensus_pubkey?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /** @description jailed defined whether the validator has been jailed from bonded status or not. */
          jailed?: boolean;
          /**
           * @description status is the validator status (bonded/unbonding/unbonded).
           * @default BOND_STATUS_UNSPECIFIED
           * @enum {string}
           */
          status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
          /** @description tokens define the delegated tokens (incl. self-delegation). */
          tokens?: string;
          /** @description delegator_shares defines total shares issued to a validator's delegators. */
          delegator_shares?: string;
          /** @description description defines the description terms for the validator. */
          description?: {
            /** @description moniker defines a human-readable name for the validator. */
            moniker?: string;
            /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
            identity?: string;
            /** @description website defines an optional website link. */
            website?: string;
            /** @description security_contact defines an optional email for security contact. */
            security_contact?: string;
            /** @description details define other optional details. */
            details?: string;
          };
          /**
           * Format: int64
           * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
           */
          unbonding_height?: string;
          /**
           * Format: date-time
           * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
           */
          unbonding_time?: string;
          /** @description commission defines the commission parameters. */
          commission?: {
            /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
            commission_rates?: {
              /** @description rate is the commission rate charged to delegators, as a fraction. */
              rate?: string;
              /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
              max_rate?: string;
              /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
              max_change_rate?: string;
            };
            /**
             * Format: date-time
             * @description update_time is the last time the commission rate was changed.
             */
            update_time?: string;
          };
          /**
           * @description min_self_delegation is the validator's self declared minimum self delegation.
           *
           * Since: cosmos-sdk 0.46
           */
          min_self_delegation?: string;
          /**
           * strictly positive if this validator's unbonding has been stopped by external modules
           * Format: int64
           */
          unbonding_on_hold_ref_count?: string;
          /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
          unbonding_ids?: string[];
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC
     * method.
     */
    "cosmos.staking.v1beta1.QueryHistoricalInfoResponse": {
      /** @description hist defines the historical info at the given height. */
      hist?: {
        /** @description Header defines the structure of a block header. */
        header?: {
          /**
           * basic block info
           * @description Consensus captures the consensus rules for processing a block in the blockchain,
           * including all blockchain data structures and the rules of the application's
           * state transition machine.
           */
          version?: {
            /** Format: uint64 */
            block?: string;
            /** Format: uint64 */
            app?: string;
          };
          chain_id?: string;
          /** Format: int64 */
          height?: string;
          /** Format: date-time */
          time?: string;
          /** prev block info */
          last_block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /**
           * hashes of block data
           * Format: byte
           */
          last_commit_hash?: string;
          /** Format: byte */
          data_hash?: string;
          /**
           * hashes from the app output from the prev block
           * Format: byte
           */
          validators_hash?: string;
          /** Format: byte */
          next_validators_hash?: string;
          /** Format: byte */
          consensus_hash?: string;
          /** Format: byte */
          app_hash?: string;
          /** Format: byte */
          last_results_hash?: string;
          /**
           * consensus info
           * Format: byte
           */
          evidence_hash?: string;
          /** Format: byte */
          proposer_address?: string;
        };
        valset?: ({
            /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
            operator_address?: string;
            /**
             * @description `Any` contains an arbitrary serialized protocol buffer message along with a
             * URL that describes the type of the serialized message.
             *
             * Protobuf library provides support to pack/unpack Any values in the form
             * of utility functions or additional generated methods of the Any type.
             *
             * Example 1: Pack and unpack a message in C++.
             *
             *     Foo foo = ...;
             *     Any any;
             *     any.PackFrom(foo);
             *     ...
             *     if (any.UnpackTo(&foo)) {
             *       ...
             *     }
             *
             * Example 2: Pack and unpack a message in Java.
             *
             *     Foo foo = ...;
             *     Any any = Any.pack(foo);
             *     ...
             *     if (any.is(Foo.class)) {
             *       foo = any.unpack(Foo.class);
             *     }
             *     // or ...
             *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
             *       foo = any.unpack(Foo.getDefaultInstance());
             *     }
             *
             * Example 3: Pack and unpack a message in Python.
             *
             *     foo = Foo(...)
             *     any = Any()
             *     any.Pack(foo)
             *     ...
             *     if any.Is(Foo.DESCRIPTOR):
             *       any.Unpack(foo)
             *       ...
             *
             * Example 4: Pack and unpack a message in Go
             *
             *      foo := &pb.Foo{...}
             *      any, err := anypb.New(foo)
             *      if err != nil {
             *        ...
             *      }
             *      ...
             *      foo := &pb.Foo{}
             *      if err := any.UnmarshalTo(foo); err != nil {
             *        ...
             *      }
             *
             * The pack methods provided by protobuf library will by default use
             * 'type.googleapis.com/full.type.name' as the type URL and the unpack
             * methods only use the fully qualified type name after the last '/'
             * in the type URL, for example "foo.bar.com/x/y.z" will yield type
             * name "y.z".
             *
             * JSON
             *
             * The JSON representation of an `Any` value uses the regular
             * representation of the deserialized, embedded message, with an
             * additional field `@type` which contains the type URL. Example:
             *
             *     package google.profile;
             *     message Person {
             *       string first_name = 1;
             *       string last_name = 2;
             *     }
             *
             *     {
             *       "@type": "type.googleapis.com/google.profile.Person",
             *       "firstName": <string>,
             *       "lastName": <string>
             *     }
             *
             * If the embedded message type is well-known and has a custom JSON
             * representation, that representation will be embedded adding a field
             * `value` which holds the custom JSON in addition to the `@type`
             * field. Example (for message [google.protobuf.Duration][]):
             *
             *     {
             *       "@type": "type.googleapis.com/google.protobuf.Duration",
             *       "value": "1.212s"
             *     }
             */
            consensus_pubkey?: {
              /**
               * @description A URL/resource name that uniquely identifies the type of the serialized
               * protocol buffer message. This string must contain at least
               * one "/" character. The last segment of the URL's path must represent
               * the fully qualified name of the type (as in
               * `path/google.protobuf.Duration`). The name should be in a canonical form
               * (e.g., leading "." is not accepted).
               *
               * In practice, teams usually precompile into the binary all types that they
               * expect it to use in the context of Any. However, for URLs which use the
               * scheme `http`, `https`, or no scheme, one can optionally set up a type
               * server that maps type URLs to message definitions as follows:
               *
               * * If no scheme is provided, `https` is assumed.
               * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
               *   value in binary format, or produce an error.
               * * Applications are allowed to cache lookup results based on the
               *   URL, or have them precompiled into a binary to avoid any
               *   lookup. Therefore, binary compatibility needs to be preserved
               *   on changes to types. (Use versioned type names to manage
               *   breaking changes.)
               *
               * Note: this functionality is not currently available in the official
               * protobuf release, and it is not used for type URLs beginning with
               * type.googleapis.com.
               *
               * Schemes other than `http`, `https` (or the empty scheme) might be
               * used with implementation specific semantics.
               */
              type_url?: string;
              /**
               * Format: byte
               * @description Must be a valid serialized protocol buffer of the above specified type.
               */
              value?: string;
            };
            /** @description jailed defined whether the validator has been jailed from bonded status or not. */
            jailed?: boolean;
            /**
             * @description status is the validator status (bonded/unbonding/unbonded).
             * @default BOND_STATUS_UNSPECIFIED
             * @enum {string}
             */
            status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
            /** @description tokens define the delegated tokens (incl. self-delegation). */
            tokens?: string;
            /** @description delegator_shares defines total shares issued to a validator's delegators. */
            delegator_shares?: string;
            /** @description description defines the description terms for the validator. */
            description?: {
              /** @description moniker defines a human-readable name for the validator. */
              moniker?: string;
              /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
              identity?: string;
              /** @description website defines an optional website link. */
              website?: string;
              /** @description security_contact defines an optional email for security contact. */
              security_contact?: string;
              /** @description details define other optional details. */
              details?: string;
            };
            /**
             * Format: int64
             * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
             */
            unbonding_height?: string;
            /**
             * Format: date-time
             * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
             */
            unbonding_time?: string;
            /** @description commission defines the commission parameters. */
            commission?: {
              /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
              commission_rates?: {
                /** @description rate is the commission rate charged to delegators, as a fraction. */
                rate?: string;
                /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
                max_rate?: string;
                /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
                max_change_rate?: string;
              };
              /**
               * Format: date-time
               * @description update_time is the last time the commission rate was changed.
               */
              update_time?: string;
            };
            /**
             * @description min_self_delegation is the validator's self declared minimum self delegation.
             *
             * Since: cosmos-sdk 0.46
             */
            min_self_delegation?: string;
            /**
             * strictly positive if this validator's unbonding has been stopped by external modules
             * Format: int64
             */
            unbonding_on_hold_ref_count?: string;
            /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
            unbonding_ids?: string[];
          })[];
      };
    };
    /** @description QueryParamsResponse is response type for the Query/Params RPC method. */
    "cosmos.staking.v1beta1.QueryParamsResponse": {
      /** @description params holds all the parameters of this module. */
      params?: {
        /** @description unbonding_time is the time duration of unbonding. */
        unbonding_time?: string;
        /**
         * Format: int64
         * @description max_validators is the maximum number of validators.
         */
        max_validators?: number;
        /**
         * Format: int64
         * @description max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
         */
        max_entries?: number;
        /**
         * Format: int64
         * @description historical_entries is the number of historical entries to persist.
         */
        historical_entries?: number;
        /** @description bond_denom defines the bondable coin denomination. */
        bond_denom?: string;
        /** min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators */
        min_commission_rate?: string;
      };
    };
    /** @description QueryPoolResponse is response type for the Query/Pool RPC method. */
    "cosmos.staking.v1beta1.QueryPoolResponse": {
      /** @description pool defines the pool info. */
      pool?: {
        not_bonded_tokens?: string;
        bonded_tokens?: string;
      };
    };
    /**
     * @description QueryRedelegationsResponse is response type for the Query/Redelegations RPC
     * method.
     */
    "cosmos.staking.v1beta1.QueryRedelegationsResponse": {
      redelegation_responses?: {
          /**
           * @description Redelegation contains the list of a particular delegator's redelegating bonds
           * from a particular source validator to a particular destination validator.
           */
          redelegation?: {
            /** @description delegator_address is the bech32-encoded address of the delegator. */
            delegator_address?: string;
            /** @description validator_src_address is the validator redelegation source operator address. */
            validator_src_address?: string;
            /** @description validator_dst_address is the validator redelegation destination operator address. */
            validator_dst_address?: string;
            /** @description entries are the redelegation entries. */
            entries?: {
                /**
                 * Format: int64
                 * @description creation_height  defines the height which the redelegation took place.
                 */
                creation_height?: string;
                /**
                 * Format: date-time
                 * @description completion_time defines the unix time for redelegation completion.
                 */
                completion_time?: string;
                /** @description initial_balance defines the initial balance when redelegation started. */
                initial_balance?: string;
                /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
                shares_dst?: string;
                /**
                 * Incrementing id that uniquely identifies this entry
                 * Format: uint64
                 */
                unbonding_id?: string;
                /**
                 * Strictly positive if this entry's unbonding has been stopped by external modules
                 * Format: int64
                 */
                unbonding_on_hold_ref_count?: string;
              }[];
          };
          entries?: {
              /** @description RedelegationEntry defines a redelegation object with relevant metadata. */
              redelegation_entry?: {
                /**
                 * Format: int64
                 * @description creation_height  defines the height which the redelegation took place.
                 */
                creation_height?: string;
                /**
                 * Format: date-time
                 * @description completion_time defines the unix time for redelegation completion.
                 */
                completion_time?: string;
                /** @description initial_balance defines the initial balance when redelegation started. */
                initial_balance?: string;
                /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
                shares_dst?: string;
                /**
                 * Incrementing id that uniquely identifies this entry
                 * Format: uint64
                 */
                unbonding_id?: string;
                /**
                 * Strictly positive if this entry's unbonding has been stopped by external modules
                 * Format: int64
                 */
                unbonding_on_hold_ref_count?: string;
              };
              balance?: string;
            }[];
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description QueryDelegationResponse is response type for the Query/UnbondingDelegation
     * RPC method.
     */
    "cosmos.staking.v1beta1.QueryUnbondingDelegationResponse": {
      /**
       * @description UnbondingDelegation stores all of a single delegator's unbonding bonds
       * for a single validator in an time-ordered list.
       */
      unbond?: {
        /** @description delegator_address is the encoded address of the delegator. */
        delegator_address?: string;
        /** @description validator_address is the encoded address of the validator. */
        validator_address?: string;
        /** @description entries are the unbonding delegation entries. */
        entries?: {
            /**
             * Format: int64
             * @description creation_height is the height which the unbonding took place.
             */
            creation_height?: string;
            /**
             * Format: date-time
             * @description completion_time is the unix time for unbonding completion.
             */
            completion_time?: string;
            /** @description initial_balance defines the tokens initially scheduled to receive at completion. */
            initial_balance?: string;
            /** @description balance defines the tokens to receive at completion. */
            balance?: string;
            /**
             * Incrementing id that uniquely identifies this entry
             * Format: uint64
             */
            unbonding_id?: string;
            /**
             * Strictly positive if this entry's unbonding has been stopped by external modules
             * Format: int64
             */
            unbonding_on_hold_ref_count?: string;
          }[];
      };
    };
    /**
     * QueryValidatorDelegationsResponse is response type for the
     * Query/ValidatorDelegations RPC method
     */
    "cosmos.staking.v1beta1.QueryValidatorDelegationsResponse": {
      delegation_responses?: {
          /**
           * @description Delegation represents the bond with tokens held by an account. It is
           * owned by one delegator, and is associated with the voting power of one
           * validator.
           */
          delegation?: {
            /** @description delegator_address is the encoded address of the delegator. */
            delegator_address?: string;
            /** @description validator_address is the encoded address of the validator. */
            validator_address?: string;
            /** @description shares define the delegation shares received. */
            shares?: string;
          };
          /**
           * @description Coin defines a token with a denomination and an amount.
           *
           * NOTE: The amount field is an Int which implements the custom method
           * signatures required by gogoproto.
           */
          balance?: {
            denom?: string;
            amount?: string;
          };
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** QueryValidatorResponse is response type for the Query/Validator RPC method */
    "cosmos.staking.v1beta1.QueryValidatorResponse": {
      /**
       * @description Validator defines a validator, together with the total amount of the
       * Validator's bond shares and their exchange rate to coins. Slashing results in
       * a decrease in the exchange rate, allowing correct calculation of future
       * undelegations without iterating over delegators. When coins are delegated to
       * this validator, the validator is credited with a delegation whose number of
       * bond shares is based on the amount of coins delegated divided by the current
       * exchange rate. Voting power can be calculated as total bonded shares
       * multiplied by exchange rate.
       */
      validator?: {
        /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
        operator_address?: string;
        /**
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        consensus_pubkey?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
        /** @description jailed defined whether the validator has been jailed from bonded status or not. */
        jailed?: boolean;
        /**
         * @description status is the validator status (bonded/unbonding/unbonded).
         * @default BOND_STATUS_UNSPECIFIED
         * @enum {string}
         */
        status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
        /** @description tokens define the delegated tokens (incl. self-delegation). */
        tokens?: string;
        /** @description delegator_shares defines total shares issued to a validator's delegators. */
        delegator_shares?: string;
        /** @description description defines the description terms for the validator. */
        description?: {
          /** @description moniker defines a human-readable name for the validator. */
          moniker?: string;
          /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
          identity?: string;
          /** @description website defines an optional website link. */
          website?: string;
          /** @description security_contact defines an optional email for security contact. */
          security_contact?: string;
          /** @description details define other optional details. */
          details?: string;
        };
        /**
         * Format: int64
         * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
         */
        unbonding_height?: string;
        /**
         * Format: date-time
         * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
         */
        unbonding_time?: string;
        /** @description commission defines the commission parameters. */
        commission?: {
          /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
          commission_rates?: {
            /** @description rate is the commission rate charged to delegators, as a fraction. */
            rate?: string;
            /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
            max_rate?: string;
            /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
            max_change_rate?: string;
          };
          /**
           * Format: date-time
           * @description update_time is the last time the commission rate was changed.
           */
          update_time?: string;
        };
        /**
         * @description min_self_delegation is the validator's self declared minimum self delegation.
         *
         * Since: cosmos-sdk 0.46
         */
        min_self_delegation?: string;
        /**
         * strictly positive if this validator's unbonding has been stopped by external modules
         * Format: int64
         */
        unbonding_on_hold_ref_count?: string;
        /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
        unbonding_ids?: string[];
      };
    };
    /**
     * @description QueryValidatorUnbondingDelegationsResponse is response type for the
     * Query/ValidatorUnbondingDelegations RPC method.
     */
    "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse": {
      unbonding_responses?: {
          /** @description delegator_address is the encoded address of the delegator. */
          delegator_address?: string;
          /** @description validator_address is the encoded address of the validator. */
          validator_address?: string;
          /** @description entries are the unbonding delegation entries. */
          entries?: {
              /**
               * Format: int64
               * @description creation_height is the height which the unbonding took place.
               */
              creation_height?: string;
              /**
               * Format: date-time
               * @description completion_time is the unix time for unbonding completion.
               */
              completion_time?: string;
              /** @description initial_balance defines the tokens initially scheduled to receive at completion. */
              initial_balance?: string;
              /** @description balance defines the tokens to receive at completion. */
              balance?: string;
              /**
               * Incrementing id that uniquely identifies this entry
               * Format: uint64
               */
              unbonding_id?: string;
              /**
               * Strictly positive if this entry's unbonding has been stopped by external modules
               * Format: int64
               */
              unbonding_on_hold_ref_count?: string;
            }[];
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** QueryValidatorsResponse is response type for the Query/Validators RPC method */
    "cosmos.staking.v1beta1.QueryValidatorsResponse": {
      /** @description validators contains all the queried validators. */
      validators?: ({
          /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
          operator_address?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          consensus_pubkey?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /** @description jailed defined whether the validator has been jailed from bonded status or not. */
          jailed?: boolean;
          /**
           * @description status is the validator status (bonded/unbonding/unbonded).
           * @default BOND_STATUS_UNSPECIFIED
           * @enum {string}
           */
          status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
          /** @description tokens define the delegated tokens (incl. self-delegation). */
          tokens?: string;
          /** @description delegator_shares defines total shares issued to a validator's delegators. */
          delegator_shares?: string;
          /** @description description defines the description terms for the validator. */
          description?: {
            /** @description moniker defines a human-readable name for the validator. */
            moniker?: string;
            /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
            identity?: string;
            /** @description website defines an optional website link. */
            website?: string;
            /** @description security_contact defines an optional email for security contact. */
            security_contact?: string;
            /** @description details define other optional details. */
            details?: string;
          };
          /**
           * Format: int64
           * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
           */
          unbonding_height?: string;
          /**
           * Format: date-time
           * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
           */
          unbonding_time?: string;
          /** @description commission defines the commission parameters. */
          commission?: {
            /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
            commission_rates?: {
              /** @description rate is the commission rate charged to delegators, as a fraction. */
              rate?: string;
              /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
              max_rate?: string;
              /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
              max_change_rate?: string;
            };
            /**
             * Format: date-time
             * @description update_time is the last time the commission rate was changed.
             */
            update_time?: string;
          };
          /**
           * @description min_self_delegation is the validator's self declared minimum self delegation.
           *
           * Since: cosmos-sdk 0.46
           */
          min_self_delegation?: string;
          /**
           * strictly positive if this validator's unbonding has been stopped by external modules
           * Format: int64
           */
          unbonding_on_hold_ref_count?: string;
          /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
          unbonding_ids?: string[];
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description Redelegation contains the list of a particular delegator's redelegating bonds
     * from a particular source validator to a particular destination validator.
     */
    "cosmos.staking.v1beta1.Redelegation": {
      /** @description delegator_address is the bech32-encoded address of the delegator. */
      delegator_address?: string;
      /** @description validator_src_address is the validator redelegation source operator address. */
      validator_src_address?: string;
      /** @description validator_dst_address is the validator redelegation destination operator address. */
      validator_dst_address?: string;
      /** @description entries are the redelegation entries. */
      entries?: {
          /**
           * Format: int64
           * @description creation_height  defines the height which the redelegation took place.
           */
          creation_height?: string;
          /**
           * Format: date-time
           * @description completion_time defines the unix time for redelegation completion.
           */
          completion_time?: string;
          /** @description initial_balance defines the initial balance when redelegation started. */
          initial_balance?: string;
          /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
          shares_dst?: string;
          /**
           * Incrementing id that uniquely identifies this entry
           * Format: uint64
           */
          unbonding_id?: string;
          /**
           * Strictly positive if this entry's unbonding has been stopped by external modules
           * Format: int64
           */
          unbonding_on_hold_ref_count?: string;
        }[];
    };
    /** @description RedelegationEntry defines a redelegation object with relevant metadata. */
    "cosmos.staking.v1beta1.RedelegationEntry": {
      /**
       * Format: int64
       * @description creation_height  defines the height which the redelegation took place.
       */
      creation_height?: string;
      /**
       * Format: date-time
       * @description completion_time defines the unix time for redelegation completion.
       */
      completion_time?: string;
      /** @description initial_balance defines the initial balance when redelegation started. */
      initial_balance?: string;
      /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
      shares_dst?: string;
      /**
       * Incrementing id that uniquely identifies this entry
       * Format: uint64
       */
      unbonding_id?: string;
      /**
       * Strictly positive if this entry's unbonding has been stopped by external modules
       * Format: int64
       */
      unbonding_on_hold_ref_count?: string;
    };
    /**
     * @description RedelegationEntryResponse is equivalent to a RedelegationEntry except that it
     * contains a balance in addition to shares which is more suitable for client
     * responses.
     */
    "cosmos.staking.v1beta1.RedelegationEntryResponse": {
      /** @description RedelegationEntry defines a redelegation object with relevant metadata. */
      redelegation_entry?: {
        /**
         * Format: int64
         * @description creation_height  defines the height which the redelegation took place.
         */
        creation_height?: string;
        /**
         * Format: date-time
         * @description completion_time defines the unix time for redelegation completion.
         */
        completion_time?: string;
        /** @description initial_balance defines the initial balance when redelegation started. */
        initial_balance?: string;
        /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
        shares_dst?: string;
        /**
         * Incrementing id that uniquely identifies this entry
         * Format: uint64
         */
        unbonding_id?: string;
        /**
         * Strictly positive if this entry's unbonding has been stopped by external modules
         * Format: int64
         */
        unbonding_on_hold_ref_count?: string;
      };
      balance?: string;
    };
    /**
     * @description RedelegationResponse is equivalent to a Redelegation except that its entries
     * contain a balance in addition to shares which is more suitable for client
     * responses.
     */
    "cosmos.staking.v1beta1.RedelegationResponse": {
      /**
       * @description Redelegation contains the list of a particular delegator's redelegating bonds
       * from a particular source validator to a particular destination validator.
       */
      redelegation?: {
        /** @description delegator_address is the bech32-encoded address of the delegator. */
        delegator_address?: string;
        /** @description validator_src_address is the validator redelegation source operator address. */
        validator_src_address?: string;
        /** @description validator_dst_address is the validator redelegation destination operator address. */
        validator_dst_address?: string;
        /** @description entries are the redelegation entries. */
        entries?: {
            /**
             * Format: int64
             * @description creation_height  defines the height which the redelegation took place.
             */
            creation_height?: string;
            /**
             * Format: date-time
             * @description completion_time defines the unix time for redelegation completion.
             */
            completion_time?: string;
            /** @description initial_balance defines the initial balance when redelegation started. */
            initial_balance?: string;
            /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
            shares_dst?: string;
            /**
             * Incrementing id that uniquely identifies this entry
             * Format: uint64
             */
            unbonding_id?: string;
            /**
             * Strictly positive if this entry's unbonding has been stopped by external modules
             * Format: int64
             */
            unbonding_on_hold_ref_count?: string;
          }[];
      };
      entries?: {
          /** @description RedelegationEntry defines a redelegation object with relevant metadata. */
          redelegation_entry?: {
            /**
             * Format: int64
             * @description creation_height  defines the height which the redelegation took place.
             */
            creation_height?: string;
            /**
             * Format: date-time
             * @description completion_time defines the unix time for redelegation completion.
             */
            completion_time?: string;
            /** @description initial_balance defines the initial balance when redelegation started. */
            initial_balance?: string;
            /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
            shares_dst?: string;
            /**
             * Incrementing id that uniquely identifies this entry
             * Format: uint64
             */
            unbonding_id?: string;
            /**
             * Strictly positive if this entry's unbonding has been stopped by external modules
             * Format: int64
             */
            unbonding_on_hold_ref_count?: string;
          };
          balance?: string;
        }[];
    };
    /**
     * @description UnbondingDelegation stores all of a single delegator's unbonding bonds
     * for a single validator in an time-ordered list.
     */
    "cosmos.staking.v1beta1.UnbondingDelegation": {
      /** @description delegator_address is the encoded address of the delegator. */
      delegator_address?: string;
      /** @description validator_address is the encoded address of the validator. */
      validator_address?: string;
      /** @description entries are the unbonding delegation entries. */
      entries?: {
          /**
           * Format: int64
           * @description creation_height is the height which the unbonding took place.
           */
          creation_height?: string;
          /**
           * Format: date-time
           * @description completion_time is the unix time for unbonding completion.
           */
          completion_time?: string;
          /** @description initial_balance defines the tokens initially scheduled to receive at completion. */
          initial_balance?: string;
          /** @description balance defines the tokens to receive at completion. */
          balance?: string;
          /**
           * Incrementing id that uniquely identifies this entry
           * Format: uint64
           */
          unbonding_id?: string;
          /**
           * Strictly positive if this entry's unbonding has been stopped by external modules
           * Format: int64
           */
          unbonding_on_hold_ref_count?: string;
        }[];
    };
    /** @description UnbondingDelegationEntry defines an unbonding object with relevant metadata. */
    "cosmos.staking.v1beta1.UnbondingDelegationEntry": {
      /**
       * Format: int64
       * @description creation_height is the height which the unbonding took place.
       */
      creation_height?: string;
      /**
       * Format: date-time
       * @description completion_time is the unix time for unbonding completion.
       */
      completion_time?: string;
      /** @description initial_balance defines the tokens initially scheduled to receive at completion. */
      initial_balance?: string;
      /** @description balance defines the tokens to receive at completion. */
      balance?: string;
      /**
       * Incrementing id that uniquely identifies this entry
       * Format: uint64
       */
      unbonding_id?: string;
      /**
       * Strictly positive if this entry's unbonding has been stopped by external modules
       * Format: int64
       */
      unbonding_on_hold_ref_count?: string;
    };
    /**
     * @description Validator defines a validator, together with the total amount of the
     * Validator's bond shares and their exchange rate to coins. Slashing results in
     * a decrease in the exchange rate, allowing correct calculation of future
     * undelegations without iterating over delegators. When coins are delegated to
     * this validator, the validator is credited with a delegation whose number of
     * bond shares is based on the amount of coins delegated divided by the current
     * exchange rate. Voting power can be calculated as total bonded shares
     * multiplied by exchange rate.
     */
    "cosmos.staking.v1beta1.Validator": {
      /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
      operator_address?: string;
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      consensus_pubkey?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /** @description jailed defined whether the validator has been jailed from bonded status or not. */
      jailed?: boolean;
      /**
       * @description status is the validator status (bonded/unbonding/unbonded).
       * @default BOND_STATUS_UNSPECIFIED
       * @enum {string}
       */
      status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
      /** @description tokens define the delegated tokens (incl. self-delegation). */
      tokens?: string;
      /** @description delegator_shares defines total shares issued to a validator's delegators. */
      delegator_shares?: string;
      /** @description description defines the description terms for the validator. */
      description?: {
        /** @description moniker defines a human-readable name for the validator. */
        moniker?: string;
        /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
        identity?: string;
        /** @description website defines an optional website link. */
        website?: string;
        /** @description security_contact defines an optional email for security contact. */
        security_contact?: string;
        /** @description details define other optional details. */
        details?: string;
      };
      /**
       * Format: int64
       * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
       */
      unbonding_height?: string;
      /**
       * Format: date-time
       * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
       */
      unbonding_time?: string;
      /** @description commission defines the commission parameters. */
      commission?: {
        /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
        commission_rates?: {
          /** @description rate is the commission rate charged to delegators, as a fraction. */
          rate?: string;
          /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
          max_rate?: string;
          /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
          max_change_rate?: string;
        };
        /**
         * Format: date-time
         * @description update_time is the last time the commission rate was changed.
         */
        update_time?: string;
      };
      /**
       * @description min_self_delegation is the validator's self declared minimum self delegation.
       *
       * Since: cosmos-sdk 0.46
       */
      min_self_delegation?: string;
      /**
       * strictly positive if this validator's unbonding has been stopped by external modules
       * Format: int64
       */
      unbonding_on_hold_ref_count?: string;
      /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
      unbonding_ids?: string[];
    };
    /** @description ABCIMessageLog defines a structure containing an indexed tx ABCI message log. */
    "cosmos.base.abci.v1beta1.ABCIMessageLog": {
      /** Format: int64 */
      msg_index?: number;
      log?: string;
      /**
       * @description Events contains a slice of Event objects that were emitted during some
       * execution.
       */
      events?: {
          type?: string;
          attributes?: {
              key?: string;
              value?: string;
            }[];
        }[];
    };
    /**
     * @description Attribute defines an attribute wrapper where the key and value are
     * strings instead of raw bytes.
     */
    "cosmos.base.abci.v1beta1.Attribute": {
      key?: string;
      value?: string;
    };
    /** @description GasInfo defines tx execution gas context. */
    "cosmos.base.abci.v1beta1.GasInfo": {
      /**
       * Format: uint64
       * @description GasWanted is the maximum units of work we allow this tx to perform.
       */
      gas_wanted?: string;
      /**
       * Format: uint64
       * @description GasUsed is the amount of gas actually consumed.
       */
      gas_used?: string;
    };
    /** @description Result is the union of ResponseFormat and ResponseCheckTx. */
    "cosmos.base.abci.v1beta1.Result": {
      /**
       * Format: byte
       * @description Data is any data returned from message or handler execution. It MUST be
       * length prefixed in order to separate data from multiple message executions.
       * Deprecated. This field is still populated, but prefer msg_response instead
       * because it also contains the Msg response typeURL.
       */
      data?: string;
      /** @description Log contains the log information from message or handler execution. */
      log?: string;
      /**
       * @description Events contains a slice of Event objects that were emitted during message
       * or handler execution.
       */
      events?: {
          type?: string;
          attributes?: {
              key?: string;
              value?: string;
              index?: boolean;
            }[];
        }[];
      /**
       * @description msg_responses contains the Msg handler responses type packed in Anys.
       *
       * Since: cosmos-sdk 0.46
       */
      msg_responses?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
    };
    /**
     * @description StringEvent defines en Event object wrapper where all the attributes
     * contain key/value pairs that are strings instead of raw bytes.
     */
    "cosmos.base.abci.v1beta1.StringEvent": {
      type?: string;
      attributes?: {
          key?: string;
          value?: string;
        }[];
    };
    /**
     * @description TxResponse defines a structure containing relevant tx data and metadata. The
     * tags are stringified and the log is JSON decoded.
     */
    "cosmos.base.abci.v1beta1.TxResponse": {
      /**
       * The block height
       * Format: int64
       */
      height?: string;
      /** @description The transaction hash. */
      txhash?: string;
      /** Namespace for the Code */
      codespace?: string;
      /**
       * Format: int64
       * @description Response code.
       */
      code?: number;
      /** @description Result bytes, if any. */
      data?: string;
      /**
       * @description The output of the application's logger (raw string). May be
       * non-deterministic.
       */
      raw_log?: string;
      /** @description The output of the application's logger (typed). May be non-deterministic. */
      logs?: {
          /** Format: int64 */
          msg_index?: number;
          log?: string;
          /**
           * @description Events contains a slice of Event objects that were emitted during some
           * execution.
           */
          events?: {
              type?: string;
              attributes?: {
                  key?: string;
                  value?: string;
                }[];
            }[];
        }[];
      /** @description Additional information. May be non-deterministic. */
      info?: string;
      /**
       * Format: int64
       * @description Amount of gas requested for transaction.
       */
      gas_wanted?: string;
      /**
       * Format: int64
       * @description Amount of gas consumed by transaction.
       */
      gas_used?: string;
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      tx?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /**
       * @description Time of the previous block. For heights > 1, it's the weighted median of
       * the timestamps of the valid votes in the block.LastCommit. For height == 1,
       * it's genesis time.
       */
      timestamp?: string;
      /**
       * @description Events defines all the events emitted by processing a transaction. Note,
       * these events include those emitted by processing all the messages and those
       * emitted from the ante. Whereas Logs contains the events, with
       * additional metadata, emitted only by processing the messages.
       *
       * Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
       */
      events?: {
          type?: string;
          attributes?: {
              key?: string;
              value?: string;
              index?: boolean;
            }[];
        }[];
    };
    /**
     * @description CompactBitArray is an implementation of a space efficient bit array.
     * This is used to ensure that the encoded data takes up a minimal amount of
     * space after proto encoding.
     * This is not thread safe, and is not intended for concurrent usage.
     */
    "cosmos.crypto.multisig.v1beta1.CompactBitArray": {
      /** Format: int64 */
      extra_bits_stored?: number;
      /** Format: byte */
      elems?: string;
    };
    /**
     * @description SignMode represents a signing mode with its own security guarantees.
     *
     * This enum should be considered a registry of all known sign modes
     * in the Cosmos ecosystem. Apps are not expected to support all known
     * sign modes. Apps that would like to support custom  sign modes are
     * encouraged to open a small PR against this file to add a new case
     * to this SignMode enum describing their sign mode so that different
     * apps have a consistent version of this enum.
     *
     *  - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
     * rejected.
     *  - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
     * verified with raw bytes from Tx.
     *  - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
     * human-readable textual representation on top of the binary representation
     * from SIGN_MODE_DIRECT. It is currently experimental, and should be used
     * for testing purposes only, until Textual is fully released. Please follow
     * the tracking issue https://github.com/cosmos/cosmos-sdk/issues/11970.
     *  - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
     * SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
     * require signers signing over other signers' `signer_info`. It also allows
     * for adding Tips in transactions.
     *
     * Since: cosmos-sdk 0.46
     *  - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
     * Amino JSON and will be removed in the future.
     *  - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
     * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191
     *
     * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
     * but is not implemented on the SDK by default. To enable EIP-191, you need
     * to pass a custom `TxConfig` that has an implementation of
     * `SignModeHandler` for EIP-191. The SDK may decide to fully support
     * EIP-191 in the future.
     *
     * Since: cosmos-sdk 0.45.2
     * @default SIGN_MODE_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.tx.signing.v1beta1.SignMode": "SIGN_MODE_UNSPECIFIED" | "SIGN_MODE_DIRECT" | "SIGN_MODE_TEXTUAL" | "SIGN_MODE_DIRECT_AUX" | "SIGN_MODE_LEGACY_AMINO_JSON" | "SIGN_MODE_EIP_191";
    /**
     * @description AuthInfo describes the fee and signer modes that are used to sign a
     * transaction.
     */
    "cosmos.tx.v1beta1.AuthInfo": {
      /**
       * @description signer_infos defines the signing modes for the required signers. The number
       * and order of elements must match the required signers from TxBody's
       * messages. The first element is the primary signer and the one which pays
       * the fee.
       */
      signer_infos?: components["schemas"]["cosmos.tx.v1beta1.SignerInfo"][];
      /**
       * @description Fee is the fee and gas limit for the transaction. The first signer is the
       * primary signer and the one which pays the fee. The fee can be calculated
       * based on the cost of evaluating the body and doing signature verification
       * of the signers. This can be estimated via simulation.
       */
      fee?: {
        /** amount is the amount of coins to be paid as a fee */
        amount?: {
            denom?: string;
            amount?: string;
          }[];
        /**
         * gas_limit is the maximum gas that can be used in transaction processing
         * before an out of gas error occurs
         * Format: uint64
         */
        gas_limit?: string;
        /**
         * @description if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
         * the payer must be a tx signer (and thus have signed this field in AuthInfo).
         * setting this field does *not* change the ordering of required signers for the transaction.
         */
        payer?: string;
        /**
         * if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
         * to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
         * not support fee grants, this will fail
         */
        granter?: string;
      };
      /**
       * @description Tip is the optional tip used for transactions fees paid in another denom.
       *
       * This field is ignored if the chain didn't enable tips, i.e. didn't add the
       * `TipDecorator` in its posthandler.
       *
       * Since: cosmos-sdk 0.46
       */
      tip?: {
        /** amount is the amount of the tip */
        amount?: {
            denom?: string;
            amount?: string;
          }[];
        /** tipper is the address of the account paying for the tip */
        tipper?: string;
      };
    };
    /**
     * @description BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
     * method.
     *
     *  - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
     *  - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
     * BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
     *  - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
     * for a CheckTx execution response only.
     *  - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
     * returns immediately.
     * @default BROADCAST_MODE_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.tx.v1beta1.BroadcastMode": "BROADCAST_MODE_UNSPECIFIED" | "BROADCAST_MODE_BLOCK" | "BROADCAST_MODE_SYNC" | "BROADCAST_MODE_ASYNC";
    /**
     * @description BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
     * RPC method.
     */
    "cosmos.tx.v1beta1.BroadcastTxRequest": {
      /**
       * Format: byte
       * @description tx_bytes is the raw transaction.
       */
      tx_bytes?: string;
      /**
       * @description BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
       * method.
       *
       *  - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
       *  - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
       * BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
       *  - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
       * for a CheckTx execution response only.
       *  - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
       * returns immediately.
       * @default BROADCAST_MODE_UNSPECIFIED
       * @enum {string}
       */
      mode?: "BROADCAST_MODE_UNSPECIFIED" | "BROADCAST_MODE_BLOCK" | "BROADCAST_MODE_SYNC" | "BROADCAST_MODE_ASYNC";
    };
    /**
     * @description BroadcastTxResponse is the response type for the
     * Service.BroadcastTx method.
     */
    "cosmos.tx.v1beta1.BroadcastTxResponse": {
      /**
       * @description TxResponse defines a structure containing relevant tx data and metadata. The
       * tags are stringified and the log is JSON decoded.
       */
      tx_response?: {
        /**
         * The block height
         * Format: int64
         */
        height?: string;
        /** @description The transaction hash. */
        txhash?: string;
        /** Namespace for the Code */
        codespace?: string;
        /**
         * Format: int64
         * @description Response code.
         */
        code?: number;
        /** @description Result bytes, if any. */
        data?: string;
        /**
         * @description The output of the application's logger (raw string). May be
         * non-deterministic.
         */
        raw_log?: string;
        /** @description The output of the application's logger (typed). May be non-deterministic. */
        logs?: {
            /** Format: int64 */
            msg_index?: number;
            log?: string;
            /**
             * @description Events contains a slice of Event objects that were emitted during some
             * execution.
             */
            events?: {
                type?: string;
                attributes?: {
                    key?: string;
                    value?: string;
                  }[];
              }[];
          }[];
        /** @description Additional information. May be non-deterministic. */
        info?: string;
        /**
         * Format: int64
         * @description Amount of gas requested for transaction.
         */
        gas_wanted?: string;
        /**
         * Format: int64
         * @description Amount of gas consumed by transaction.
         */
        gas_used?: string;
        /**
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        tx?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
        /**
         * @description Time of the previous block. For heights > 1, it's the weighted median of
         * the timestamps of the valid votes in the block.LastCommit. For height == 1,
         * it's genesis time.
         */
        timestamp?: string;
        /**
         * @description Events defines all the events emitted by processing a transaction. Note,
         * these events include those emitted by processing all the messages and those
         * emitted from the ante. Whereas Logs contains the events, with
         * additional metadata, emitted only by processing the messages.
         *
         * Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
         */
        events?: {
            type?: string;
            attributes?: {
                key?: string;
                value?: string;
                index?: boolean;
              }[];
          }[];
      };
    };
    /**
     * @description Fee includes the amount of coins paid in fees and the maximum
     * gas to be used by the transaction. The ratio yields an effective "gasprice",
     * which must be above some miminum to be accepted into the mempool.
     */
    "cosmos.tx.v1beta1.Fee": {
      /** amount is the amount of coins to be paid as a fee */
      amount?: {
          denom?: string;
          amount?: string;
        }[];
      /**
       * gas_limit is the maximum gas that can be used in transaction processing
       * before an out of gas error occurs
       * Format: uint64
       */
      gas_limit?: string;
      /**
       * @description if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.
       * the payer must be a tx signer (and thus have signed this field in AuthInfo).
       * setting this field does *not* change the ordering of required signers for the transaction.
       */
      payer?: string;
      /**
       * if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used
       * to pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does
       * not support fee grants, this will fail
       */
      granter?: string;
    };
    /**
     * @description GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs
     * method.
     *
     * Since: cosmos-sdk 0.45.2
     */
    "cosmos.tx.v1beta1.GetBlockWithTxsResponse": {
      /** @description txs are the transactions in the block. */
      txs?: components["schemas"]["cosmos.tx.v1beta1.Tx"][];
      /** BlockID */
      block_id?: {
        /** Format: byte */
        hash?: string;
        /** PartsetHeader */
        part_set_header?: {
          /** Format: int64 */
          total?: number;
          /** Format: byte */
          hash?: string;
        };
      };
      block?: {
        /** @description Header defines the structure of a block header. */
        header?: {
          /**
           * basic block info
           * @description Consensus captures the consensus rules for processing a block in the blockchain,
           * including all blockchain data structures and the rules of the application's
           * state transition machine.
           */
          version?: {
            /** Format: uint64 */
            block?: string;
            /** Format: uint64 */
            app?: string;
          };
          chain_id?: string;
          /** Format: int64 */
          height?: string;
          /** Format: date-time */
          time?: string;
          /** BlockID */
          last_block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          /**
           * hashes of block data
           * Format: byte
           */
          last_commit_hash?: string;
          /** Format: byte */
          data_hash?: string;
          /**
           * hashes from the app output from the prev block
           * Format: byte
           */
          validators_hash?: string;
          /** Format: byte */
          next_validators_hash?: string;
          /** Format: byte */
          consensus_hash?: string;
          /** Format: byte */
          app_hash?: string;
          /** Format: byte */
          last_results_hash?: string;
          /**
           * consensus info
           * Format: byte
           */
          evidence_hash?: string;
          /** Format: byte */
          proposer_address?: string;
        };
        /** Data contains the set of transactions included in the block */
        data?: {
          /**
           * @description Txs that will be applied by state @ block.Height+1.
           * NOTE: not all txs here are valid.  We're just agreeing on the order first.
           * This means that block.AppHash does not include these txs.
           */
          txs?: string[];
        };
        evidence?: {
          evidence?: ({
              /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
              duplicate_vote_evidence?: {
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_a?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /**
                 * @description Vote represents a prevote or precommit vote from validators for
                 * consensus.
                 */
                vote_b?: {
                  /**
                   * @description SignedMsgType is a type of signed message in the consensus.
                   *
                   *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                   *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                   * @default SIGNED_MSG_TYPE_UNKNOWN
                   * @enum {string}
                   */
                  type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                  /** Format: int64 */
                  height?: string;
                  /** Format: int32 */
                  round?: number;
                  /** BlockID */
                  block_id?: {
                    /** Format: byte */
                    hash?: string;
                    /** PartsetHeader */
                    part_set_header?: {
                      /** Format: int64 */
                      total?: number;
                      /** Format: byte */
                      hash?: string;
                    };
                  };
                  /** Format: date-time */
                  timestamp?: string;
                  /** Format: byte */
                  validator_address?: string;
                  /** Format: int32 */
                  validator_index?: number;
                  /**
                   * Format: byte
                   * @description Vote signature by the validator if they participated in consensus for the
                   * associated block.
                   */
                  signature?: string;
                  /**
                   * Format: byte
                   * @description Vote extension provided by the application. Only valid for precommit
                   * messages.
                   */
                  extension?: string;
                  /**
                   * Format: byte
                   * @description Vote extension signature by the validator if they participated in
                   * consensus for the associated block.
                   * Only valid for precommit messages.
                   */
                  extension_signature?: string;
                };
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: int64 */
                validator_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
              /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
              light_client_attack_evidence?: {
                conflicting_block?: {
                  signed_header?: {
                    /** @description Header defines the structure of a block header. */
                    header?: {
                      /**
                       * basic block info
                       * @description Consensus captures the consensus rules for processing a block in the blockchain,
                       * including all blockchain data structures and the rules of the application's
                       * state transition machine.
                       */
                      version?: {
                        /** Format: uint64 */
                        block?: string;
                        /** Format: uint64 */
                        app?: string;
                      };
                      chain_id?: string;
                      /** Format: int64 */
                      height?: string;
                      /** Format: date-time */
                      time?: string;
                      /** BlockID */
                      last_block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      /**
                       * hashes of block data
                       * Format: byte
                       */
                      last_commit_hash?: string;
                      /** Format: byte */
                      data_hash?: string;
                      /**
                       * hashes from the app output from the prev block
                       * Format: byte
                       */
                      validators_hash?: string;
                      /** Format: byte */
                      next_validators_hash?: string;
                      /** Format: byte */
                      consensus_hash?: string;
                      /** Format: byte */
                      app_hash?: string;
                      /** Format: byte */
                      last_results_hash?: string;
                      /**
                       * consensus info
                       * Format: byte
                       */
                      evidence_hash?: string;
                      /** Format: byte */
                      proposer_address?: string;
                    };
                    /** @description Commit contains the evidence that a block was committed by a set of validators. */
                    commit?: {
                      /** Format: int64 */
                      height?: string;
                      /** Format: int32 */
                      round?: number;
                      /** BlockID */
                      block_id?: {
                        /** Format: byte */
                        hash?: string;
                        /** PartsetHeader */
                        part_set_header?: {
                          /** Format: int64 */
                          total?: number;
                          /** Format: byte */
                          hash?: string;
                        };
                      };
                      signatures?: ({
                          /**
                           * BlockIdFlag indicates which BlockID the signature is for
                           * @default BLOCK_ID_FLAG_UNKNOWN
                           * @enum {string}
                           */
                          block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                          /** Format: byte */
                          validator_address?: string;
                          /** Format: date-time */
                          timestamp?: string;
                          /** Format: byte */
                          signature?: string;
                        })[];
                    };
                  };
                  validator_set?: {
                    validators?: {
                        /** Format: byte */
                        address?: string;
                        /** PublicKey defines the keys available for use with Validators */
                        pub_key?: {
                          /** Format: byte */
                          ed25519?: string;
                          /** Format: byte */
                          secp256k1?: string;
                        };
                        /** Format: int64 */
                        voting_power?: string;
                        /** Format: int64 */
                        proposer_priority?: string;
                      }[];
                    proposer?: {
                      /** Format: byte */
                      address?: string;
                      /** PublicKey defines the keys available for use with Validators */
                      pub_key?: {
                        /** Format: byte */
                        ed25519?: string;
                        /** Format: byte */
                        secp256k1?: string;
                      };
                      /** Format: int64 */
                      voting_power?: string;
                      /** Format: int64 */
                      proposer_priority?: string;
                    };
                    /** Format: int64 */
                    total_voting_power?: string;
                  };
                };
                /** Format: int64 */
                common_height?: string;
                byzantine_validators?: {
                    /** Format: byte */
                    address?: string;
                    /** PublicKey defines the keys available for use with Validators */
                    pub_key?: {
                      /** Format: byte */
                      ed25519?: string;
                      /** Format: byte */
                      secp256k1?: string;
                    };
                    /** Format: int64 */
                    voting_power?: string;
                    /** Format: int64 */
                    proposer_priority?: string;
                  }[];
                /** Format: int64 */
                total_voting_power?: string;
                /** Format: date-time */
                timestamp?: string;
              };
            })[];
        };
        /** @description Commit contains the evidence that a block was committed by a set of validators. */
        last_commit?: {
          /** Format: int64 */
          height?: string;
          /** Format: int32 */
          round?: number;
          /** BlockID */
          block_id?: {
            /** Format: byte */
            hash?: string;
            /** PartsetHeader */
            part_set_header?: {
              /** Format: int64 */
              total?: number;
              /** Format: byte */
              hash?: string;
            };
          };
          signatures?: ({
              /**
               * BlockIdFlag indicates which BlockID the signature is for
               * @default BLOCK_ID_FLAG_UNKNOWN
               * @enum {string}
               */
              block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
              /** Format: byte */
              validator_address?: string;
              /** Format: date-time */
              timestamp?: string;
              /** Format: byte */
              signature?: string;
            })[];
        };
      };
      /** @description pagination defines a pagination for the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description GetTxResponse is the response type for the Service.GetTx method. */
    "cosmos.tx.v1beta1.GetTxResponse": {
      tx?: components["schemas"]["cosmos.tx.v1beta1.Tx"];
      /**
       * @description TxResponse defines a structure containing relevant tx data and metadata. The
       * tags are stringified and the log is JSON decoded.
       */
      tx_response?: {
        /**
         * The block height
         * Format: int64
         */
        height?: string;
        /** @description The transaction hash. */
        txhash?: string;
        /** Namespace for the Code */
        codespace?: string;
        /**
         * Format: int64
         * @description Response code.
         */
        code?: number;
        /** @description Result bytes, if any. */
        data?: string;
        /**
         * @description The output of the application's logger (raw string). May be
         * non-deterministic.
         */
        raw_log?: string;
        /** @description The output of the application's logger (typed). May be non-deterministic. */
        logs?: {
            /** Format: int64 */
            msg_index?: number;
            log?: string;
            /**
             * @description Events contains a slice of Event objects that were emitted during some
             * execution.
             */
            events?: {
                type?: string;
                attributes?: {
                    key?: string;
                    value?: string;
                  }[];
              }[];
          }[];
        /** @description Additional information. May be non-deterministic. */
        info?: string;
        /**
         * Format: int64
         * @description Amount of gas requested for transaction.
         */
        gas_wanted?: string;
        /**
         * Format: int64
         * @description Amount of gas consumed by transaction.
         */
        gas_used?: string;
        /**
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        tx?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
        /**
         * @description Time of the previous block. For heights > 1, it's the weighted median of
         * the timestamps of the valid votes in the block.LastCommit. For height == 1,
         * it's genesis time.
         */
        timestamp?: string;
        /**
         * @description Events defines all the events emitted by processing a transaction. Note,
         * these events include those emitted by processing all the messages and those
         * emitted from the ante. Whereas Logs contains the events, with
         * additional metadata, emitted only by processing the messages.
         *
         * Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
         */
        events?: {
            type?: string;
            attributes?: {
                key?: string;
                value?: string;
                index?: boolean;
              }[];
          }[];
      };
    };
    /**
     * @description GetTxsEventResponse is the response type for the Service.TxsByEvents
     * RPC method.
     */
    "cosmos.tx.v1beta1.GetTxsEventResponse": {
      /** @description txs is the list of queried transactions. */
      txs?: components["schemas"]["cosmos.tx.v1beta1.Tx"][];
      /** @description tx_responses is the list of queried TxResponses. */
      tx_responses?: ({
          /**
           * The block height
           * Format: int64
           */
          height?: string;
          /** @description The transaction hash. */
          txhash?: string;
          /** Namespace for the Code */
          codespace?: string;
          /**
           * Format: int64
           * @description Response code.
           */
          code?: number;
          /** @description Result bytes, if any. */
          data?: string;
          /**
           * @description The output of the application's logger (raw string). May be
           * non-deterministic.
           */
          raw_log?: string;
          /** @description The output of the application's logger (typed). May be non-deterministic. */
          logs?: {
              /** Format: int64 */
              msg_index?: number;
              log?: string;
              /**
               * @description Events contains a slice of Event objects that were emitted during some
               * execution.
               */
              events?: {
                  type?: string;
                  attributes?: {
                      key?: string;
                      value?: string;
                    }[];
                }[];
            }[];
          /** @description Additional information. May be non-deterministic. */
          info?: string;
          /**
           * Format: int64
           * @description Amount of gas requested for transaction.
           */
          gas_wanted?: string;
          /**
           * Format: int64
           * @description Amount of gas consumed by transaction.
           */
          gas_used?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          tx?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /**
           * @description Time of the previous block. For heights > 1, it's the weighted median of
           * the timestamps of the valid votes in the block.LastCommit. For height == 1,
           * it's genesis time.
           */
          timestamp?: string;
          /**
           * @description Events defines all the events emitted by processing a transaction. Note,
           * these events include those emitted by processing all the messages and those
           * emitted from the ante. Whereas Logs contains the events, with
           * additional metadata, emitted only by processing the messages.
           *
           * Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
           */
          events?: {
              type?: string;
              attributes?: {
                  key?: string;
                  value?: string;
                  index?: boolean;
                }[];
            }[];
        })[];
      /**
       * @description pagination defines a pagination for the response.
       * Deprecated post v0.46.x: use total instead.
       */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
      /**
       * total is total number of results available
       * Format: uint64
       */
      total?: string;
    };
    /** @description ModeInfo describes the signing mode of a single or nested multisig signer. */
    "cosmos.tx.v1beta1.ModeInfo": {
      /** single represents a single signer */
      single?: {
        /**
         * mode is the signing mode of the single signer
         * @description SignMode represents a signing mode with its own security guarantees.
         *
         * This enum should be considered a registry of all known sign modes
         * in the Cosmos ecosystem. Apps are not expected to support all known
         * sign modes. Apps that would like to support custom  sign modes are
         * encouraged to open a small PR against this file to add a new case
         * to this SignMode enum describing their sign mode so that different
         * apps have a consistent version of this enum.
         *
         *  - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
         * rejected.
         *  - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
         * verified with raw bytes from Tx.
         *  - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
         * human-readable textual representation on top of the binary representation
         * from SIGN_MODE_DIRECT. It is currently experimental, and should be used
         * for testing purposes only, until Textual is fully released. Please follow
         * the tracking issue https://github.com/cosmos/cosmos-sdk/issues/11970.
         *  - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
         * SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
         * require signers signing over other signers' `signer_info`. It also allows
         * for adding Tips in transactions.
         *
         * Since: cosmos-sdk 0.46
         *  - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
         * Amino JSON and will be removed in the future.
         *  - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
         * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191
         *
         * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
         * but is not implemented on the SDK by default. To enable EIP-191, you need
         * to pass a custom `TxConfig` that has an implementation of
         * `SignModeHandler` for EIP-191. The SDK may decide to fully support
         * EIP-191 in the future.
         *
         * Since: cosmos-sdk 0.45.2
         * @default SIGN_MODE_UNSPECIFIED
         * @enum {string}
         */
        mode?: "SIGN_MODE_UNSPECIFIED" | "SIGN_MODE_DIRECT" | "SIGN_MODE_TEXTUAL" | "SIGN_MODE_DIRECT_AUX" | "SIGN_MODE_LEGACY_AMINO_JSON" | "SIGN_MODE_EIP_191";
      };
      multi?: components["schemas"]["cosmos.tx.v1beta1.ModeInfo.Multi"];
    };
    /** Multi is the mode info for a multisig public key */
    "cosmos.tx.v1beta1.ModeInfo.Multi": {
      /**
       * bitarray specifies which keys within the multisig are signing
       * @description CompactBitArray is an implementation of a space efficient bit array.
       * This is used to ensure that the encoded data takes up a minimal amount of
       * space after proto encoding.
       * This is not thread safe, and is not intended for concurrent usage.
       */
      bitarray?: {
        /** Format: int64 */
        extra_bits_stored?: number;
        /** Format: byte */
        elems?: string;
      };
      /**
       * mode_infos is the corresponding modes of the signers of the multisig
       * which could include nested multisig public keys
       */
      mode_infos?: components["schemas"]["cosmos.tx.v1beta1.ModeInfo"][];
    };
    /**
     * Single is the mode info for a single signer. It is structured as a message
     * to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
     * future
     */
    "cosmos.tx.v1beta1.ModeInfo.Single": {
      /**
       * mode is the signing mode of the single signer
       * @description SignMode represents a signing mode with its own security guarantees.
       *
       * This enum should be considered a registry of all known sign modes
       * in the Cosmos ecosystem. Apps are not expected to support all known
       * sign modes. Apps that would like to support custom  sign modes are
       * encouraged to open a small PR against this file to add a new case
       * to this SignMode enum describing their sign mode so that different
       * apps have a consistent version of this enum.
       *
       *  - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
       * rejected.
       *  - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
       * verified with raw bytes from Tx.
       *  - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
       * human-readable textual representation on top of the binary representation
       * from SIGN_MODE_DIRECT. It is currently experimental, and should be used
       * for testing purposes only, until Textual is fully released. Please follow
       * the tracking issue https://github.com/cosmos/cosmos-sdk/issues/11970.
       *  - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
       * SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
       * require signers signing over other signers' `signer_info`. It also allows
       * for adding Tips in transactions.
       *
       * Since: cosmos-sdk 0.46
       *  - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
       * Amino JSON and will be removed in the future.
       *  - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
       * SDK. Ref: https://eips.ethereum.org/EIPS/eip-191
       *
       * Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
       * but is not implemented on the SDK by default. To enable EIP-191, you need
       * to pass a custom `TxConfig` that has an implementation of
       * `SignModeHandler` for EIP-191. The SDK may decide to fully support
       * EIP-191 in the future.
       *
       * Since: cosmos-sdk 0.45.2
       * @default SIGN_MODE_UNSPECIFIED
       * @enum {string}
       */
      mode?: "SIGN_MODE_UNSPECIFIED" | "SIGN_MODE_DIRECT" | "SIGN_MODE_TEXTUAL" | "SIGN_MODE_DIRECT_AUX" | "SIGN_MODE_LEGACY_AMINO_JSON" | "SIGN_MODE_EIP_191";
    };
    /**
     * OrderBy defines the sorting order
     * @description - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
     * to ASC in this case.
     *  - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
     *  - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
     * @default ORDER_BY_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.tx.v1beta1.OrderBy": "ORDER_BY_UNSPECIFIED" | "ORDER_BY_ASC" | "ORDER_BY_DESC";
    /**
     * @description SignerInfo describes the public key and signing mode of a single top-level
     * signer.
     */
    "cosmos.tx.v1beta1.SignerInfo": {
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      public_key?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      mode_info?: components["schemas"]["cosmos.tx.v1beta1.ModeInfo"];
      /**
       * Format: uint64
       * @description sequence is the sequence of the account, which describes the
       * number of committed transactions signed by a given address. It is used to
       * prevent replay attacks.
       */
      sequence?: string;
    };
    /**
     * @description SimulateRequest is the request type for the Service.Simulate
     * RPC method.
     */
    "cosmos.tx.v1beta1.SimulateRequest": {
      tx?: components["schemas"]["cosmos.tx.v1beta1.Tx"];
      /**
       * Format: byte
       * @description tx_bytes is the raw transaction.
       *
       * Since: cosmos-sdk 0.43
       */
      tx_bytes?: string;
    };
    /**
     * @description SimulateResponse is the response type for the
     * Service.SimulateRPC method.
     */
    "cosmos.tx.v1beta1.SimulateResponse": {
      /** @description gas_info is the information about gas used in the simulation. */
      gas_info?: {
        /**
         * Format: uint64
         * @description GasWanted is the maximum units of work we allow this tx to perform.
         */
        gas_wanted?: string;
        /**
         * Format: uint64
         * @description GasUsed is the amount of gas actually consumed.
         */
        gas_used?: string;
      };
      /** @description result is the result of the simulation. */
      result?: {
        /**
         * Format: byte
         * @description Data is any data returned from message or handler execution. It MUST be
         * length prefixed in order to separate data from multiple message executions.
         * Deprecated. This field is still populated, but prefer msg_response instead
         * because it also contains the Msg response typeURL.
         */
        data?: string;
        /** @description Log contains the log information from message or handler execution. */
        log?: string;
        /**
         * @description Events contains a slice of Event objects that were emitted during message
         * or handler execution.
         */
        events?: {
            type?: string;
            attributes?: {
                key?: string;
                value?: string;
                index?: boolean;
              }[];
          }[];
        /**
         * @description msg_responses contains the Msg handler responses type packed in Anys.
         *
         * Since: cosmos-sdk 0.46
         */
        msg_responses?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          }[];
      };
    };
    /**
     * @description Tip is the tip used for meta-transactions.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.tx.v1beta1.Tip": {
      /** amount is the amount of the tip */
      amount?: {
          denom?: string;
          amount?: string;
        }[];
      /** tipper is the address of the account paying for the tip */
      tipper?: string;
    };
    /** @description Tx is the standard type used for broadcasting transactions. */
    "cosmos.tx.v1beta1.Tx": {
      /**
       * body is the processable content of the transaction
       * @description TxBody is the body of a transaction that all signers sign over.
       */
      body?: {
        /**
         * @description messages is a list of messages to be executed. The required signers of
         * those messages define the number and order of elements in AuthInfo's
         * signer_infos and Tx's signatures. Each required signer address is added to
         * the list only the first time it occurs.
         * By convention, the first required signer (usually from the first message)
         * is referred to as the primary signer and pays the fee for the whole
         * transaction.
         */
        messages?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          }[];
        /**
         * @description memo is any arbitrary note/comment to be added to the transaction.
         * WARNING: in clients, any publicly exposed text should not be called memo,
         * but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
         */
        memo?: string;
        /**
         * timeout is the block height after which this transaction will not
         * be processed by the chain
         * Format: uint64
         */
        timeout_height?: string;
        /**
         * extension_options are arbitrary options that can be added by chains
         * when the default options are not sufficient. If any of these are present
         * and can't be handled, the transaction will be rejected
         */
        extension_options?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          }[];
        /**
         * extension_options are arbitrary options that can be added by chains
         * when the default options are not sufficient. If any of these are present
         * and can't be handled, they will be ignored
         */
        non_critical_extension_options?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          }[];
      };
      auth_info?: components["schemas"]["cosmos.tx.v1beta1.AuthInfo"];
      /**
       * @description signatures is a list of signatures that matches the length and order of
       * AuthInfo's signer_infos to allow connecting signature meta information like
       * public key and signing mode by position.
       */
      signatures?: string[];
    };
    /** @description TxBody is the body of a transaction that all signers sign over. */
    "cosmos.tx.v1beta1.TxBody": {
      /**
       * @description messages is a list of messages to be executed. The required signers of
       * those messages define the number and order of elements in AuthInfo's
       * signer_infos and Tx's signatures. Each required signer address is added to
       * the list only the first time it occurs.
       * By convention, the first required signer (usually from the first message)
       * is referred to as the primary signer and pays the fee for the whole
       * transaction.
       */
      messages?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
      /**
       * @description memo is any arbitrary note/comment to be added to the transaction.
       * WARNING: in clients, any publicly exposed text should not be called memo,
       * but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
       */
      memo?: string;
      /**
       * timeout is the block height after which this transaction will not
       * be processed by the chain
       * Format: uint64
       */
      timeout_height?: string;
      /**
       * extension_options are arbitrary options that can be added by chains
       * when the default options are not sufficient. If any of these are present
       * and can't be handled, the transaction will be rejected
       */
      extension_options?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
      /**
       * extension_options are arbitrary options that can be added by chains
       * when the default options are not sufficient. If any of these are present
       * and can't be handled, they will be ignored
       */
      non_critical_extension_options?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
    };
    /**
     * @description TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
     * RPC method.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.tx.v1beta1.TxDecodeAminoRequest": {
      /** Format: byte */
      amino_binary?: string;
    };
    /**
     * @description TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
     * RPC method.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.tx.v1beta1.TxDecodeAminoResponse": {
      amino_json?: string;
    };
    /**
     * @description TxDecodeRequest is the request type for the Service.TxDecode
     * RPC method.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.tx.v1beta1.TxDecodeRequest": {
      /**
       * Format: byte
       * @description tx_bytes is the raw transaction.
       */
      tx_bytes?: string;
    };
    /**
     * @description TxDecodeResponse is the response type for the
     * Service.TxDecode method.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.tx.v1beta1.TxDecodeResponse": {
      tx?: components["schemas"]["cosmos.tx.v1beta1.Tx"];
    };
    /**
     * @description TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
     * RPC method.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.tx.v1beta1.TxEncodeAminoRequest": {
      amino_json?: string;
    };
    /**
     * @description TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
     * RPC method.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.tx.v1beta1.TxEncodeAminoResponse": {
      /** Format: byte */
      amino_binary?: string;
    };
    /**
     * @description TxEncodeRequest is the request type for the Service.TxEncode
     * RPC method.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.tx.v1beta1.TxEncodeRequest": {
      tx?: components["schemas"]["cosmos.tx.v1beta1.Tx"];
    };
    /**
     * @description TxEncodeResponse is the response type for the
     * Service.TxEncode method.
     *
     * Since: cosmos-sdk 0.47
     */
    "cosmos.tx.v1beta1.TxEncodeResponse": {
      /**
       * Format: byte
       * @description tx_bytes is the encoded transaction bytes.
       */
      tx_bytes?: string;
    };
    /**
     * @description Event allows application developers to attach additional information to
     * ResponseFinalizeBlock and ResponseCheckTx.
     * Later, transactions may be queried using these events.
     */
    "tendermint.abci.Event": {
      type?: string;
      attributes?: {
          key?: string;
          value?: string;
          index?: boolean;
        }[];
    };
    /** @description EventAttribute is a single key-value pair, associated with an event. */
    "tendermint.abci.EventAttribute": {
      key?: string;
      value?: string;
      index?: boolean;
    };
    /**
     * @description ModuleVersion specifies a module and its consensus version.
     *
     * Since: cosmos-sdk 0.43
     */
    "cosmos.upgrade.v1beta1.ModuleVersion": {
      /** name of the app module */
      name?: string;
      /**
       * consensus version of the app module
       * Format: uint64
       */
      version?: string;
    };
    /** @description Plan specifies information about a planned upgrade and when it should occur. */
    "cosmos.upgrade.v1beta1.Plan": {
      /**
       * @description Sets the name for the upgrade. This name will be used by the upgraded
       * version of the software to apply any special "on-upgrade" commands during
       * the first BeginBlock method after the upgrade is applied. It is also used
       * to detect whether a software version can handle a given upgrade. If no
       * upgrade handler with this name has been set in the software, it will be
       * assumed that the software is out-of-date when the upgrade Time or Height is
       * reached and the software will exit.
       */
      name?: string;
      /**
       * Format: date-time
       * @description Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
       * has been removed from the SDK.
       * If this field is not empty, an error will be thrown.
       */
      time?: string;
      /**
       * Format: int64
       * @description The height at which the upgrade must be performed.
       */
      height?: string;
      /**
       * Any application specific upgrade info to be included on-chain
       * such as a git commit that validators could automatically upgrade to
       */
      info?: string;
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      upgraded_client_state?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
    };
    /**
     * @description QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
     * method.
     */
    "cosmos.upgrade.v1beta1.QueryAppliedPlanResponse": {
      /**
       * Format: int64
       * @description height is the block height at which the plan was applied.
       */
      height?: string;
    };
    /**
     * QueryAuthorityResponse is the response type for Query/Authority
     * @description Since: cosmos-sdk 0.46
     */
    "cosmos.upgrade.v1beta1.QueryAuthorityResponse": {
      address?: string;
    };
    /**
     * @description QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
     * method.
     */
    "cosmos.upgrade.v1beta1.QueryCurrentPlanResponse": {
      /** @description plan is the current upgrade plan. */
      plan?: {
        /**
         * @description Sets the name for the upgrade. This name will be used by the upgraded
         * version of the software to apply any special "on-upgrade" commands during
         * the first BeginBlock method after the upgrade is applied. It is also used
         * to detect whether a software version can handle a given upgrade. If no
         * upgrade handler with this name has been set in the software, it will be
         * assumed that the software is out-of-date when the upgrade Time or Height is
         * reached and the software will exit.
         */
        name?: string;
        /**
         * Format: date-time
         * @description Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
         * has been removed from the SDK.
         * If this field is not empty, an error will be thrown.
         */
        time?: string;
        /**
         * Format: int64
         * @description The height at which the upgrade must be performed.
         */
        height?: string;
        /**
         * Any application specific upgrade info to be included on-chain
         * such as a git commit that validators could automatically upgrade to
         */
        info?: string;
        /**
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        upgraded_client_state?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
      };
    };
    /**
     * @description QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
     * RPC method.
     *
     * Since: cosmos-sdk 0.43
     */
    "cosmos.upgrade.v1beta1.QueryModuleVersionsResponse": {
      /** @description module_versions is a list of module names with their consensus versions. */
      module_versions?: {
          /** name of the app module */
          name?: string;
          /**
           * consensus version of the app module
           * Format: uint64
           */
          version?: string;
        }[];
    };
    /**
     * @description QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
     * RPC method.
     */
    "cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse": {
      /**
       * Since: cosmos-sdk 0.43
       * Format: byte
       */
      upgraded_consensus_state?: string;
    };
    /**
     * @description Grant gives permissions to execute
     * the provide method with expiration time.
     */
    "cosmos.authz.v1beta1.Grant": {
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      authorization?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /**
       * time when the grant will expire and will be pruned. If null, then the grant
       * doesn't have a time expiration (other conditions  in `authorization`
       * may apply to invalidate the grant)
       * Format: date-time
       */
      expiration?: string;
    };
    /**
     * GrantAuthorization extends a grant with both the addresses of the grantee and granter.
     * It is used in genesis.proto and query.proto
     */
    "cosmos.authz.v1beta1.GrantAuthorization": {
      granter?: string;
      grantee?: string;
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      authorization?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /** Format: date-time */
      expiration?: string;
    };
    /** @description QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method. */
    "cosmos.authz.v1beta1.QueryGranteeGrantsResponse": {
      /** @description grants is a list of grants granted to the grantee. */
      grants?: ({
          granter?: string;
          grantee?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          authorization?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /** Format: date-time */
          expiration?: string;
        })[];
      /** @description pagination defines an pagination for the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method. */
    "cosmos.authz.v1beta1.QueryGranterGrantsResponse": {
      /** @description grants is a list of grants granted by the granter. */
      grants?: ({
          granter?: string;
          grantee?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          authorization?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /** Format: date-time */
          expiration?: string;
        })[];
      /** @description pagination defines an pagination for the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryGrantsResponse is the response type for the Query/Authorizations RPC method. */
    "cosmos.authz.v1beta1.QueryGrantsResponse": {
      /** @description authorizations is a list of grants granted for grantee by granter. */
      grants?: ({
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          authorization?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /**
           * time when the grant will expire and will be pruned. If null, then the grant
           * doesn't have a time expiration (other conditions  in `authorization`
           * may apply to invalidate the grant)
           * Format: date-time
           */
          expiration?: string;
        })[];
      /** @description pagination defines an pagination for the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** Grant is stored in the KVStore to record a grant with full context */
    "cosmos.feegrant.v1beta1.Grant": {
      /** @description granter is the address of the user granting an allowance of their funds. */
      granter?: string;
      /** @description grantee is the address of the user being granted an allowance of another user's funds. */
      grantee?: string;
      /** @description allowance can be any of basic, periodic, allowed fee allowance. */
      allowance?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
    };
    /** @description QueryAllowanceResponse is the response type for the Query/Allowance RPC method. */
    "cosmos.feegrant.v1beta1.QueryAllowanceResponse": {
      /**
       * Grant is stored in the KVStore to record a grant with full context
       * @description allowance is a allowance granted for grantee by granter.
       */
      allowance?: {
        /** @description granter is the address of the user granting an allowance of their funds. */
        granter?: string;
        /** @description grantee is the address of the user being granted an allowance of another user's funds. */
        grantee?: string;
        /** @description allowance can be any of basic, periodic, allowed fee allowance. */
        allowance?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
      };
    };
    /**
     * @description QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.
     *
     * Since: cosmos-sdk 0.46
     */
    "cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse": {
      /** @description allowances that have been issued by the granter. */
      allowances?: {
          /** @description granter is the address of the user granting an allowance of their funds. */
          granter?: string;
          /** @description grantee is the address of the user being granted an allowance of another user's funds. */
          grantee?: string;
          /** @description allowance can be any of basic, periodic, allowed fee allowance. */
          allowance?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
        }[];
      /** @description pagination defines an pagination for the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryAllowancesResponse is the response type for the Query/Allowances RPC method. */
    "cosmos.feegrant.v1beta1.QueryAllowancesResponse": {
      /** @description allowances are allowance's granted for grantee by granter. */
      allowances?: {
          /** @description granter is the address of the user granting an allowance of their funds. */
          granter?: string;
          /** @description grantee is the address of the user being granted an allowance of another user's funds. */
          grantee?: string;
          /** @description allowance can be any of basic, periodic, allowed fee allowance. */
          allowance?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
        }[];
      /** @description pagination defines an pagination for the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description Class defines the class of the nft type. */
    "cosmos.nft.v1beta1.Class": {
      /** id defines the unique identifier of the NFT classification, similar to the contract address of ERC721 */
      id?: string;
      /** name defines the human-readable name of the NFT classification. Optional */
      name?: string;
      /** symbol is an abbreviated name for nft classification. Optional */
      symbol?: string;
      /** description is a brief description of nft classification. Optional */
      description?: string;
      /** uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional */
      uri?: string;
      /** uri_hash is a hash of the document pointed by uri. Optional */
      uri_hash?: string;
      /**
       * data is the app specific metadata of the NFT class. Optional
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      data?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
    };
    /** @description NFT defines the NFT. */
    "cosmos.nft.v1beta1.NFT": {
      /** class_id associated with the NFT, similar to the contract address of ERC721 */
      class_id?: string;
      /** id is a unique identifier of the NFT */
      id?: string;
      /** uri for the NFT metadata stored off chain */
      uri?: string;
      /** uri_hash is a hash of the document pointed by uri */
      uri_hash?: string;
      /**
       * data is an app specific data of the NFT. Optional
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      data?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
    };
    /** QueryBalanceResponse is the response type for the Query/Balance RPC method */
    "cosmos.nft.v1beta1.QueryBalanceResponse": {
      /**
       * amount is the number of all NFTs of a given class owned by the owner
       * Format: uint64
       */
      amount?: string;
    };
    /** QueryClassResponse is the response type for the Query/Class RPC method */
    "cosmos.nft.v1beta1.QueryClassResponse": {
      /** @description Class defines the class of the nft type. */
      class?: {
        /** id defines the unique identifier of the NFT classification, similar to the contract address of ERC721 */
        id?: string;
        /** name defines the human-readable name of the NFT classification. Optional */
        name?: string;
        /** symbol is an abbreviated name for nft classification. Optional */
        symbol?: string;
        /** description is a brief description of nft classification. Optional */
        description?: string;
        /** uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional */
        uri?: string;
        /** uri_hash is a hash of the document pointed by uri. Optional */
        uri_hash?: string;
        /**
         * data is the app specific metadata of the NFT class. Optional
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        data?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
      };
    };
    /** QueryClassesResponse is the response type for the Query/Classes RPC method */
    "cosmos.nft.v1beta1.QueryClassesResponse": {
      /** @description class defines the class of the nft type. */
      classes?: ({
          /** id defines the unique identifier of the NFT classification, similar to the contract address of ERC721 */
          id?: string;
          /** name defines the human-readable name of the NFT classification. Optional */
          name?: string;
          /** symbol is an abbreviated name for nft classification. Optional */
          symbol?: string;
          /** description is a brief description of nft classification. Optional */
          description?: string;
          /** uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional */
          uri?: string;
          /** uri_hash is a hash of the document pointed by uri. Optional */
          uri_hash?: string;
          /**
           * data is the app specific metadata of the NFT class. Optional
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          data?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** QueryNFTResponse is the response type for the Query/NFT RPC method */
    "cosmos.nft.v1beta1.QueryNFTResponse": {
      /**
       * owner is the owner address of the nft
       * @description NFT defines the NFT.
       */
      nft?: {
        /** class_id associated with the NFT, similar to the contract address of ERC721 */
        class_id?: string;
        /** id is a unique identifier of the NFT */
        id?: string;
        /** uri for the NFT metadata stored off chain */
        uri?: string;
        /** uri_hash is a hash of the document pointed by uri */
        uri_hash?: string;
        /**
         * data is an app specific data of the NFT. Optional
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        data?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
      };
    };
    /** QueryNFTsResponse is the response type for the Query/NFTs RPC methods */
    "cosmos.nft.v1beta1.QueryNFTsResponse": {
      /** NFT defines the NFT */
      nfts?: ({
          /** class_id associated with the NFT, similar to the contract address of ERC721 */
          class_id?: string;
          /** id is a unique identifier of the NFT */
          id?: string;
          /** uri for the NFT metadata stored off chain */
          uri?: string;
          /** uri_hash is a hash of the document pointed by uri */
          uri_hash?: string;
          /**
           * data is an app specific data of the NFT. Optional
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          data?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** QueryOwnerResponse is the response type for the Query/Owner RPC method */
    "cosmos.nft.v1beta1.QueryOwnerResponse": {
      /** owner is the owner address of the nft */
      owner?: string;
    };
    /** QuerySupplyResponse is the response type for the Query/Supply RPC method */
    "cosmos.nft.v1beta1.QuerySupplyResponse": {
      /**
       * amount is the number of all NFTs from the given class
       * Format: uint64
       */
      amount?: string;
    };
    /** @description GroupInfo represents the high-level on-chain information for a group. */
    "cosmos.group.v1.GroupInfo": {
      /**
       * Format: uint64
       * @description id is the unique ID of the group.
       */
      id?: string;
      /** @description admin is the account address of the group's admin. */
      admin?: string;
      /**
       * metadata is any arbitrary metadata to attached to the group.
       * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
       */
      metadata?: string;
      /**
       * version is used to track changes to a group's membership structure that
       * would break existing proposals. Whenever any members weight is changed,
       * or any member is added or removed this version is incremented and will
       * cause proposals based on older versions of this group to fail
       * Format: uint64
       */
      version?: string;
      /** @description total_weight is the sum of the group members' weights. */
      total_weight?: string;
      /**
       * Format: date-time
       * @description created_at is a timestamp specifying when a group was created.
       */
      created_at?: string;
    };
    /** @description GroupMember represents the relationship between a group and a member. */
    "cosmos.group.v1.GroupMember": {
      /**
       * Format: uint64
       * @description group_id is the unique ID of the group.
       */
      group_id?: string;
      /** @description member is the member data. */
      member?: {
        /** @description address is the member's account address. */
        address?: string;
        /** @description weight is the member's voting weight that should be greater than 0. */
        weight?: string;
        /** @description metadata is any arbitrary metadata attached to the member. */
        metadata?: string;
        /**
         * Format: date-time
         * @description added_at is a timestamp specifying when a member was added.
         */
        added_at?: string;
      };
    };
    /** @description GroupPolicyInfo represents the high-level on-chain information for a group policy. */
    "cosmos.group.v1.GroupPolicyInfo": {
      /** @description address is the account address of group policy. */
      address?: string;
      /**
       * Format: uint64
       * @description group_id is the unique ID of the group.
       */
      group_id?: string;
      /** @description admin is the account address of the group admin. */
      admin?: string;
      /**
       * metadata is any arbitrary metadata attached to the group policy.
       * the recommended format of the metadata is to be found here:
       * https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
       */
      metadata?: string;
      /**
       * Format: uint64
       * @description version is used to track changes to a group's GroupPolicyInfo structure that
       * would create a different result on a running proposal.
       */
      version?: string;
      /**
       * @description `Any` contains an arbitrary serialized protocol buffer message along with a
       * URL that describes the type of the serialized message.
       *
       * Protobuf library provides support to pack/unpack Any values in the form
       * of utility functions or additional generated methods of the Any type.
       *
       * Example 1: Pack and unpack a message in C++.
       *
       *     Foo foo = ...;
       *     Any any;
       *     any.PackFrom(foo);
       *     ...
       *     if (any.UnpackTo(&foo)) {
       *       ...
       *     }
       *
       * Example 2: Pack and unpack a message in Java.
       *
       *     Foo foo = ...;
       *     Any any = Any.pack(foo);
       *     ...
       *     if (any.is(Foo.class)) {
       *       foo = any.unpack(Foo.class);
       *     }
       *     // or ...
       *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
       *       foo = any.unpack(Foo.getDefaultInstance());
       *     }
       *
       * Example 3: Pack and unpack a message in Python.
       *
       *     foo = Foo(...)
       *     any = Any()
       *     any.Pack(foo)
       *     ...
       *     if any.Is(Foo.DESCRIPTOR):
       *       any.Unpack(foo)
       *       ...
       *
       * Example 4: Pack and unpack a message in Go
       *
       *      foo := &pb.Foo{...}
       *      any, err := anypb.New(foo)
       *      if err != nil {
       *        ...
       *      }
       *      ...
       *      foo := &pb.Foo{}
       *      if err := any.UnmarshalTo(foo); err != nil {
       *        ...
       *      }
       *
       * The pack methods provided by protobuf library will by default use
       * 'type.googleapis.com/full.type.name' as the type URL and the unpack
       * methods only use the fully qualified type name after the last '/'
       * in the type URL, for example "foo.bar.com/x/y.z" will yield type
       * name "y.z".
       *
       * JSON
       *
       * The JSON representation of an `Any` value uses the regular
       * representation of the deserialized, embedded message, with an
       * additional field `@type` which contains the type URL. Example:
       *
       *     package google.profile;
       *     message Person {
       *       string first_name = 1;
       *       string last_name = 2;
       *     }
       *
       *     {
       *       "@type": "type.googleapis.com/google.profile.Person",
       *       "firstName": <string>,
       *       "lastName": <string>
       *     }
       *
       * If the embedded message type is well-known and has a custom JSON
       * representation, that representation will be embedded adding a field
       * `value` which holds the custom JSON in addition to the `@type`
       * field. Example (for message [google.protobuf.Duration][]):
       *
       *     {
       *       "@type": "type.googleapis.com/google.protobuf.Duration",
       *       "value": "1.212s"
       *     }
       */
      decision_policy?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /**
       * Format: date-time
       * @description created_at is a timestamp specifying when a group policy was created.
       */
      created_at?: string;
    };
    /**
     * @description Member represents a group member with an account address,
     * non-zero weight, metadata and added_at timestamp.
     */
    "cosmos.group.v1.Member": {
      /** @description address is the member's account address. */
      address?: string;
      /** @description weight is the member's voting weight that should be greater than 0. */
      weight?: string;
      /** @description metadata is any arbitrary metadata attached to the member. */
      metadata?: string;
      /**
       * Format: date-time
       * @description added_at is a timestamp specifying when a member was added.
       */
      added_at?: string;
    };
    /**
     * @description Proposal defines a group proposal. Any member of a group can submit a proposal
     * for a group policy to decide upon.
     * A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal
     * passes as well as some optional metadata associated with the proposal.
     */
    "cosmos.group.v1.Proposal": {
      /**
       * Format: uint64
       * @description id is the unique id of the proposal.
       */
      id?: string;
      /** @description group_policy_address is the account address of group policy. */
      group_policy_address?: string;
      /**
       * metadata is any arbitrary metadata attached to the proposal.
       * the recommended format of the metadata is to be found here:
       * https://docs.cosmos.network/v0.47/modules/group#proposal-4
       */
      metadata?: string;
      /** @description proposers are the account addresses of the proposers. */
      proposers?: string[];
      /**
       * Format: date-time
       * @description submit_time is a timestamp specifying when a proposal was submitted.
       */
      submit_time?: string;
      /**
       * Format: uint64
       * @description group_version tracks the version of the group at proposal submission.
       * This field is here for informational purposes only.
       */
      group_version?: string;
      /**
       * Format: uint64
       * @description group_policy_version tracks the version of the group policy at proposal submission.
       * When a decision policy is changed, existing proposals from previous policy
       * versions will become invalid with the `ABORTED` status.
       * This field is here for informational purposes only.
       */
      group_policy_version?: string;
      /**
       * @description status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
       * @default PROPOSAL_STATUS_UNSPECIFIED
       * @enum {string}
       */
      status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_SUBMITTED" | "PROPOSAL_STATUS_ACCEPTED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_ABORTED" | "PROPOSAL_STATUS_WITHDRAWN";
      /**
       * @description final_tally_result contains the sums of all weighted votes for this
       * proposal for each vote option. It is empty at submission, and only
       * populated after tallying, at voting period end or at proposal execution,
       * whichever happens first.
       */
      final_tally_result?: {
        /** @description yes_count is the weighted sum of yes votes. */
        yes_count?: string;
        /** @description abstain_count is the weighted sum of abstainers. */
        abstain_count?: string;
        /** @description no_count is the weighted sum of no votes. */
        no_count?: string;
        /** @description no_with_veto_count is the weighted sum of veto. */
        no_with_veto_count?: string;
      };
      /**
       * Format: date-time
       * @description voting_period_end is the timestamp before which voting must be done.
       * Unless a successful MsgExec is called before (to execute a proposal whose
       * tally is successful before the voting period ends), tallying will be done
       * at this point, and the `final_tally_result`and `status` fields will be
       * accordingly updated.
       */
      voting_period_end?: string;
      /**
       * @description executor_result is the final result of the proposal execution. Initial value is NotRun.
       * @default PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
       * @enum {string}
       */
      executor_result?: "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED" | "PROPOSAL_EXECUTOR_RESULT_NOT_RUN" | "PROPOSAL_EXECUTOR_RESULT_SUCCESS" | "PROPOSAL_EXECUTOR_RESULT_FAILURE";
      /** @description messages is a list of `sdk.Msg`s that will be executed if the proposal passes. */
      messages?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        }[];
      /**
       * title is the title of the proposal
       * @description Since: cosmos-sdk 0.47
       */
      title?: string;
      /**
       * summary is a short summary of the proposal
       * @description Since: cosmos-sdk 0.47
       */
      summary?: string;
    };
    /**
     * @description ProposalExecutorResult defines types of proposal executor results.
     *
     *  - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.
     *  - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.
     *  - PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed action updated state.
     *  - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned an error and proposed action didn't update state.
     * @default PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.group.v1.ProposalExecutorResult": "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED" | "PROPOSAL_EXECUTOR_RESULT_NOT_RUN" | "PROPOSAL_EXECUTOR_RESULT_SUCCESS" | "PROPOSAL_EXECUTOR_RESULT_FAILURE";
    /**
     * @description ProposalStatus defines proposal statuses.
     *
     *  - PROPOSAL_STATUS_UNSPECIFIED: An empty value is invalid and not allowed.
     *  - PROPOSAL_STATUS_SUBMITTED: Initial status of a proposal when submitted.
     *  - PROPOSAL_STATUS_ACCEPTED: Final status of a proposal when the final tally is done and the outcome
     * passes the group policy's decision policy.
     *  - PROPOSAL_STATUS_REJECTED: Final status of a proposal when the final tally is done and the outcome
     * is rejected by the group policy's decision policy.
     *  - PROPOSAL_STATUS_ABORTED: Final status of a proposal when the group policy is modified before the
     * final tally.
     *  - PROPOSAL_STATUS_WITHDRAWN: A proposal can be withdrawn before the voting start time by the owner.
     * When this happens the final status is Withdrawn.
     * @default PROPOSAL_STATUS_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.group.v1.ProposalStatus": "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_SUBMITTED" | "PROPOSAL_STATUS_ACCEPTED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_ABORTED" | "PROPOSAL_STATUS_WITHDRAWN";
    /** @description QueryGroupInfoResponse is the Query/GroupInfo response type. */
    "cosmos.group.v1.QueryGroupInfoResponse": {
      /** @description info is the GroupInfo of the group. */
      info?: {
        /**
         * Format: uint64
         * @description id is the unique ID of the group.
         */
        id?: string;
        /** @description admin is the account address of the group's admin. */
        admin?: string;
        /**
         * metadata is any arbitrary metadata to attached to the group.
         * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
         */
        metadata?: string;
        /**
         * version is used to track changes to a group's membership structure that
         * would break existing proposals. Whenever any members weight is changed,
         * or any member is added or removed this version is incremented and will
         * cause proposals based on older versions of this group to fail
         * Format: uint64
         */
        version?: string;
        /** @description total_weight is the sum of the group members' weights. */
        total_weight?: string;
        /**
         * Format: date-time
         * @description created_at is a timestamp specifying when a group was created.
         */
        created_at?: string;
      };
    };
    /** @description QueryGroupMembersResponse is the Query/GroupMembersResponse response type. */
    "cosmos.group.v1.QueryGroupMembersResponse": {
      /** @description members are the members of the group with given group_id. */
      members?: {
          /**
           * Format: uint64
           * @description group_id is the unique ID of the group.
           */
          group_id?: string;
          /** @description member is the member data. */
          member?: {
            /** @description address is the member's account address. */
            address?: string;
            /** @description weight is the member's voting weight that should be greater than 0. */
            weight?: string;
            /** @description metadata is any arbitrary metadata attached to the member. */
            metadata?: string;
            /**
             * Format: date-time
             * @description added_at is a timestamp specifying when a member was added.
             */
            added_at?: string;
          };
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin response type. */
    "cosmos.group.v1.QueryGroupPoliciesByAdminResponse": {
      /** @description group_policies are the group policies info with provided admin. */
      group_policies?: ({
          /** @description address is the account address of group policy. */
          address?: string;
          /**
           * Format: uint64
           * @description group_id is the unique ID of the group.
           */
          group_id?: string;
          /** @description admin is the account address of the group admin. */
          admin?: string;
          /**
           * metadata is any arbitrary metadata attached to the group policy.
           * the recommended format of the metadata is to be found here:
           * https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
           */
          metadata?: string;
          /**
           * Format: uint64
           * @description version is used to track changes to a group's GroupPolicyInfo structure that
           * would create a different result on a running proposal.
           */
          version?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          decision_policy?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /**
           * Format: date-time
           * @description created_at is a timestamp specifying when a group policy was created.
           */
          created_at?: string;
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup response type. */
    "cosmos.group.v1.QueryGroupPoliciesByGroupResponse": {
      /** @description group_policies are the group policies info associated with the provided group. */
      group_policies?: ({
          /** @description address is the account address of group policy. */
          address?: string;
          /**
           * Format: uint64
           * @description group_id is the unique ID of the group.
           */
          group_id?: string;
          /** @description admin is the account address of the group admin. */
          admin?: string;
          /**
           * metadata is any arbitrary metadata attached to the group policy.
           * the recommended format of the metadata is to be found here:
           * https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
           */
          metadata?: string;
          /**
           * Format: uint64
           * @description version is used to track changes to a group's GroupPolicyInfo structure that
           * would create a different result on a running proposal.
           */
          version?: string;
          /**
           * @description `Any` contains an arbitrary serialized protocol buffer message along with a
           * URL that describes the type of the serialized message.
           *
           * Protobuf library provides support to pack/unpack Any values in the form
           * of utility functions or additional generated methods of the Any type.
           *
           * Example 1: Pack and unpack a message in C++.
           *
           *     Foo foo = ...;
           *     Any any;
           *     any.PackFrom(foo);
           *     ...
           *     if (any.UnpackTo(&foo)) {
           *       ...
           *     }
           *
           * Example 2: Pack and unpack a message in Java.
           *
           *     Foo foo = ...;
           *     Any any = Any.pack(foo);
           *     ...
           *     if (any.is(Foo.class)) {
           *       foo = any.unpack(Foo.class);
           *     }
           *     // or ...
           *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
           *       foo = any.unpack(Foo.getDefaultInstance());
           *     }
           *
           * Example 3: Pack and unpack a message in Python.
           *
           *     foo = Foo(...)
           *     any = Any()
           *     any.Pack(foo)
           *     ...
           *     if any.Is(Foo.DESCRIPTOR):
           *       any.Unpack(foo)
           *       ...
           *
           * Example 4: Pack and unpack a message in Go
           *
           *      foo := &pb.Foo{...}
           *      any, err := anypb.New(foo)
           *      if err != nil {
           *        ...
           *      }
           *      ...
           *      foo := &pb.Foo{}
           *      if err := any.UnmarshalTo(foo); err != nil {
           *        ...
           *      }
           *
           * The pack methods provided by protobuf library will by default use
           * 'type.googleapis.com/full.type.name' as the type URL and the unpack
           * methods only use the fully qualified type name after the last '/'
           * in the type URL, for example "foo.bar.com/x/y.z" will yield type
           * name "y.z".
           *
           * JSON
           *
           * The JSON representation of an `Any` value uses the regular
           * representation of the deserialized, embedded message, with an
           * additional field `@type` which contains the type URL. Example:
           *
           *     package google.profile;
           *     message Person {
           *       string first_name = 1;
           *       string last_name = 2;
           *     }
           *
           *     {
           *       "@type": "type.googleapis.com/google.profile.Person",
           *       "firstName": <string>,
           *       "lastName": <string>
           *     }
           *
           * If the embedded message type is well-known and has a custom JSON
           * representation, that representation will be embedded adding a field
           * `value` which holds the custom JSON in addition to the `@type`
           * field. Example (for message [google.protobuf.Duration][]):
           *
           *     {
           *       "@type": "type.googleapis.com/google.protobuf.Duration",
           *       "value": "1.212s"
           *     }
           */
          decision_policy?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /**
           * Format: date-time
           * @description created_at is a timestamp specifying when a group policy was created.
           */
          created_at?: string;
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response type. */
    "cosmos.group.v1.QueryGroupPolicyInfoResponse": {
      /** @description GroupPolicyInfo represents the high-level on-chain information for a group policy. */
      info?: {
        /** @description address is the account address of group policy. */
        address?: string;
        /**
         * Format: uint64
         * @description group_id is the unique ID of the group.
         */
        group_id?: string;
        /** @description admin is the account address of the group admin. */
        admin?: string;
        /**
         * metadata is any arbitrary metadata attached to the group policy.
         * the recommended format of the metadata is to be found here:
         * https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
         */
        metadata?: string;
        /**
         * Format: uint64
         * @description version is used to track changes to a group's GroupPolicyInfo structure that
         * would create a different result on a running proposal.
         */
        version?: string;
        /**
         * @description `Any` contains an arbitrary serialized protocol buffer message along with a
         * URL that describes the type of the serialized message.
         *
         * Protobuf library provides support to pack/unpack Any values in the form
         * of utility functions or additional generated methods of the Any type.
         *
         * Example 1: Pack and unpack a message in C++.
         *
         *     Foo foo = ...;
         *     Any any;
         *     any.PackFrom(foo);
         *     ...
         *     if (any.UnpackTo(&foo)) {
         *       ...
         *     }
         *
         * Example 2: Pack and unpack a message in Java.
         *
         *     Foo foo = ...;
         *     Any any = Any.pack(foo);
         *     ...
         *     if (any.is(Foo.class)) {
         *       foo = any.unpack(Foo.class);
         *     }
         *     // or ...
         *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
         *       foo = any.unpack(Foo.getDefaultInstance());
         *     }
         *
         * Example 3: Pack and unpack a message in Python.
         *
         *     foo = Foo(...)
         *     any = Any()
         *     any.Pack(foo)
         *     ...
         *     if any.Is(Foo.DESCRIPTOR):
         *       any.Unpack(foo)
         *       ...
         *
         * Example 4: Pack and unpack a message in Go
         *
         *      foo := &pb.Foo{...}
         *      any, err := anypb.New(foo)
         *      if err != nil {
         *        ...
         *      }
         *      ...
         *      foo := &pb.Foo{}
         *      if err := any.UnmarshalTo(foo); err != nil {
         *        ...
         *      }
         *
         * The pack methods provided by protobuf library will by default use
         * 'type.googleapis.com/full.type.name' as the type URL and the unpack
         * methods only use the fully qualified type name after the last '/'
         * in the type URL, for example "foo.bar.com/x/y.z" will yield type
         * name "y.z".
         *
         * JSON
         *
         * The JSON representation of an `Any` value uses the regular
         * representation of the deserialized, embedded message, with an
         * additional field `@type` which contains the type URL. Example:
         *
         *     package google.profile;
         *     message Person {
         *       string first_name = 1;
         *       string last_name = 2;
         *     }
         *
         *     {
         *       "@type": "type.googleapis.com/google.profile.Person",
         *       "firstName": <string>,
         *       "lastName": <string>
         *     }
         *
         * If the embedded message type is well-known and has a custom JSON
         * representation, that representation will be embedded adding a field
         * `value` which holds the custom JSON in addition to the `@type`
         * field. Example (for message [google.protobuf.Duration][]):
         *
         *     {
         *       "@type": "type.googleapis.com/google.protobuf.Duration",
         *       "value": "1.212s"
         *     }
         */
        decision_policy?: {
          /**
           * @description A URL/resource name that uniquely identifies the type of the serialized
           * protocol buffer message. This string must contain at least
           * one "/" character. The last segment of the URL's path must represent
           * the fully qualified name of the type (as in
           * `path/google.protobuf.Duration`). The name should be in a canonical form
           * (e.g., leading "." is not accepted).
           *
           * In practice, teams usually precompile into the binary all types that they
           * expect it to use in the context of Any. However, for URLs which use the
           * scheme `http`, `https`, or no scheme, one can optionally set up a type
           * server that maps type URLs to message definitions as follows:
           *
           * * If no scheme is provided, `https` is assumed.
           * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
           *   value in binary format, or produce an error.
           * * Applications are allowed to cache lookup results based on the
           *   URL, or have them precompiled into a binary to avoid any
           *   lookup. Therefore, binary compatibility needs to be preserved
           *   on changes to types. (Use versioned type names to manage
           *   breaking changes.)
           *
           * Note: this functionality is not currently available in the official
           * protobuf release, and it is not used for type URLs beginning with
           * type.googleapis.com.
           *
           * Schemes other than `http`, `https` (or the empty scheme) might be
           * used with implementation specific semantics.
           */
          type_url?: string;
          /**
           * Format: byte
           * @description Must be a valid serialized protocol buffer of the above specified type.
           */
          value?: string;
        };
        /**
         * Format: date-time
         * @description created_at is a timestamp specifying when a group policy was created.
         */
        created_at?: string;
      };
    };
    /** @description QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response type. */
    "cosmos.group.v1.QueryGroupsByAdminResponse": {
      /** @description groups are the groups info with the provided admin. */
      groups?: {
          /**
           * Format: uint64
           * @description id is the unique ID of the group.
           */
          id?: string;
          /** @description admin is the account address of the group's admin. */
          admin?: string;
          /**
           * metadata is any arbitrary metadata to attached to the group.
           * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
           */
          metadata?: string;
          /**
           * version is used to track changes to a group's membership structure that
           * would break existing proposals. Whenever any members weight is changed,
           * or any member is added or removed this version is incremented and will
           * cause proposals based on older versions of this group to fail
           * Format: uint64
           */
          version?: string;
          /** @description total_weight is the sum of the group members' weights. */
          total_weight?: string;
          /**
           * Format: date-time
           * @description created_at is a timestamp specifying when a group was created.
           */
          created_at?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryGroupsByMemberResponse is the Query/GroupsByMember response type. */
    "cosmos.group.v1.QueryGroupsByMemberResponse": {
      /** @description groups are the groups info with the provided group member. */
      groups?: {
          /**
           * Format: uint64
           * @description id is the unique ID of the group.
           */
          id?: string;
          /** @description admin is the account address of the group's admin. */
          admin?: string;
          /**
           * metadata is any arbitrary metadata to attached to the group.
           * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
           */
          metadata?: string;
          /**
           * version is used to track changes to a group's membership structure that
           * would break existing proposals. Whenever any members weight is changed,
           * or any member is added or removed this version is incremented and will
           * cause proposals based on older versions of this group to fail
           * Format: uint64
           */
          version?: string;
          /** @description total_weight is the sum of the group members' weights. */
          total_weight?: string;
          /**
           * Format: date-time
           * @description created_at is a timestamp specifying when a group was created.
           */
          created_at?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /**
     * @description QueryGroupsResponse is the Query/Groups response type.
     *
     * Since: cosmos-sdk 0.47.1
     */
    "cosmos.group.v1.QueryGroupsResponse": {
      /** @description `groups` is all the groups present in state. */
      groups?: {
          /**
           * Format: uint64
           * @description id is the unique ID of the group.
           */
          id?: string;
          /** @description admin is the account address of the group's admin. */
          admin?: string;
          /**
           * metadata is any arbitrary metadata to attached to the group.
           * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
           */
          metadata?: string;
          /**
           * version is used to track changes to a group's membership structure that
           * would break existing proposals. Whenever any members weight is changed,
           * or any member is added or removed this version is incremented and will
           * cause proposals based on older versions of this group to fail
           * Format: uint64
           */
          version?: string;
          /** @description total_weight is the sum of the group members' weights. */
          total_weight?: string;
          /**
           * Format: date-time
           * @description created_at is a timestamp specifying when a group was created.
           */
          created_at?: string;
        }[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryProposalResponse is the Query/Proposal response type. */
    "cosmos.group.v1.QueryProposalResponse": {
      /** @description proposal is the proposal info. */
      proposal?: {
        /**
         * Format: uint64
         * @description id is the unique id of the proposal.
         */
        id?: string;
        /** @description group_policy_address is the account address of group policy. */
        group_policy_address?: string;
        /**
         * metadata is any arbitrary metadata attached to the proposal.
         * the recommended format of the metadata is to be found here:
         * https://docs.cosmos.network/v0.47/modules/group#proposal-4
         */
        metadata?: string;
        /** @description proposers are the account addresses of the proposers. */
        proposers?: string[];
        /**
         * Format: date-time
         * @description submit_time is a timestamp specifying when a proposal was submitted.
         */
        submit_time?: string;
        /**
         * Format: uint64
         * @description group_version tracks the version of the group at proposal submission.
         * This field is here for informational purposes only.
         */
        group_version?: string;
        /**
         * Format: uint64
         * @description group_policy_version tracks the version of the group policy at proposal submission.
         * When a decision policy is changed, existing proposals from previous policy
         * versions will become invalid with the `ABORTED` status.
         * This field is here for informational purposes only.
         */
        group_policy_version?: string;
        /**
         * @description status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
         * @default PROPOSAL_STATUS_UNSPECIFIED
         * @enum {string}
         */
        status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_SUBMITTED" | "PROPOSAL_STATUS_ACCEPTED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_ABORTED" | "PROPOSAL_STATUS_WITHDRAWN";
        /**
         * @description final_tally_result contains the sums of all weighted votes for this
         * proposal for each vote option. It is empty at submission, and only
         * populated after tallying, at voting period end or at proposal execution,
         * whichever happens first.
         */
        final_tally_result?: {
          /** @description yes_count is the weighted sum of yes votes. */
          yes_count?: string;
          /** @description abstain_count is the weighted sum of abstainers. */
          abstain_count?: string;
          /** @description no_count is the weighted sum of no votes. */
          no_count?: string;
          /** @description no_with_veto_count is the weighted sum of veto. */
          no_with_veto_count?: string;
        };
        /**
         * Format: date-time
         * @description voting_period_end is the timestamp before which voting must be done.
         * Unless a successful MsgExec is called before (to execute a proposal whose
         * tally is successful before the voting period ends), tallying will be done
         * at this point, and the `final_tally_result`and `status` fields will be
         * accordingly updated.
         */
        voting_period_end?: string;
        /**
         * @description executor_result is the final result of the proposal execution. Initial value is NotRun.
         * @default PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
         * @enum {string}
         */
        executor_result?: "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED" | "PROPOSAL_EXECUTOR_RESULT_NOT_RUN" | "PROPOSAL_EXECUTOR_RESULT_SUCCESS" | "PROPOSAL_EXECUTOR_RESULT_FAILURE";
        /** @description messages is a list of `sdk.Msg`s that will be executed if the proposal passes. */
        messages?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          }[];
        /**
         * title is the title of the proposal
         * @description Since: cosmos-sdk 0.47
         */
        title?: string;
        /**
         * summary is a short summary of the proposal
         * @description Since: cosmos-sdk 0.47
         */
        summary?: string;
      };
    };
    /** @description QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy response type. */
    "cosmos.group.v1.QueryProposalsByGroupPolicyResponse": {
      /** @description proposals are the proposals with given group policy. */
      proposals?: ({
          /**
           * Format: uint64
           * @description id is the unique id of the proposal.
           */
          id?: string;
          /** @description group_policy_address is the account address of group policy. */
          group_policy_address?: string;
          /**
           * metadata is any arbitrary metadata attached to the proposal.
           * the recommended format of the metadata is to be found here:
           * https://docs.cosmos.network/v0.47/modules/group#proposal-4
           */
          metadata?: string;
          /** @description proposers are the account addresses of the proposers. */
          proposers?: string[];
          /**
           * Format: date-time
           * @description submit_time is a timestamp specifying when a proposal was submitted.
           */
          submit_time?: string;
          /**
           * Format: uint64
           * @description group_version tracks the version of the group at proposal submission.
           * This field is here for informational purposes only.
           */
          group_version?: string;
          /**
           * Format: uint64
           * @description group_policy_version tracks the version of the group policy at proposal submission.
           * When a decision policy is changed, existing proposals from previous policy
           * versions will become invalid with the `ABORTED` status.
           * This field is here for informational purposes only.
           */
          group_policy_version?: string;
          /**
           * @description status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
           * @default PROPOSAL_STATUS_UNSPECIFIED
           * @enum {string}
           */
          status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_SUBMITTED" | "PROPOSAL_STATUS_ACCEPTED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_ABORTED" | "PROPOSAL_STATUS_WITHDRAWN";
          /**
           * @description final_tally_result contains the sums of all weighted votes for this
           * proposal for each vote option. It is empty at submission, and only
           * populated after tallying, at voting period end or at proposal execution,
           * whichever happens first.
           */
          final_tally_result?: {
            /** @description yes_count is the weighted sum of yes votes. */
            yes_count?: string;
            /** @description abstain_count is the weighted sum of abstainers. */
            abstain_count?: string;
            /** @description no_count is the weighted sum of no votes. */
            no_count?: string;
            /** @description no_with_veto_count is the weighted sum of veto. */
            no_with_veto_count?: string;
          };
          /**
           * Format: date-time
           * @description voting_period_end is the timestamp before which voting must be done.
           * Unless a successful MsgExec is called before (to execute a proposal whose
           * tally is successful before the voting period ends), tallying will be done
           * at this point, and the `final_tally_result`and `status` fields will be
           * accordingly updated.
           */
          voting_period_end?: string;
          /**
           * @description executor_result is the final result of the proposal execution. Initial value is NotRun.
           * @default PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
           * @enum {string}
           */
          executor_result?: "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED" | "PROPOSAL_EXECUTOR_RESULT_NOT_RUN" | "PROPOSAL_EXECUTOR_RESULT_SUCCESS" | "PROPOSAL_EXECUTOR_RESULT_FAILURE";
          /** @description messages is a list of `sdk.Msg`s that will be executed if the proposal passes. */
          messages?: {
              /**
               * @description A URL/resource name that uniquely identifies the type of the serialized
               * protocol buffer message. This string must contain at least
               * one "/" character. The last segment of the URL's path must represent
               * the fully qualified name of the type (as in
               * `path/google.protobuf.Duration`). The name should be in a canonical form
               * (e.g., leading "." is not accepted).
               *
               * In practice, teams usually precompile into the binary all types that they
               * expect it to use in the context of Any. However, for URLs which use the
               * scheme `http`, `https`, or no scheme, one can optionally set up a type
               * server that maps type URLs to message definitions as follows:
               *
               * * If no scheme is provided, `https` is assumed.
               * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
               *   value in binary format, or produce an error.
               * * Applications are allowed to cache lookup results based on the
               *   URL, or have them precompiled into a binary to avoid any
               *   lookup. Therefore, binary compatibility needs to be preserved
               *   on changes to types. (Use versioned type names to manage
               *   breaking changes.)
               *
               * Note: this functionality is not currently available in the official
               * protobuf release, and it is not used for type URLs beginning with
               * type.googleapis.com.
               *
               * Schemes other than `http`, `https` (or the empty scheme) might be
               * used with implementation specific semantics.
               */
              type_url?: string;
              /**
               * Format: byte
               * @description Must be a valid serialized protocol buffer of the above specified type.
               */
              value?: string;
            }[];
          /**
           * title is the title of the proposal
           * @description Since: cosmos-sdk 0.47
           */
          title?: string;
          /**
           * summary is a short summary of the proposal
           * @description Since: cosmos-sdk 0.47
           */
          summary?: string;
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryTallyResultResponse is the Query/TallyResult response type. */
    "cosmos.group.v1.QueryTallyResultResponse": {
      /** @description tally defines the requested tally. */
      tally?: {
        /** @description yes_count is the weighted sum of yes votes. */
        yes_count?: string;
        /** @description abstain_count is the weighted sum of abstainers. */
        abstain_count?: string;
        /** @description no_count is the weighted sum of no votes. */
        no_count?: string;
        /** @description no_with_veto_count is the weighted sum of veto. */
        no_with_veto_count?: string;
      };
    };
    /** @description QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter response type. */
    "cosmos.group.v1.QueryVoteByProposalVoterResponse": {
      /**
       * Vote represents a vote for a proposal.string metadata
       * @description vote is the vote with given proposal_id and voter.
       */
      vote?: {
        /**
         * Format: uint64
         * @description proposal is the unique ID of the proposal.
         */
        proposal_id?: string;
        /** @description voter is the account address of the voter. */
        voter?: string;
        /**
         * @description option is the voter's choice on the proposal.
         * @default VOTE_OPTION_UNSPECIFIED
         * @enum {string}
         */
        option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
        /**
         * metadata is any arbitrary metadata attached to the vote.
         * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
         */
        metadata?: string;
        /**
         * Format: date-time
         * @description submit_time is the timestamp when the vote was submitted.
         */
        submit_time?: string;
      };
    };
    /** @description QueryVotesByProposalResponse is the Query/VotesByProposal response type. */
    "cosmos.group.v1.QueryVotesByProposalResponse": {
      /** @description votes are the list of votes for given proposal_id. */
      votes?: ({
          /**
           * Format: uint64
           * @description proposal is the unique ID of the proposal.
           */
          proposal_id?: string;
          /** @description voter is the account address of the voter. */
          voter?: string;
          /**
           * @description option is the voter's choice on the proposal.
           * @default VOTE_OPTION_UNSPECIFIED
           * @enum {string}
           */
          option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
          /**
           * metadata is any arbitrary metadata attached to the vote.
           * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
           */
          metadata?: string;
          /**
           * Format: date-time
           * @description submit_time is the timestamp when the vote was submitted.
           */
          submit_time?: string;
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description QueryVotesByVoterResponse is the Query/VotesByVoter response type. */
    "cosmos.group.v1.QueryVotesByVoterResponse": {
      /** @description votes are the list of votes by given voter. */
      votes?: ({
          /**
           * Format: uint64
           * @description proposal is the unique ID of the proposal.
           */
          proposal_id?: string;
          /** @description voter is the account address of the voter. */
          voter?: string;
          /**
           * @description option is the voter's choice on the proposal.
           * @default VOTE_OPTION_UNSPECIFIED
           * @enum {string}
           */
          option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
          /**
           * metadata is any arbitrary metadata attached to the vote.
           * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
           */
          metadata?: string;
          /**
           * Format: date-time
           * @description submit_time is the timestamp when the vote was submitted.
           */
          submit_time?: string;
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description TallyResult represents the sum of weighted votes for each vote option. */
    "cosmos.group.v1.TallyResult": {
      /** @description yes_count is the weighted sum of yes votes. */
      yes_count?: string;
      /** @description abstain_count is the weighted sum of abstainers. */
      abstain_count?: string;
      /** @description no_count is the weighted sum of no votes. */
      no_count?: string;
      /** @description no_with_veto_count is the weighted sum of veto. */
      no_with_veto_count?: string;
    };
    /** Vote represents a vote for a proposal.string metadata */
    "cosmos.group.v1.Vote": {
      /**
       * Format: uint64
       * @description proposal is the unique ID of the proposal.
       */
      proposal_id?: string;
      /** @description voter is the account address of the voter. */
      voter?: string;
      /**
       * @description option is the voter's choice on the proposal.
       * @default VOTE_OPTION_UNSPECIFIED
       * @enum {string}
       */
      option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
      /**
       * metadata is any arbitrary metadata attached to the vote.
       * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
       */
      metadata?: string;
      /**
       * Format: date-time
       * @description submit_time is the timestamp when the vote was submitted.
       */
      submit_time?: string;
    };
    /**
     * @description VoteOption enumerates the valid vote options for a given proposal.
     *
     *  - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will
     * return an error.
     *  - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
     *  - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
     *  - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
     *  - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
     * @default VOTE_OPTION_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.group.v1.VoteOption": "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
    /** @description AccountResponse is the response type for the Query/Account RPC method. */
    "cosmos.circuit.v1.AccountResponse": {
      /**
       * @description Permissions are the permissions that an account has to trip
       * or reset the circuit breaker.
       */
      permission?: {
        /**
         * @description level is the level of permissions granted to this account.
         * @default LEVEL_NONE_UNSPECIFIED
         * @enum {string}
         */
        level?: "LEVEL_NONE_UNSPECIFIED" | "LEVEL_SOME_MSGS" | "LEVEL_ALL_MSGS" | "LEVEL_SUPER_ADMIN";
        /**
         * @description limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
         * URLs that the account can trip. It is an error to use limit_type_urls with
         * a level other than LEVEL_SOME_MSGS.
         */
        limit_type_urls?: string[];
      };
    };
    /** @description AccountsResponse is the response type for the Query/Accounts RPC method. */
    "cosmos.circuit.v1.AccountsResponse": {
      accounts?: ({
          address?: string;
          /**
           * @description Permissions are the permissions that an account has to trip
           * or reset the circuit breaker.
           */
          permissions?: {
            /**
             * @description level is the level of permissions granted to this account.
             * @default LEVEL_NONE_UNSPECIFIED
             * @enum {string}
             */
            level?: "LEVEL_NONE_UNSPECIFIED" | "LEVEL_SOME_MSGS" | "LEVEL_ALL_MSGS" | "LEVEL_SUPER_ADMIN";
            /**
             * @description limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
             * URLs that the account can trip. It is an error to use limit_type_urls with
             * a level other than LEVEL_SOME_MSGS.
             */
            limit_type_urls?: string[];
          };
        })[];
      /** @description pagination defines the pagination in the response. */
      pagination?: {
        /**
         * Format: byte
         * @description next_key is the key to be passed to PageRequest.key to
         * query the next page most efficiently. It will be empty if
         * there are no more results.
         */
        next_key?: string;
        /**
         * total is total number of results available if PageRequest.count_total
         * was set, its value is undefined otherwise
         * Format: uint64
         */
        total?: string;
      };
    };
    /** @description DisabledListResponse is the response type for the Query/DisabledList RPC method. */
    "cosmos.circuit.v1.DisabledListResponse": {
      disabled_list?: string[];
    };
    /** GenesisAccountPermissions is the account permissions for the circuit breaker in genesis */
    "cosmos.circuit.v1.GenesisAccountPermissions": {
      address?: string;
      /**
       * @description Permissions are the permissions that an account has to trip
       * or reset the circuit breaker.
       */
      permissions?: {
        /**
         * @description level is the level of permissions granted to this account.
         * @default LEVEL_NONE_UNSPECIFIED
         * @enum {string}
         */
        level?: "LEVEL_NONE_UNSPECIFIED" | "LEVEL_SOME_MSGS" | "LEVEL_ALL_MSGS" | "LEVEL_SUPER_ADMIN";
        /**
         * @description limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
         * URLs that the account can trip. It is an error to use limit_type_urls with
         * a level other than LEVEL_SOME_MSGS.
         */
        limit_type_urls?: string[];
      };
    };
    /**
     * @description Permissions are the permissions that an account has to trip
     * or reset the circuit breaker.
     */
    "cosmos.circuit.v1.Permissions": {
      /**
       * @description level is the level of permissions granted to this account.
       * @default LEVEL_NONE_UNSPECIFIED
       * @enum {string}
       */
      level?: "LEVEL_NONE_UNSPECIFIED" | "LEVEL_SOME_MSGS" | "LEVEL_ALL_MSGS" | "LEVEL_SUPER_ADMIN";
      /**
       * @description limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
       * URLs that the account can trip. It is an error to use limit_type_urls with
       * a level other than LEVEL_SOME_MSGS.
       */
      limit_type_urls?: string[];
    };
    /**
     * @description Level is the permission level.
     *
     *  - LEVEL_NONE_UNSPECIFIED: LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit
     * breaker permissions.
     *  - LEVEL_SOME_MSGS: LEVEL_SOME_MSGS indicates that the account will have permission to
     * trip or reset the circuit breaker for some Msg type URLs. If this level
     * is chosen, a non-empty list of Msg type URLs must be provided in
     * limit_type_urls.
     *  - LEVEL_ALL_MSGS: LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit
     * breaker for Msg's of all type URLs.
     *  - LEVEL_SUPER_ADMIN: LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker
     * actions and can grant permissions to other accounts.
     * @default LEVEL_NONE_UNSPECIFIED
     * @enum {string}
     */
    "cosmos.circuit.v1.Permissions.Level": "LEVEL_NONE_UNSPECIFIED" | "LEVEL_SOME_MSGS" | "LEVEL_ALL_MSGS" | "LEVEL_SUPER_ADMIN";
    /** @description QueryParamsResponse defines the response type for querying x/consensus parameters. */
    "cosmos.consensus.v1.QueryParamsResponse": {
      /**
       * @description params are the tendermint consensus params stored in the consensus module.
       * Please note that `params.version` is not populated in this response, it is
       * tracked separately in the x/upgrade module.
       */
      params?: {
        /** @description BlockParams contains limits on the block size. */
        block?: {
          /**
           * Max block size, in bytes.
           * Note: must be greater than 0
           * Format: int64
           */
          max_bytes?: string;
          /**
           * Max gas per block.
           * Note: must be greater or equal to -1
           * Format: int64
           */
          max_gas?: string;
        };
        /** @description EvidenceParams determine how we handle evidence of malfeasance. */
        evidence?: {
          /**
           * Format: int64
           * @description Max age of evidence, in blocks.
           *
           * The basic formula for calculating this is: MaxAgeDuration / {average block
           * time}.
           */
          max_age_num_blocks?: string;
          /**
           * @description Max age of evidence, in time.
           *
           * It should correspond with an app's "unbonding period" or other similar
           * mechanism for handling [Nothing-At-Stake
           * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
           */
          max_age_duration?: string;
          /**
           * This sets the maximum size of total evidence in bytes that can be committed in a single block.
           * and should fall comfortably under the max block bytes.
           * Default is 1048576 or 1MB
           * Format: int64
           */
          max_bytes?: string;
        };
        /**
         * @description ValidatorParams restrict the public key types validators can use.
         * NOTE: uses ABCI pubkey naming, not Amino names.
         */
        validator?: {
          pub_key_types?: string[];
        };
        /** @description VersionParams contains the ABCI application version. */
        version?: {
          /** Format: uint64 */
          app?: string;
        };
        /** @description ABCIParams configure functionality specific to the Application Blockchain Interface. */
        abci?: {
          /**
           * Format: int64
           * @description vote_extensions_enable_height configures the first height during which
           * vote extensions will be enabled. During this specified height, and for all
           * subsequent heights, precommit messages that do not contain valid extension data
           * will be considered invalid. Prior to this height, vote extensions will not
           * be used or accepted by validators on the network.
           *
           * Once enabled, vote extensions will be created by the application in ExtendVote,
           * passed to the application for validation in VerifyVoteExtension and given
           * to the application to use when proposing a block during PrepareProposal.
           */
          vote_extensions_enable_height?: string;
        };
      };
    };
    /** @description ABCIParams configure functionality specific to the Application Blockchain Interface. */
    "tendermint.types.ABCIParams": {
      /**
       * Format: int64
       * @description vote_extensions_enable_height configures the first height during which
       * vote extensions will be enabled. During this specified height, and for all
       * subsequent heights, precommit messages that do not contain valid extension data
       * will be considered invalid. Prior to this height, vote extensions will not
       * be used or accepted by validators on the network.
       *
       * Once enabled, vote extensions will be created by the application in ExtendVote,
       * passed to the application for validation in VerifyVoteExtension and given
       * to the application to use when proposing a block during PrepareProposal.
       */
      vote_extensions_enable_height?: string;
    };
    /** @description BlockParams contains limits on the block size. */
    "tendermint.types.BlockParams": {
      /**
       * Max block size, in bytes.
       * Note: must be greater than 0
       * Format: int64
       */
      max_bytes?: string;
      /**
       * Max gas per block.
       * Note: must be greater or equal to -1
       * Format: int64
       */
      max_gas?: string;
    };
    /**
     * @description ConsensusParams contains consensus critical parameters that determine the
     * validity of blocks.
     */
    "tendermint.types.ConsensusParams": {
      /** @description BlockParams contains limits on the block size. */
      block?: {
        /**
         * Max block size, in bytes.
         * Note: must be greater than 0
         * Format: int64
         */
        max_bytes?: string;
        /**
         * Max gas per block.
         * Note: must be greater or equal to -1
         * Format: int64
         */
        max_gas?: string;
      };
      /** @description EvidenceParams determine how we handle evidence of malfeasance. */
      evidence?: {
        /**
         * Format: int64
         * @description Max age of evidence, in blocks.
         *
         * The basic formula for calculating this is: MaxAgeDuration / {average block
         * time}.
         */
        max_age_num_blocks?: string;
        /**
         * @description Max age of evidence, in time.
         *
         * It should correspond with an app's "unbonding period" or other similar
         * mechanism for handling [Nothing-At-Stake
         * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
         */
        max_age_duration?: string;
        /**
         * This sets the maximum size of total evidence in bytes that can be committed in a single block.
         * and should fall comfortably under the max block bytes.
         * Default is 1048576 or 1MB
         * Format: int64
         */
        max_bytes?: string;
      };
      /**
       * @description ValidatorParams restrict the public key types validators can use.
       * NOTE: uses ABCI pubkey naming, not Amino names.
       */
      validator?: {
        pub_key_types?: string[];
      };
      /** @description VersionParams contains the ABCI application version. */
      version?: {
        /** Format: uint64 */
        app?: string;
      };
      /** @description ABCIParams configure functionality specific to the Application Blockchain Interface. */
      abci?: {
        /**
         * Format: int64
         * @description vote_extensions_enable_height configures the first height during which
         * vote extensions will be enabled. During this specified height, and for all
         * subsequent heights, precommit messages that do not contain valid extension data
         * will be considered invalid. Prior to this height, vote extensions will not
         * be used or accepted by validators on the network.
         *
         * Once enabled, vote extensions will be created by the application in ExtendVote,
         * passed to the application for validation in VerifyVoteExtension and given
         * to the application to use when proposing a block during PrepareProposal.
         */
        vote_extensions_enable_height?: string;
      };
    };
    /** @description EvidenceParams determine how we handle evidence of malfeasance. */
    "tendermint.types.EvidenceParams": {
      /**
       * Format: int64
       * @description Max age of evidence, in blocks.
       *
       * The basic formula for calculating this is: MaxAgeDuration / {average block
       * time}.
       */
      max_age_num_blocks?: string;
      /**
       * @description Max age of evidence, in time.
       *
       * It should correspond with an app's "unbonding period" or other similar
       * mechanism for handling [Nothing-At-Stake
       * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
       */
      max_age_duration?: string;
      /**
       * This sets the maximum size of total evidence in bytes that can be committed in a single block.
       * and should fall comfortably under the max block bytes.
       * Default is 1048576 or 1MB
       * Format: int64
       */
      max_bytes?: string;
    };
    /**
     * @description ValidatorParams restrict the public key types validators can use.
     * NOTE: uses ABCI pubkey naming, not Amino names.
     */
    "tendermint.types.ValidatorParams": {
      pub_key_types?: string[];
    };
    /** @description VersionParams contains the ABCI application version. */
    "tendermint.types.VersionParams": {
      /** Format: uint64 */
      app?: string;
    };
    /**
     * @description Config represents the configuration for a Cosmos SDK ABCI app.
     * It is intended that all state machine logic including the version of
     * baseapp and tx handlers (and possibly even Tendermint) that an app needs
     * can be described in a config object. For compatibility, the framework should
     * allow a mixture of declarative and imperative app wiring, however, apps
     * that strive for the maximum ease of maintainability should be able to describe
     * their state machine with a config object alone.
     */
    "cosmos.app.v1alpha1.Config": {
      /** @description modules are the module configurations for the app. */
      modules?: {
          /**
           * @description name is the unique name of the module within the app. It should be a name
           * that persists between different versions of a module so that modules
           * can be smoothly upgraded to new versions.
           *
           * For example, for the module cosmos.bank.module.v1.Module, we may chose
           * to simply name the module "bank" in the app. When we upgrade to
           * cosmos.bank.module.v2.Module, the app-specific name "bank" stays the same
           * and the framework knows that the v2 module should receive all the same state
           * that the v1 module had. Note: modules should provide info on which versions
           * they can migrate from in the ModuleDescriptor.can_migration_from field.
           */
          name?: string;
          /**
           * @description config is the config object for the module. Module config messages should
           * define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension.
           */
          config?: {
            /**
             * @description A URL/resource name that uniquely identifies the type of the serialized
             * protocol buffer message. This string must contain at least
             * one "/" character. The last segment of the URL's path must represent
             * the fully qualified name of the type (as in
             * `path/google.protobuf.Duration`). The name should be in a canonical form
             * (e.g., leading "." is not accepted).
             *
             * In practice, teams usually precompile into the binary all types that they
             * expect it to use in the context of Any. However, for URLs which use the
             * scheme `http`, `https`, or no scheme, one can optionally set up a type
             * server that maps type URLs to message definitions as follows:
             *
             * * If no scheme is provided, `https` is assumed.
             * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
             *   value in binary format, or produce an error.
             * * Applications are allowed to cache lookup results based on the
             *   URL, or have them precompiled into a binary to avoid any
             *   lookup. Therefore, binary compatibility needs to be preserved
             *   on changes to types. (Use versioned type names to manage
             *   breaking changes.)
             *
             * Note: this functionality is not currently available in the official
             * protobuf release, and it is not used for type URLs beginning with
             * type.googleapis.com.
             *
             * Schemes other than `http`, `https` (or the empty scheme) might be
             * used with implementation specific semantics.
             */
            type_url?: string;
            /**
             * Format: byte
             * @description Must be a valid serialized protocol buffer of the above specified type.
             */
            value?: string;
          };
          /**
           * @description golang_bindings specifies explicit interface to implementation type bindings which
           * depinject uses to resolve interface inputs to provider functions.  The scope of this
           * field's configuration is module specific.
           */
          golang_bindings?: {
              /** interface_type is the interface type which will be bound to a specific implementation type */
              interface_type?: string;
              /** implementation is the implementing type which will be supplied when an input of type interface is requested */
              implementation?: string;
            }[];
        }[];
      /**
       * @description golang_bindings specifies explicit interface to implementation type bindings which
       * depinject uses to resolve interface inputs to provider functions.  The scope of this
       * field's configuration is global (not module specific).
       */
      golang_bindings?: {
          /** interface_type is the interface type which will be bound to a specific implementation type */
          interface_type?: string;
          /** implementation is the implementing type which will be supplied when an input of type interface is requested */
          implementation?: string;
        }[];
    };
    /** @description GolangBinding is an explicit interface type to implementing type binding for dependency injection. */
    "cosmos.app.v1alpha1.GolangBinding": {
      /** interface_type is the interface type which will be bound to a specific implementation type */
      interface_type?: string;
      /** implementation is the implementing type which will be supplied when an input of type interface is requested */
      implementation?: string;
    };
    /** @description ModuleConfig is a module configuration for an app. */
    "cosmos.app.v1alpha1.ModuleConfig": {
      /**
       * @description name is the unique name of the module within the app. It should be a name
       * that persists between different versions of a module so that modules
       * can be smoothly upgraded to new versions.
       *
       * For example, for the module cosmos.bank.module.v1.Module, we may chose
       * to simply name the module "bank" in the app. When we upgrade to
       * cosmos.bank.module.v2.Module, the app-specific name "bank" stays the same
       * and the framework knows that the v2 module should receive all the same state
       * that the v1 module had. Note: modules should provide info on which versions
       * they can migrate from in the ModuleDescriptor.can_migration_from field.
       */
      name?: string;
      /**
       * @description config is the config object for the module. Module config messages should
       * define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension.
       */
      config?: {
        /**
         * @description A URL/resource name that uniquely identifies the type of the serialized
         * protocol buffer message. This string must contain at least
         * one "/" character. The last segment of the URL's path must represent
         * the fully qualified name of the type (as in
         * `path/google.protobuf.Duration`). The name should be in a canonical form
         * (e.g., leading "." is not accepted).
         *
         * In practice, teams usually precompile into the binary all types that they
         * expect it to use in the context of Any. However, for URLs which use the
         * scheme `http`, `https`, or no scheme, one can optionally set up a type
         * server that maps type URLs to message definitions as follows:
         *
         * * If no scheme is provided, `https` is assumed.
         * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
         *   value in binary format, or produce an error.
         * * Applications are allowed to cache lookup results based on the
         *   URL, or have them precompiled into a binary to avoid any
         *   lookup. Therefore, binary compatibility needs to be preserved
         *   on changes to types. (Use versioned type names to manage
         *   breaking changes.)
         *
         * Note: this functionality is not currently available in the official
         * protobuf release, and it is not used for type URLs beginning with
         * type.googleapis.com.
         *
         * Schemes other than `http`, `https` (or the empty scheme) might be
         * used with implementation specific semantics.
         */
        type_url?: string;
        /**
         * Format: byte
         * @description Must be a valid serialized protocol buffer of the above specified type.
         */
        value?: string;
      };
      /**
       * @description golang_bindings specifies explicit interface to implementation type bindings which
       * depinject uses to resolve interface inputs to provider functions.  The scope of this
       * field's configuration is module specific.
       */
      golang_bindings?: {
          /** interface_type is the interface type which will be bound to a specific implementation type */
          interface_type?: string;
          /** implementation is the implementing type which will be supplied when an input of type interface is requested */
          implementation?: string;
        }[];
    };
    /** @description QueryConfigRequest is the Query/Config response type. */
    "cosmos.app.v1alpha1.QueryConfigResponse": {
      /** @description config is the current app config. */
      config?: {
        /** @description modules are the module configurations for the app. */
        modules?: {
            /**
             * @description name is the unique name of the module within the app. It should be a name
             * that persists between different versions of a module so that modules
             * can be smoothly upgraded to new versions.
             *
             * For example, for the module cosmos.bank.module.v1.Module, we may chose
             * to simply name the module "bank" in the app. When we upgrade to
             * cosmos.bank.module.v2.Module, the app-specific name "bank" stays the same
             * and the framework knows that the v2 module should receive all the same state
             * that the v1 module had. Note: modules should provide info on which versions
             * they can migrate from in the ModuleDescriptor.can_migration_from field.
             */
            name?: string;
            /**
             * @description config is the config object for the module. Module config messages should
             * define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension.
             */
            config?: {
              /**
               * @description A URL/resource name that uniquely identifies the type of the serialized
               * protocol buffer message. This string must contain at least
               * one "/" character. The last segment of the URL's path must represent
               * the fully qualified name of the type (as in
               * `path/google.protobuf.Duration`). The name should be in a canonical form
               * (e.g., leading "." is not accepted).
               *
               * In practice, teams usually precompile into the binary all types that they
               * expect it to use in the context of Any. However, for URLs which use the
               * scheme `http`, `https`, or no scheme, one can optionally set up a type
               * server that maps type URLs to message definitions as follows:
               *
               * * If no scheme is provided, `https` is assumed.
               * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
               *   value in binary format, or produce an error.
               * * Applications are allowed to cache lookup results based on the
               *   URL, or have them precompiled into a binary to avoid any
               *   lookup. Therefore, binary compatibility needs to be preserved
               *   on changes to types. (Use versioned type names to manage
               *   breaking changes.)
               *
               * Note: this functionality is not currently available in the official
               * protobuf release, and it is not used for type URLs beginning with
               * type.googleapis.com.
               *
               * Schemes other than `http`, `https` (or the empty scheme) might be
               * used with implementation specific semantics.
               */
              type_url?: string;
              /**
               * Format: byte
               * @description Must be a valid serialized protocol buffer of the above specified type.
               */
              value?: string;
            };
            /**
             * @description golang_bindings specifies explicit interface to implementation type bindings which
             * depinject uses to resolve interface inputs to provider functions.  The scope of this
             * field's configuration is module specific.
             */
            golang_bindings?: {
                /** interface_type is the interface type which will be bound to a specific implementation type */
                interface_type?: string;
                /** implementation is the implementing type which will be supplied when an input of type interface is requested */
                implementation?: string;
              }[];
          }[];
        /**
         * @description golang_bindings specifies explicit interface to implementation type bindings which
         * depinject uses to resolve interface inputs to provider functions.  The scope of this
         * field's configuration is global (not module specific).
         */
        golang_bindings?: {
            /** interface_type is the interface type which will be bound to a specific implementation type */
            interface_type?: string;
            /** implementation is the implementing type which will be supplied when an input of type interface is requested */
            implementation?: string;
          }[];
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * AccountInfo queries account info which is common to all account types.
   * @description Since: cosmos-sdk 0.47
   */
  AccountInfo: {
    parameters: {
      path: {
        /** @description address is the account address string. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description info is the account info which is represented by BaseAccount. */
            info?: {
              address?: string;
              /**
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              pub_key?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
              /** Format: uint64 */
              account_number?: string;
              /** Format: uint64 */
              sequence?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Accounts returns all the existing accounts.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * Since: cosmos-sdk 0.43
   */
  Accounts: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** accounts are the existing accounts */
            accounts?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Account returns account details based on address. */
  Account: {
    parameters: {
      path: {
        /** @description address defines the address to query for. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description `Any` contains an arbitrary serialized protocol buffer message along with a
             * URL that describes the type of the serialized message.
             *
             * Protobuf library provides support to pack/unpack Any values in the form
             * of utility functions or additional generated methods of the Any type.
             *
             * Example 1: Pack and unpack a message in C++.
             *
             *     Foo foo = ...;
             *     Any any;
             *     any.PackFrom(foo);
             *     ...
             *     if (any.UnpackTo(&foo)) {
             *       ...
             *     }
             *
             * Example 2: Pack and unpack a message in Java.
             *
             *     Foo foo = ...;
             *     Any any = Any.pack(foo);
             *     ...
             *     if (any.is(Foo.class)) {
             *       foo = any.unpack(Foo.class);
             *     }
             *     // or ...
             *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
             *       foo = any.unpack(Foo.getDefaultInstance());
             *     }
             *
             * Example 3: Pack and unpack a message in Python.
             *
             *     foo = Foo(...)
             *     any = Any()
             *     any.Pack(foo)
             *     ...
             *     if any.Is(Foo.DESCRIPTOR):
             *       any.Unpack(foo)
             *       ...
             *
             * Example 4: Pack and unpack a message in Go
             *
             *      foo := &pb.Foo{...}
             *      any, err := anypb.New(foo)
             *      if err != nil {
             *        ...
             *      }
             *      ...
             *      foo := &pb.Foo{}
             *      if err := any.UnmarshalTo(foo); err != nil {
             *        ...
             *      }
             *
             * The pack methods provided by protobuf library will by default use
             * 'type.googleapis.com/full.type.name' as the type URL and the unpack
             * methods only use the fully qualified type name after the last '/'
             * in the type URL, for example "foo.bar.com/x/y.z" will yield type
             * name "y.z".
             *
             * JSON
             *
             * The JSON representation of an `Any` value uses the regular
             * representation of the deserialized, embedded message, with an
             * additional field `@type` which contains the type URL. Example:
             *
             *     package google.profile;
             *     message Person {
             *       string first_name = 1;
             *       string last_name = 2;
             *     }
             *
             *     {
             *       "@type": "type.googleapis.com/google.profile.Person",
             *       "firstName": <string>,
             *       "lastName": <string>
             *     }
             *
             * If the embedded message type is well-known and has a custom JSON
             * representation, that representation will be embedded adding a field
             * `value` which holds the custom JSON in addition to the `@type`
             * field. Example (for message [google.protobuf.Duration][]):
             *
             *     {
             *       "@type": "type.googleapis.com/google.protobuf.Duration",
             *       "value": "1.212s"
             *     }
             */
            account?: {
              /**
               * @description A URL/resource name that uniquely identifies the type of the serialized
               * protocol buffer message. This string must contain at least
               * one "/" character. The last segment of the URL's path must represent
               * the fully qualified name of the type (as in
               * `path/google.protobuf.Duration`). The name should be in a canonical form
               * (e.g., leading "." is not accepted).
               *
               * In practice, teams usually precompile into the binary all types that they
               * expect it to use in the context of Any. However, for URLs which use the
               * scheme `http`, `https`, or no scheme, one can optionally set up a type
               * server that maps type URLs to message definitions as follows:
               *
               * * If no scheme is provided, `https` is assumed.
               * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
               *   value in binary format, or produce an error.
               * * Applications are allowed to cache lookup results based on the
               *   URL, or have them precompiled into a binary to avoid any
               *   lookup. Therefore, binary compatibility needs to be preserved
               *   on changes to types. (Use versioned type names to manage
               *   breaking changes.)
               *
               * Note: this functionality is not currently available in the official
               * protobuf release, and it is not used for type URLs beginning with
               * type.googleapis.com.
               *
               * Schemes other than `http`, `https` (or the empty scheme) might be
               * used with implementation specific semantics.
               */
              type_url?: string;
              /**
               * Format: byte
               * @description Must be a valid serialized protocol buffer of the above specified type.
               */
              value?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * AccountAddressByID returns account address based on account number.
   * @description Since: cosmos-sdk 0.46.2
   */
  AccountAddressByID: {
    parameters: {
      query?: {
        /**
         * @description account_id is the account number of the address to be queried.
         *
         * Since: cosmos-sdk 0.47
         */
        account_id?: string;
      };
      path: {
        /**
         * @description Deprecated, use account_id instead
         *
         * id is the account number of the address to be queried. This field
         * should have been an uint64 (like all account numbers), and will be
         * updated to uint64 in a future version of the auth query.
         */
        id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            account_address?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Bech32Prefix queries bech32Prefix
   * @description Since: cosmos-sdk 0.46
   */
  Bech32Prefix: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            bech32_prefix?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * AddressBytesToString converts Account Address bytes to string
   * @description Since: cosmos-sdk 0.46
   */
  AddressBytesToString: {
    parameters: {
      path: {
        address_bytes: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            address_string?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * AddressStringToBytes converts Address string to bytes
   * @description Since: cosmos-sdk 0.46
   */
  AddressStringToBytes: {
    parameters: {
      path: {
        address_string: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** Format: byte */
            address_bytes?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * ModuleAccounts returns all the existing module accounts.
   * @description Since: cosmos-sdk 0.46
   */
  ModuleAccounts: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            accounts?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** ModuleAccountByName returns the module account info by module name */
  ModuleAccountByName: {
    parameters: {
      path: {
        name: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description `Any` contains an arbitrary serialized protocol buffer message along with a
             * URL that describes the type of the serialized message.
             *
             * Protobuf library provides support to pack/unpack Any values in the form
             * of utility functions or additional generated methods of the Any type.
             *
             * Example 1: Pack and unpack a message in C++.
             *
             *     Foo foo = ...;
             *     Any any;
             *     any.PackFrom(foo);
             *     ...
             *     if (any.UnpackTo(&foo)) {
             *       ...
             *     }
             *
             * Example 2: Pack and unpack a message in Java.
             *
             *     Foo foo = ...;
             *     Any any = Any.pack(foo);
             *     ...
             *     if (any.is(Foo.class)) {
             *       foo = any.unpack(Foo.class);
             *     }
             *     // or ...
             *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
             *       foo = any.unpack(Foo.getDefaultInstance());
             *     }
             *
             * Example 3: Pack and unpack a message in Python.
             *
             *     foo = Foo(...)
             *     any = Any()
             *     any.Pack(foo)
             *     ...
             *     if any.Is(Foo.DESCRIPTOR):
             *       any.Unpack(foo)
             *       ...
             *
             * Example 4: Pack and unpack a message in Go
             *
             *      foo := &pb.Foo{...}
             *      any, err := anypb.New(foo)
             *      if err != nil {
             *        ...
             *      }
             *      ...
             *      foo := &pb.Foo{}
             *      if err := any.UnmarshalTo(foo); err != nil {
             *        ...
             *      }
             *
             * The pack methods provided by protobuf library will by default use
             * 'type.googleapis.com/full.type.name' as the type URL and the unpack
             * methods only use the fully qualified type name after the last '/'
             * in the type URL, for example "foo.bar.com/x/y.z" will yield type
             * name "y.z".
             *
             * JSON
             *
             * The JSON representation of an `Any` value uses the regular
             * representation of the deserialized, embedded message, with an
             * additional field `@type` which contains the type URL. Example:
             *
             *     package google.profile;
             *     message Person {
             *       string first_name = 1;
             *       string last_name = 2;
             *     }
             *
             *     {
             *       "@type": "type.googleapis.com/google.profile.Person",
             *       "firstName": <string>,
             *       "lastName": <string>
             *     }
             *
             * If the embedded message type is well-known and has a custom JSON
             * representation, that representation will be embedded adding a field
             * `value` which holds the custom JSON in addition to the `@type`
             * field. Example (for message [google.protobuf.Duration][]):
             *
             *     {
             *       "@type": "type.googleapis.com/google.protobuf.Duration",
             *       "value": "1.212s"
             *     }
             */
            account?: {
              /**
               * @description A URL/resource name that uniquely identifies the type of the serialized
               * protocol buffer message. This string must contain at least
               * one "/" character. The last segment of the URL's path must represent
               * the fully qualified name of the type (as in
               * `path/google.protobuf.Duration`). The name should be in a canonical form
               * (e.g., leading "." is not accepted).
               *
               * In practice, teams usually precompile into the binary all types that they
               * expect it to use in the context of Any. However, for URLs which use the
               * scheme `http`, `https`, or no scheme, one can optionally set up a type
               * server that maps type URLs to message definitions as follows:
               *
               * * If no scheme is provided, `https` is assumed.
               * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
               *   value in binary format, or produce an error.
               * * Applications are allowed to cache lookup results based on the
               *   URL, or have them precompiled into a binary to avoid any
               *   lookup. Therefore, binary compatibility needs to be preserved
               *   on changes to types. (Use versioned type names to manage
               *   breaking changes.)
               *
               * Note: this functionality is not currently available in the official
               * protobuf release, and it is not used for type URLs beginning with
               * type.googleapis.com.
               *
               * Schemes other than `http`, `https` (or the empty scheme) might be
               * used with implementation specific semantics.
               */
              type_url?: string;
              /**
               * Format: byte
               * @description Must be a valid serialized protocol buffer of the above specified type.
               */
              value?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Params queries all parameters. */
  AuthParams: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description params defines the parameters of the module. */
            params?: {
              /** Format: uint64 */
              max_memo_characters?: string;
              /** Format: uint64 */
              tx_sig_limit?: string;
              /** Format: uint64 */
              tx_size_cost_per_byte?: string;
              /** Format: uint64 */
              sig_verify_cost_ed25519?: string;
              /** Format: uint64 */
              sig_verify_cost_secp256k1?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * AllBalances queries the balance of all coins for a single account.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  AllBalances: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
        /**
         * @description resolve_denom is the flag to resolve the denom into a human-readable form from the metadata.
         *
         * Since: cosmos-sdk 0.50
         */
        resolve_denom?: boolean;
      };
      path: {
        /** @description address is the address to query balances for. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description balances is the balances of all the coins. */
            balances?: {
                denom?: string;
                amount?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Balance queries the balance of a single coin for a single account. */
  Balance: {
    parameters: {
      query?: {
        /** @description denom is the coin denom to query balances for. */
        denom?: string;
      };
      path: {
        /** @description address is the address to query balances for. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Coin defines a token with a denomination and an amount.
             *
             * NOTE: The amount field is an Int which implements the custom method
             * signatures required by gogoproto.
             */
            balance?: {
              denom?: string;
              amount?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * DenomOwners queries for all account addresses that own a particular token
   * denomination.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * Since: cosmos-sdk 0.46
   */
  DenomOwners: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description denom defines the coin denomination to query all account holders for. */
        denom: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            denom_owners?: {
                /** @description address defines the address that owns a particular denomination. */
                address?: string;
                /**
                 * @description Coin defines a token with a denomination and an amount.
                 *
                 * NOTE: The amount field is an Int which implements the custom method
                 * signatures required by gogoproto.
                 */
                balance?: {
                  denom?: string;
                  amount?: string;
                };
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * DenomsMetadata queries the client metadata for all registered coin
   * denominations.
   */
  DenomsMetadata: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description metadata provides the client information for all the registered tokens. */
            metadatas?: {
                description?: string;
                /** denom_units represents the list of DenomUnit's for a given coin */
                denom_units?: {
                    /** @description denom represents the string name of the given denom unit (e.g uatom). */
                    denom?: string;
                    /**
                     * Format: int64
                     * @description exponent represents power of 10 exponent that one must
                     * raise the base_denom to in order to equal the given DenomUnit's denom
                     * 1 denom = 10^exponent base_denom
                     * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                     * exponent = 6, thus: 1 atom = 10^6 uatom).
                     */
                    exponent?: number;
                    /** aliases is a list of string aliases for the given denom */
                    aliases?: string[];
                  }[];
                /** @description base represents the base denom (should be the DenomUnit with exponent = 0). */
                base?: string;
                /**
                 * @description display indicates the suggested denom that should be
                 * displayed in clients.
                 */
                display?: string;
                /**
                 * name defines the name of the token (eg: Cosmos Atom)
                 * @description Since: cosmos-sdk 0.43
                 */
                name?: string;
                /**
                 * @description symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
                 * be the same as the display.
                 *
                 * Since: cosmos-sdk 0.43
                 */
                symbol?: string;
                /**
                 * @description URI to a document (on or off-chain) that contains additional information. Optional.
                 *
                 * Since: cosmos-sdk 0.46
                 */
                uri?: string;
                /**
                 * @description URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
                 * the document didn't change. Optional.
                 *
                 * Since: cosmos-sdk 0.46
                 */
                uri_hash?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** DenomsMetadata queries the client metadata of a given coin denomination. */
  DenomMetadata: {
    parameters: {
      path: {
        /** @description denom is the coin denom to query the metadata for. */
        denom: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Metadata represents a struct that describes
             * a basic token.
             */
            metadata?: {
              description?: string;
              /** denom_units represents the list of DenomUnit's for a given coin */
              denom_units?: {
                  /** @description denom represents the string name of the given denom unit (e.g uatom). */
                  denom?: string;
                  /**
                   * Format: int64
                   * @description exponent represents power of 10 exponent that one must
                   * raise the base_denom to in order to equal the given DenomUnit's denom
                   * 1 denom = 10^exponent base_denom
                   * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                   * exponent = 6, thus: 1 atom = 10^6 uatom).
                   */
                  exponent?: number;
                  /** aliases is a list of string aliases for the given denom */
                  aliases?: string[];
                }[];
              /** @description base represents the base denom (should be the DenomUnit with exponent = 0). */
              base?: string;
              /**
               * @description display indicates the suggested denom that should be
               * displayed in clients.
               */
              display?: string;
              /**
               * name defines the name of the token (eg: Cosmos Atom)
               * @description Since: cosmos-sdk 0.43
               */
              name?: string;
              /**
               * @description symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
               * be the same as the display.
               *
               * Since: cosmos-sdk 0.43
               */
              symbol?: string;
              /**
               * @description URI to a document (on or off-chain) that contains additional information. Optional.
               *
               * Since: cosmos-sdk 0.46
               */
              uri?: string;
              /**
               * @description URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
               * the document didn't change. Optional.
               *
               * Since: cosmos-sdk 0.46
               */
              uri_hash?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** DenomsMetadata queries the client metadata of a given coin denomination. */
  DenomMetadataByQueryString: {
    parameters?: {
      query?: {
        /** @description denom is the coin denom to query the metadata for. */
        denom?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Metadata represents a struct that describes
             * a basic token.
             */
            metadata?: {
              description?: string;
              /** denom_units represents the list of DenomUnit's for a given coin */
              denom_units?: {
                  /** @description denom represents the string name of the given denom unit (e.g uatom). */
                  denom?: string;
                  /**
                   * Format: int64
                   * @description exponent represents power of 10 exponent that one must
                   * raise the base_denom to in order to equal the given DenomUnit's denom
                   * 1 denom = 10^exponent base_denom
                   * (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with
                   * exponent = 6, thus: 1 atom = 10^6 uatom).
                   */
                  exponent?: number;
                  /** aliases is a list of string aliases for the given denom */
                  aliases?: string[];
                }[];
              /** @description base represents the base denom (should be the DenomUnit with exponent = 0). */
              base?: string;
              /**
               * @description display indicates the suggested denom that should be
               * displayed in clients.
               */
              display?: string;
              /**
               * name defines the name of the token (eg: Cosmos Atom)
               * @description Since: cosmos-sdk 0.43
               */
              name?: string;
              /**
               * @description symbol is the token symbol usually shown on exchanges (eg: ATOM). This can
               * be the same as the display.
               *
               * Since: cosmos-sdk 0.43
               */
              symbol?: string;
              /**
               * @description URI to a document (on or off-chain) that contains additional information. Optional.
               *
               * Since: cosmos-sdk 0.46
               */
              uri?: string;
              /**
               * @description URIHash is a sha256 hash of a document pointed by URI. It's used to verify that
               * the document didn't change. Optional.
               *
               * Since: cosmos-sdk 0.46
               */
              uri_hash?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Params queries the parameters of x/bank module. */
  BankParams: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description params provides the parameters of the bank module. */
            params?: {
              /**
               * @description Deprecated: Use of SendEnabled in params is deprecated.
               * For genesis, use the newly added send_enabled field in the genesis object.
               * Storage, lookup, and manipulation of this information is now in the keeper.
               *
               * As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
               */
              send_enabled?: {
                  denom?: string;
                  enabled?: boolean;
                }[];
              default_send_enabled?: boolean;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * SendEnabled queries for SendEnabled entries.
   * @description This query only returns denominations that have specific SendEnabled settings.
   * Any denomination that does not have a specific setting will use the default
   * params.default_send_enabled, and will not be returned by this query.
   *
   * Since: cosmos-sdk 0.47
   */
  SendEnabled: {
    parameters?: {
      query?: {
        /** @description denoms is the specific denoms you want look up. Leave empty to get all entries. */
        denoms?: string[];
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            send_enabled?: {
                denom?: string;
                enabled?: boolean;
              }[];
            /**
             * @description pagination defines the pagination in the response. This field is only
             * populated if the denoms field in the request is empty.
             */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * SpendableBalances queries the spendable balance of all coins for a single
   * account.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * Since: cosmos-sdk 0.46
   */
  SpendableBalances: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description address is the address to query spendable balances for. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description balances is the spendable balances of all the coins. */
            balances?: {
                denom?: string;
                amount?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * SpendableBalanceByDenom queries the spendable balance of a single denom for
   * a single account.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * Since: cosmos-sdk 0.47
   */
  SpendableBalanceByDenom: {
    parameters: {
      query?: {
        /** @description denom is the coin denom to query balances for. */
        denom?: string;
      };
      path: {
        /** @description address is the address to query balances for. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Coin defines a token with a denomination and an amount.
             *
             * NOTE: The amount field is an Int which implements the custom method
             * signatures required by gogoproto.
             */
            balance?: {
              denom?: string;
              amount?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * TotalSupply queries the total supply of all coins.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  TotalSupply: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** supply is the supply of the coins */
            supply?: {
                denom?: string;
                amount?: string;
              }[];
            /**
             * @description pagination defines the pagination in the response.
             *
             * Since: cosmos-sdk 0.43
             */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * SupplyOf queries the supply of a single coin.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  SupplyOf: {
    parameters?: {
      query?: {
        /** @description denom is the coin denom to query balances for. */
        denom?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Coin defines a token with a denomination and an amount.
             *
             * NOTE: The amount field is an Int which implements the custom method
             * signatures required by gogoproto.
             */
            amount?: {
              denom?: string;
              amount?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * ABCIQuery defines a query handler that supports ABCI queries directly to the
   * application, bypassing Tendermint completely. The ABCI query must contain
   * a valid and supported path, including app, custom, p2p, and store.
   * @description Since: cosmos-sdk 0.46
   */
  ABCIQuery: {
    parameters?: {
      query?: {
        data?: string;
        path?: string;
        height?: string;
        prove?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** Format: int64 */
            code?: number;
            log?: string;
            info?: string;
            /** Format: int64 */
            index?: string;
            /** Format: byte */
            key?: string;
            /** Format: byte */
            value?: string;
            /**
             * @description ProofOps is Merkle proof defined by the list of ProofOps.
             *
             * Note: This type is a duplicate of the ProofOps proto type defined in Tendermint.
             */
            proof_ops?: {
              ops?: {
                  type?: string;
                  /** Format: byte */
                  key?: string;
                  /** Format: byte */
                  data?: string;
                }[];
            };
            /** Format: int64 */
            height?: string;
            codespace?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GetLatestBlock returns the latest block. */
  GetLatestBlock: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** BlockID */
            block_id?: {
              /** Format: byte */
              hash?: string;
              /** PartsetHeader */
              part_set_header?: {
                /** Format: int64 */
                total?: number;
                /** Format: byte */
                hash?: string;
              };
            };
            /** Deprecated: please use `sdk_block` instead */
            block?: {
              /** @description Header defines the structure of a block header. */
              header?: {
                /**
                 * basic block info
                 * @description Consensus captures the consensus rules for processing a block in the blockchain,
                 * including all blockchain data structures and the rules of the application's
                 * state transition machine.
                 */
                version?: {
                  /** Format: uint64 */
                  block?: string;
                  /** Format: uint64 */
                  app?: string;
                };
                chain_id?: string;
                /** Format: int64 */
                height?: string;
                /** Format: date-time */
                time?: string;
                /** BlockID */
                last_block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /**
                 * hashes of block data
                 * Format: byte
                 */
                last_commit_hash?: string;
                /** Format: byte */
                data_hash?: string;
                /**
                 * hashes from the app output from the prev block
                 * Format: byte
                 */
                validators_hash?: string;
                /** Format: byte */
                next_validators_hash?: string;
                /** Format: byte */
                consensus_hash?: string;
                /** Format: byte */
                app_hash?: string;
                /** Format: byte */
                last_results_hash?: string;
                /**
                 * consensus info
                 * Format: byte
                 */
                evidence_hash?: string;
                /** Format: byte */
                proposer_address?: string;
              };
              /** Data contains the set of transactions included in the block */
              data?: {
                /**
                 * @description Txs that will be applied by state @ block.Height+1.
                 * NOTE: not all txs here are valid.  We're just agreeing on the order first.
                 * This means that block.AppHash does not include these txs.
                 */
                txs?: string[];
              };
              evidence?: {
                evidence?: ({
                    /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
                    duplicate_vote_evidence?: {
                      /**
                       * @description Vote represents a prevote or precommit vote from validators for
                       * consensus.
                       */
                      vote_a?: {
                        /**
                         * @description SignedMsgType is a type of signed message in the consensus.
                         *
                         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                         * @default SIGNED_MSG_TYPE_UNKNOWN
                         * @enum {string}
                         */
                        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                        /** Format: int64 */
                        height?: string;
                        /** Format: int32 */
                        round?: number;
                        /** BlockID */
                        block_id?: {
                          /** Format: byte */
                          hash?: string;
                          /** PartsetHeader */
                          part_set_header?: {
                            /** Format: int64 */
                            total?: number;
                            /** Format: byte */
                            hash?: string;
                          };
                        };
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: int32 */
                        validator_index?: number;
                        /**
                         * Format: byte
                         * @description Vote signature by the validator if they participated in consensus for the
                         * associated block.
                         */
                        signature?: string;
                        /**
                         * Format: byte
                         * @description Vote extension provided by the application. Only valid for precommit
                         * messages.
                         */
                        extension?: string;
                        /**
                         * Format: byte
                         * @description Vote extension signature by the validator if they participated in
                         * consensus for the associated block.
                         * Only valid for precommit messages.
                         */
                        extension_signature?: string;
                      };
                      /**
                       * @description Vote represents a prevote or precommit vote from validators for
                       * consensus.
                       */
                      vote_b?: {
                        /**
                         * @description SignedMsgType is a type of signed message in the consensus.
                         *
                         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                         * @default SIGNED_MSG_TYPE_UNKNOWN
                         * @enum {string}
                         */
                        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                        /** Format: int64 */
                        height?: string;
                        /** Format: int32 */
                        round?: number;
                        /** BlockID */
                        block_id?: {
                          /** Format: byte */
                          hash?: string;
                          /** PartsetHeader */
                          part_set_header?: {
                            /** Format: int64 */
                            total?: number;
                            /** Format: byte */
                            hash?: string;
                          };
                        };
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: int32 */
                        validator_index?: number;
                        /**
                         * Format: byte
                         * @description Vote signature by the validator if they participated in consensus for the
                         * associated block.
                         */
                        signature?: string;
                        /**
                         * Format: byte
                         * @description Vote extension provided by the application. Only valid for precommit
                         * messages.
                         */
                        extension?: string;
                        /**
                         * Format: byte
                         * @description Vote extension signature by the validator if they participated in
                         * consensus for the associated block.
                         * Only valid for precommit messages.
                         */
                        extension_signature?: string;
                      };
                      /** Format: int64 */
                      total_voting_power?: string;
                      /** Format: int64 */
                      validator_power?: string;
                      /** Format: date-time */
                      timestamp?: string;
                    };
                    /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
                    light_client_attack_evidence?: {
                      conflicting_block?: {
                        signed_header?: {
                          /** @description Header defines the structure of a block header. */
                          header?: {
                            /**
                             * basic block info
                             * @description Consensus captures the consensus rules for processing a block in the blockchain,
                             * including all blockchain data structures and the rules of the application's
                             * state transition machine.
                             */
                            version?: {
                              /** Format: uint64 */
                              block?: string;
                              /** Format: uint64 */
                              app?: string;
                            };
                            chain_id?: string;
                            /** Format: int64 */
                            height?: string;
                            /** Format: date-time */
                            time?: string;
                            /** BlockID */
                            last_block_id?: {
                              /** Format: byte */
                              hash?: string;
                              /** PartsetHeader */
                              part_set_header?: {
                                /** Format: int64 */
                                total?: number;
                                /** Format: byte */
                                hash?: string;
                              };
                            };
                            /**
                             * hashes of block data
                             * Format: byte
                             */
                            last_commit_hash?: string;
                            /** Format: byte */
                            data_hash?: string;
                            /**
                             * hashes from the app output from the prev block
                             * Format: byte
                             */
                            validators_hash?: string;
                            /** Format: byte */
                            next_validators_hash?: string;
                            /** Format: byte */
                            consensus_hash?: string;
                            /** Format: byte */
                            app_hash?: string;
                            /** Format: byte */
                            last_results_hash?: string;
                            /**
                             * consensus info
                             * Format: byte
                             */
                            evidence_hash?: string;
                            /** Format: byte */
                            proposer_address?: string;
                          };
                          /** @description Commit contains the evidence that a block was committed by a set of validators. */
                          commit?: {
                            /** Format: int64 */
                            height?: string;
                            /** Format: int32 */
                            round?: number;
                            /** BlockID */
                            block_id?: {
                              /** Format: byte */
                              hash?: string;
                              /** PartsetHeader */
                              part_set_header?: {
                                /** Format: int64 */
                                total?: number;
                                /** Format: byte */
                                hash?: string;
                              };
                            };
                            signatures?: ({
                                /**
                                 * BlockIdFlag indicates which BlockID the signature is for
                                 * @default BLOCK_ID_FLAG_UNKNOWN
                                 * @enum {string}
                                 */
                                block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                                /** Format: byte */
                                validator_address?: string;
                                /** Format: date-time */
                                timestamp?: string;
                                /** Format: byte */
                                signature?: string;
                              })[];
                          };
                        };
                        validator_set?: {
                          validators?: {
                              /** Format: byte */
                              address?: string;
                              /** PublicKey defines the keys available for use with Validators */
                              pub_key?: {
                                /** Format: byte */
                                ed25519?: string;
                                /** Format: byte */
                                secp256k1?: string;
                              };
                              /** Format: int64 */
                              voting_power?: string;
                              /** Format: int64 */
                              proposer_priority?: string;
                            }[];
                          proposer?: {
                            /** Format: byte */
                            address?: string;
                            /** PublicKey defines the keys available for use with Validators */
                            pub_key?: {
                              /** Format: byte */
                              ed25519?: string;
                              /** Format: byte */
                              secp256k1?: string;
                            };
                            /** Format: int64 */
                            voting_power?: string;
                            /** Format: int64 */
                            proposer_priority?: string;
                          };
                          /** Format: int64 */
                          total_voting_power?: string;
                        };
                      };
                      /** Format: int64 */
                      common_height?: string;
                      byzantine_validators?: {
                          /** Format: byte */
                          address?: string;
                          /** PublicKey defines the keys available for use with Validators */
                          pub_key?: {
                            /** Format: byte */
                            ed25519?: string;
                            /** Format: byte */
                            secp256k1?: string;
                          };
                          /** Format: int64 */
                          voting_power?: string;
                          /** Format: int64 */
                          proposer_priority?: string;
                        }[];
                      /** Format: int64 */
                      total_voting_power?: string;
                      /** Format: date-time */
                      timestamp?: string;
                    };
                  })[];
              };
              /** @description Commit contains the evidence that a block was committed by a set of validators. */
              last_commit?: {
                /** Format: int64 */
                height?: string;
                /** Format: int32 */
                round?: number;
                /** BlockID */
                block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                signatures?: ({
                    /**
                     * BlockIdFlag indicates which BlockID the signature is for
                     * @default BLOCK_ID_FLAG_UNKNOWN
                     * @enum {string}
                     */
                    block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                    /** Format: byte */
                    validator_address?: string;
                    /** Format: date-time */
                    timestamp?: string;
                    /** Format: byte */
                    signature?: string;
                  })[];
              };
            };
            /**
             * Since: cosmos-sdk 0.47
             * @description Block is tendermint type Block, with the Header proposer address
             * field converted to bech32 string.
             */
            sdk_block?: {
              /** @description Header defines the structure of a Tendermint block header. */
              header?: {
                /**
                 * basic block info
                 * @description Consensus captures the consensus rules for processing a block in the blockchain,
                 * including all blockchain data structures and the rules of the application's
                 * state transition machine.
                 */
                version?: {
                  /** Format: uint64 */
                  block?: string;
                  /** Format: uint64 */
                  app?: string;
                };
                chain_id?: string;
                /** Format: int64 */
                height?: string;
                /** Format: date-time */
                time?: string;
                /** BlockID */
                last_block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /**
                 * hashes of block data
                 * Format: byte
                 */
                last_commit_hash?: string;
                /** Format: byte */
                data_hash?: string;
                /**
                 * hashes from the app output from the prev block
                 * Format: byte
                 */
                validators_hash?: string;
                /** Format: byte */
                next_validators_hash?: string;
                /** Format: byte */
                consensus_hash?: string;
                /** Format: byte */
                app_hash?: string;
                /** Format: byte */
                last_results_hash?: string;
                /**
                 * consensus info
                 * Format: byte
                 */
                evidence_hash?: string;
                /**
                 * @description proposer_address is the original block proposer address, formatted as a Bech32 string.
                 * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                 * for better UX.
                 */
                proposer_address?: string;
              };
              /** Data contains the set of transactions included in the block */
              data?: {
                /**
                 * @description Txs that will be applied by state @ block.Height+1.
                 * NOTE: not all txs here are valid.  We're just agreeing on the order first.
                 * This means that block.AppHash does not include these txs.
                 */
                txs?: string[];
              };
              evidence?: {
                evidence?: ({
                    /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
                    duplicate_vote_evidence?: {
                      /**
                       * @description Vote represents a prevote or precommit vote from validators for
                       * consensus.
                       */
                      vote_a?: {
                        /**
                         * @description SignedMsgType is a type of signed message in the consensus.
                         *
                         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                         * @default SIGNED_MSG_TYPE_UNKNOWN
                         * @enum {string}
                         */
                        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                        /** Format: int64 */
                        height?: string;
                        /** Format: int32 */
                        round?: number;
                        /** BlockID */
                        block_id?: {
                          /** Format: byte */
                          hash?: string;
                          /** PartsetHeader */
                          part_set_header?: {
                            /** Format: int64 */
                            total?: number;
                            /** Format: byte */
                            hash?: string;
                          };
                        };
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: int32 */
                        validator_index?: number;
                        /**
                         * Format: byte
                         * @description Vote signature by the validator if they participated in consensus for the
                         * associated block.
                         */
                        signature?: string;
                        /**
                         * Format: byte
                         * @description Vote extension provided by the application. Only valid for precommit
                         * messages.
                         */
                        extension?: string;
                        /**
                         * Format: byte
                         * @description Vote extension signature by the validator if they participated in
                         * consensus for the associated block.
                         * Only valid for precommit messages.
                         */
                        extension_signature?: string;
                      };
                      /**
                       * @description Vote represents a prevote or precommit vote from validators for
                       * consensus.
                       */
                      vote_b?: {
                        /**
                         * @description SignedMsgType is a type of signed message in the consensus.
                         *
                         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                         * @default SIGNED_MSG_TYPE_UNKNOWN
                         * @enum {string}
                         */
                        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                        /** Format: int64 */
                        height?: string;
                        /** Format: int32 */
                        round?: number;
                        /** BlockID */
                        block_id?: {
                          /** Format: byte */
                          hash?: string;
                          /** PartsetHeader */
                          part_set_header?: {
                            /** Format: int64 */
                            total?: number;
                            /** Format: byte */
                            hash?: string;
                          };
                        };
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: int32 */
                        validator_index?: number;
                        /**
                         * Format: byte
                         * @description Vote signature by the validator if they participated in consensus for the
                         * associated block.
                         */
                        signature?: string;
                        /**
                         * Format: byte
                         * @description Vote extension provided by the application. Only valid for precommit
                         * messages.
                         */
                        extension?: string;
                        /**
                         * Format: byte
                         * @description Vote extension signature by the validator if they participated in
                         * consensus for the associated block.
                         * Only valid for precommit messages.
                         */
                        extension_signature?: string;
                      };
                      /** Format: int64 */
                      total_voting_power?: string;
                      /** Format: int64 */
                      validator_power?: string;
                      /** Format: date-time */
                      timestamp?: string;
                    };
                    /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
                    light_client_attack_evidence?: {
                      conflicting_block?: {
                        signed_header?: {
                          /** @description Header defines the structure of a block header. */
                          header?: {
                            /**
                             * basic block info
                             * @description Consensus captures the consensus rules for processing a block in the blockchain,
                             * including all blockchain data structures and the rules of the application's
                             * state transition machine.
                             */
                            version?: {
                              /** Format: uint64 */
                              block?: string;
                              /** Format: uint64 */
                              app?: string;
                            };
                            chain_id?: string;
                            /** Format: int64 */
                            height?: string;
                            /** Format: date-time */
                            time?: string;
                            /** BlockID */
                            last_block_id?: {
                              /** Format: byte */
                              hash?: string;
                              /** PartsetHeader */
                              part_set_header?: {
                                /** Format: int64 */
                                total?: number;
                                /** Format: byte */
                                hash?: string;
                              };
                            };
                            /**
                             * hashes of block data
                             * Format: byte
                             */
                            last_commit_hash?: string;
                            /** Format: byte */
                            data_hash?: string;
                            /**
                             * hashes from the app output from the prev block
                             * Format: byte
                             */
                            validators_hash?: string;
                            /** Format: byte */
                            next_validators_hash?: string;
                            /** Format: byte */
                            consensus_hash?: string;
                            /** Format: byte */
                            app_hash?: string;
                            /** Format: byte */
                            last_results_hash?: string;
                            /**
                             * consensus info
                             * Format: byte
                             */
                            evidence_hash?: string;
                            /** Format: byte */
                            proposer_address?: string;
                          };
                          /** @description Commit contains the evidence that a block was committed by a set of validators. */
                          commit?: {
                            /** Format: int64 */
                            height?: string;
                            /** Format: int32 */
                            round?: number;
                            /** BlockID */
                            block_id?: {
                              /** Format: byte */
                              hash?: string;
                              /** PartsetHeader */
                              part_set_header?: {
                                /** Format: int64 */
                                total?: number;
                                /** Format: byte */
                                hash?: string;
                              };
                            };
                            signatures?: ({
                                /**
                                 * BlockIdFlag indicates which BlockID the signature is for
                                 * @default BLOCK_ID_FLAG_UNKNOWN
                                 * @enum {string}
                                 */
                                block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                                /** Format: byte */
                                validator_address?: string;
                                /** Format: date-time */
                                timestamp?: string;
                                /** Format: byte */
                                signature?: string;
                              })[];
                          };
                        };
                        validator_set?: {
                          validators?: {
                              /** Format: byte */
                              address?: string;
                              /** PublicKey defines the keys available for use with Validators */
                              pub_key?: {
                                /** Format: byte */
                                ed25519?: string;
                                /** Format: byte */
                                secp256k1?: string;
                              };
                              /** Format: int64 */
                              voting_power?: string;
                              /** Format: int64 */
                              proposer_priority?: string;
                            }[];
                          proposer?: {
                            /** Format: byte */
                            address?: string;
                            /** PublicKey defines the keys available for use with Validators */
                            pub_key?: {
                              /** Format: byte */
                              ed25519?: string;
                              /** Format: byte */
                              secp256k1?: string;
                            };
                            /** Format: int64 */
                            voting_power?: string;
                            /** Format: int64 */
                            proposer_priority?: string;
                          };
                          /** Format: int64 */
                          total_voting_power?: string;
                        };
                      };
                      /** Format: int64 */
                      common_height?: string;
                      byzantine_validators?: {
                          /** Format: byte */
                          address?: string;
                          /** PublicKey defines the keys available for use with Validators */
                          pub_key?: {
                            /** Format: byte */
                            ed25519?: string;
                            /** Format: byte */
                            secp256k1?: string;
                          };
                          /** Format: int64 */
                          voting_power?: string;
                          /** Format: int64 */
                          proposer_priority?: string;
                        }[];
                      /** Format: int64 */
                      total_voting_power?: string;
                      /** Format: date-time */
                      timestamp?: string;
                    };
                  })[];
              };
              /** @description Commit contains the evidence that a block was committed by a set of validators. */
              last_commit?: {
                /** Format: int64 */
                height?: string;
                /** Format: int32 */
                round?: number;
                /** BlockID */
                block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                signatures?: ({
                    /**
                     * BlockIdFlag indicates which BlockID the signature is for
                     * @default BLOCK_ID_FLAG_UNKNOWN
                     * @enum {string}
                     */
                    block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                    /** Format: byte */
                    validator_address?: string;
                    /** Format: date-time */
                    timestamp?: string;
                    /** Format: byte */
                    signature?: string;
                  })[];
              };
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GetBlockByHeight queries block for given height. */
  GetBlockByHeight: {
    parameters: {
      path: {
        height: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** BlockID */
            block_id?: {
              /** Format: byte */
              hash?: string;
              /** PartsetHeader */
              part_set_header?: {
                /** Format: int64 */
                total?: number;
                /** Format: byte */
                hash?: string;
              };
            };
            /** Deprecated: please use `sdk_block` instead */
            block?: {
              /** @description Header defines the structure of a block header. */
              header?: {
                /**
                 * basic block info
                 * @description Consensus captures the consensus rules for processing a block in the blockchain,
                 * including all blockchain data structures and the rules of the application's
                 * state transition machine.
                 */
                version?: {
                  /** Format: uint64 */
                  block?: string;
                  /** Format: uint64 */
                  app?: string;
                };
                chain_id?: string;
                /** Format: int64 */
                height?: string;
                /** Format: date-time */
                time?: string;
                /** BlockID */
                last_block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /**
                 * hashes of block data
                 * Format: byte
                 */
                last_commit_hash?: string;
                /** Format: byte */
                data_hash?: string;
                /**
                 * hashes from the app output from the prev block
                 * Format: byte
                 */
                validators_hash?: string;
                /** Format: byte */
                next_validators_hash?: string;
                /** Format: byte */
                consensus_hash?: string;
                /** Format: byte */
                app_hash?: string;
                /** Format: byte */
                last_results_hash?: string;
                /**
                 * consensus info
                 * Format: byte
                 */
                evidence_hash?: string;
                /** Format: byte */
                proposer_address?: string;
              };
              /** Data contains the set of transactions included in the block */
              data?: {
                /**
                 * @description Txs that will be applied by state @ block.Height+1.
                 * NOTE: not all txs here are valid.  We're just agreeing on the order first.
                 * This means that block.AppHash does not include these txs.
                 */
                txs?: string[];
              };
              evidence?: {
                evidence?: ({
                    /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
                    duplicate_vote_evidence?: {
                      /**
                       * @description Vote represents a prevote or precommit vote from validators for
                       * consensus.
                       */
                      vote_a?: {
                        /**
                         * @description SignedMsgType is a type of signed message in the consensus.
                         *
                         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                         * @default SIGNED_MSG_TYPE_UNKNOWN
                         * @enum {string}
                         */
                        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                        /** Format: int64 */
                        height?: string;
                        /** Format: int32 */
                        round?: number;
                        /** BlockID */
                        block_id?: {
                          /** Format: byte */
                          hash?: string;
                          /** PartsetHeader */
                          part_set_header?: {
                            /** Format: int64 */
                            total?: number;
                            /** Format: byte */
                            hash?: string;
                          };
                        };
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: int32 */
                        validator_index?: number;
                        /**
                         * Format: byte
                         * @description Vote signature by the validator if they participated in consensus for the
                         * associated block.
                         */
                        signature?: string;
                        /**
                         * Format: byte
                         * @description Vote extension provided by the application. Only valid for precommit
                         * messages.
                         */
                        extension?: string;
                        /**
                         * Format: byte
                         * @description Vote extension signature by the validator if they participated in
                         * consensus for the associated block.
                         * Only valid for precommit messages.
                         */
                        extension_signature?: string;
                      };
                      /**
                       * @description Vote represents a prevote or precommit vote from validators for
                       * consensus.
                       */
                      vote_b?: {
                        /**
                         * @description SignedMsgType is a type of signed message in the consensus.
                         *
                         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                         * @default SIGNED_MSG_TYPE_UNKNOWN
                         * @enum {string}
                         */
                        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                        /** Format: int64 */
                        height?: string;
                        /** Format: int32 */
                        round?: number;
                        /** BlockID */
                        block_id?: {
                          /** Format: byte */
                          hash?: string;
                          /** PartsetHeader */
                          part_set_header?: {
                            /** Format: int64 */
                            total?: number;
                            /** Format: byte */
                            hash?: string;
                          };
                        };
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: int32 */
                        validator_index?: number;
                        /**
                         * Format: byte
                         * @description Vote signature by the validator if they participated in consensus for the
                         * associated block.
                         */
                        signature?: string;
                        /**
                         * Format: byte
                         * @description Vote extension provided by the application. Only valid for precommit
                         * messages.
                         */
                        extension?: string;
                        /**
                         * Format: byte
                         * @description Vote extension signature by the validator if they participated in
                         * consensus for the associated block.
                         * Only valid for precommit messages.
                         */
                        extension_signature?: string;
                      };
                      /** Format: int64 */
                      total_voting_power?: string;
                      /** Format: int64 */
                      validator_power?: string;
                      /** Format: date-time */
                      timestamp?: string;
                    };
                    /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
                    light_client_attack_evidence?: {
                      conflicting_block?: {
                        signed_header?: {
                          /** @description Header defines the structure of a block header. */
                          header?: {
                            /**
                             * basic block info
                             * @description Consensus captures the consensus rules for processing a block in the blockchain,
                             * including all blockchain data structures and the rules of the application's
                             * state transition machine.
                             */
                            version?: {
                              /** Format: uint64 */
                              block?: string;
                              /** Format: uint64 */
                              app?: string;
                            };
                            chain_id?: string;
                            /** Format: int64 */
                            height?: string;
                            /** Format: date-time */
                            time?: string;
                            /** BlockID */
                            last_block_id?: {
                              /** Format: byte */
                              hash?: string;
                              /** PartsetHeader */
                              part_set_header?: {
                                /** Format: int64 */
                                total?: number;
                                /** Format: byte */
                                hash?: string;
                              };
                            };
                            /**
                             * hashes of block data
                             * Format: byte
                             */
                            last_commit_hash?: string;
                            /** Format: byte */
                            data_hash?: string;
                            /**
                             * hashes from the app output from the prev block
                             * Format: byte
                             */
                            validators_hash?: string;
                            /** Format: byte */
                            next_validators_hash?: string;
                            /** Format: byte */
                            consensus_hash?: string;
                            /** Format: byte */
                            app_hash?: string;
                            /** Format: byte */
                            last_results_hash?: string;
                            /**
                             * consensus info
                             * Format: byte
                             */
                            evidence_hash?: string;
                            /** Format: byte */
                            proposer_address?: string;
                          };
                          /** @description Commit contains the evidence that a block was committed by a set of validators. */
                          commit?: {
                            /** Format: int64 */
                            height?: string;
                            /** Format: int32 */
                            round?: number;
                            /** BlockID */
                            block_id?: {
                              /** Format: byte */
                              hash?: string;
                              /** PartsetHeader */
                              part_set_header?: {
                                /** Format: int64 */
                                total?: number;
                                /** Format: byte */
                                hash?: string;
                              };
                            };
                            signatures?: ({
                                /**
                                 * BlockIdFlag indicates which BlockID the signature is for
                                 * @default BLOCK_ID_FLAG_UNKNOWN
                                 * @enum {string}
                                 */
                                block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                                /** Format: byte */
                                validator_address?: string;
                                /** Format: date-time */
                                timestamp?: string;
                                /** Format: byte */
                                signature?: string;
                              })[];
                          };
                        };
                        validator_set?: {
                          validators?: {
                              /** Format: byte */
                              address?: string;
                              /** PublicKey defines the keys available for use with Validators */
                              pub_key?: {
                                /** Format: byte */
                                ed25519?: string;
                                /** Format: byte */
                                secp256k1?: string;
                              };
                              /** Format: int64 */
                              voting_power?: string;
                              /** Format: int64 */
                              proposer_priority?: string;
                            }[];
                          proposer?: {
                            /** Format: byte */
                            address?: string;
                            /** PublicKey defines the keys available for use with Validators */
                            pub_key?: {
                              /** Format: byte */
                              ed25519?: string;
                              /** Format: byte */
                              secp256k1?: string;
                            };
                            /** Format: int64 */
                            voting_power?: string;
                            /** Format: int64 */
                            proposer_priority?: string;
                          };
                          /** Format: int64 */
                          total_voting_power?: string;
                        };
                      };
                      /** Format: int64 */
                      common_height?: string;
                      byzantine_validators?: {
                          /** Format: byte */
                          address?: string;
                          /** PublicKey defines the keys available for use with Validators */
                          pub_key?: {
                            /** Format: byte */
                            ed25519?: string;
                            /** Format: byte */
                            secp256k1?: string;
                          };
                          /** Format: int64 */
                          voting_power?: string;
                          /** Format: int64 */
                          proposer_priority?: string;
                        }[];
                      /** Format: int64 */
                      total_voting_power?: string;
                      /** Format: date-time */
                      timestamp?: string;
                    };
                  })[];
              };
              /** @description Commit contains the evidence that a block was committed by a set of validators. */
              last_commit?: {
                /** Format: int64 */
                height?: string;
                /** Format: int32 */
                round?: number;
                /** BlockID */
                block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                signatures?: ({
                    /**
                     * BlockIdFlag indicates which BlockID the signature is for
                     * @default BLOCK_ID_FLAG_UNKNOWN
                     * @enum {string}
                     */
                    block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                    /** Format: byte */
                    validator_address?: string;
                    /** Format: date-time */
                    timestamp?: string;
                    /** Format: byte */
                    signature?: string;
                  })[];
              };
            };
            /**
             * Since: cosmos-sdk 0.47
             * @description Block is tendermint type Block, with the Header proposer address
             * field converted to bech32 string.
             */
            sdk_block?: {
              /** @description Header defines the structure of a Tendermint block header. */
              header?: {
                /**
                 * basic block info
                 * @description Consensus captures the consensus rules for processing a block in the blockchain,
                 * including all blockchain data structures and the rules of the application's
                 * state transition machine.
                 */
                version?: {
                  /** Format: uint64 */
                  block?: string;
                  /** Format: uint64 */
                  app?: string;
                };
                chain_id?: string;
                /** Format: int64 */
                height?: string;
                /** Format: date-time */
                time?: string;
                /** BlockID */
                last_block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /**
                 * hashes of block data
                 * Format: byte
                 */
                last_commit_hash?: string;
                /** Format: byte */
                data_hash?: string;
                /**
                 * hashes from the app output from the prev block
                 * Format: byte
                 */
                validators_hash?: string;
                /** Format: byte */
                next_validators_hash?: string;
                /** Format: byte */
                consensus_hash?: string;
                /** Format: byte */
                app_hash?: string;
                /** Format: byte */
                last_results_hash?: string;
                /**
                 * consensus info
                 * Format: byte
                 */
                evidence_hash?: string;
                /**
                 * @description proposer_address is the original block proposer address, formatted as a Bech32 string.
                 * In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
                 * for better UX.
                 */
                proposer_address?: string;
              };
              /** Data contains the set of transactions included in the block */
              data?: {
                /**
                 * @description Txs that will be applied by state @ block.Height+1.
                 * NOTE: not all txs here are valid.  We're just agreeing on the order first.
                 * This means that block.AppHash does not include these txs.
                 */
                txs?: string[];
              };
              evidence?: {
                evidence?: ({
                    /** @description DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes. */
                    duplicate_vote_evidence?: {
                      /**
                       * @description Vote represents a prevote or precommit vote from validators for
                       * consensus.
                       */
                      vote_a?: {
                        /**
                         * @description SignedMsgType is a type of signed message in the consensus.
                         *
                         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                         * @default SIGNED_MSG_TYPE_UNKNOWN
                         * @enum {string}
                         */
                        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                        /** Format: int64 */
                        height?: string;
                        /** Format: int32 */
                        round?: number;
                        /** BlockID */
                        block_id?: {
                          /** Format: byte */
                          hash?: string;
                          /** PartsetHeader */
                          part_set_header?: {
                            /** Format: int64 */
                            total?: number;
                            /** Format: byte */
                            hash?: string;
                          };
                        };
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: int32 */
                        validator_index?: number;
                        /**
                         * Format: byte
                         * @description Vote signature by the validator if they participated in consensus for the
                         * associated block.
                         */
                        signature?: string;
                        /**
                         * Format: byte
                         * @description Vote extension provided by the application. Only valid for precommit
                         * messages.
                         */
                        extension?: string;
                        /**
                         * Format: byte
                         * @description Vote extension signature by the validator if they participated in
                         * consensus for the associated block.
                         * Only valid for precommit messages.
                         */
                        extension_signature?: string;
                      };
                      /**
                       * @description Vote represents a prevote or precommit vote from validators for
                       * consensus.
                       */
                      vote_b?: {
                        /**
                         * @description SignedMsgType is a type of signed message in the consensus.
                         *
                         *  - SIGNED_MSG_TYPE_PREVOTE: Votes
                         *  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                         * @default SIGNED_MSG_TYPE_UNKNOWN
                         * @enum {string}
                         */
                        type?: "SIGNED_MSG_TYPE_UNKNOWN" | "SIGNED_MSG_TYPE_PREVOTE" | "SIGNED_MSG_TYPE_PRECOMMIT" | "SIGNED_MSG_TYPE_PROPOSAL";
                        /** Format: int64 */
                        height?: string;
                        /** Format: int32 */
                        round?: number;
                        /** BlockID */
                        block_id?: {
                          /** Format: byte */
                          hash?: string;
                          /** PartsetHeader */
                          part_set_header?: {
                            /** Format: int64 */
                            total?: number;
                            /** Format: byte */
                            hash?: string;
                          };
                        };
                        /** Format: date-time */
                        timestamp?: string;
                        /** Format: byte */
                        validator_address?: string;
                        /** Format: int32 */
                        validator_index?: number;
                        /**
                         * Format: byte
                         * @description Vote signature by the validator if they participated in consensus for the
                         * associated block.
                         */
                        signature?: string;
                        /**
                         * Format: byte
                         * @description Vote extension provided by the application. Only valid for precommit
                         * messages.
                         */
                        extension?: string;
                        /**
                         * Format: byte
                         * @description Vote extension signature by the validator if they participated in
                         * consensus for the associated block.
                         * Only valid for precommit messages.
                         */
                        extension_signature?: string;
                      };
                      /** Format: int64 */
                      total_voting_power?: string;
                      /** Format: int64 */
                      validator_power?: string;
                      /** Format: date-time */
                      timestamp?: string;
                    };
                    /** @description LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client. */
                    light_client_attack_evidence?: {
                      conflicting_block?: {
                        signed_header?: {
                          /** @description Header defines the structure of a block header. */
                          header?: {
                            /**
                             * basic block info
                             * @description Consensus captures the consensus rules for processing a block in the blockchain,
                             * including all blockchain data structures and the rules of the application's
                             * state transition machine.
                             */
                            version?: {
                              /** Format: uint64 */
                              block?: string;
                              /** Format: uint64 */
                              app?: string;
                            };
                            chain_id?: string;
                            /** Format: int64 */
                            height?: string;
                            /** Format: date-time */
                            time?: string;
                            /** BlockID */
                            last_block_id?: {
                              /** Format: byte */
                              hash?: string;
                              /** PartsetHeader */
                              part_set_header?: {
                                /** Format: int64 */
                                total?: number;
                                /** Format: byte */
                                hash?: string;
                              };
                            };
                            /**
                             * hashes of block data
                             * Format: byte
                             */
                            last_commit_hash?: string;
                            /** Format: byte */
                            data_hash?: string;
                            /**
                             * hashes from the app output from the prev block
                             * Format: byte
                             */
                            validators_hash?: string;
                            /** Format: byte */
                            next_validators_hash?: string;
                            /** Format: byte */
                            consensus_hash?: string;
                            /** Format: byte */
                            app_hash?: string;
                            /** Format: byte */
                            last_results_hash?: string;
                            /**
                             * consensus info
                             * Format: byte
                             */
                            evidence_hash?: string;
                            /** Format: byte */
                            proposer_address?: string;
                          };
                          /** @description Commit contains the evidence that a block was committed by a set of validators. */
                          commit?: {
                            /** Format: int64 */
                            height?: string;
                            /** Format: int32 */
                            round?: number;
                            /** BlockID */
                            block_id?: {
                              /** Format: byte */
                              hash?: string;
                              /** PartsetHeader */
                              part_set_header?: {
                                /** Format: int64 */
                                total?: number;
                                /** Format: byte */
                                hash?: string;
                              };
                            };
                            signatures?: ({
                                /**
                                 * BlockIdFlag indicates which BlockID the signature is for
                                 * @default BLOCK_ID_FLAG_UNKNOWN
                                 * @enum {string}
                                 */
                                block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                                /** Format: byte */
                                validator_address?: string;
                                /** Format: date-time */
                                timestamp?: string;
                                /** Format: byte */
                                signature?: string;
                              })[];
                          };
                        };
                        validator_set?: {
                          validators?: {
                              /** Format: byte */
                              address?: string;
                              /** PublicKey defines the keys available for use with Validators */
                              pub_key?: {
                                /** Format: byte */
                                ed25519?: string;
                                /** Format: byte */
                                secp256k1?: string;
                              };
                              /** Format: int64 */
                              voting_power?: string;
                              /** Format: int64 */
                              proposer_priority?: string;
                            }[];
                          proposer?: {
                            /** Format: byte */
                            address?: string;
                            /** PublicKey defines the keys available for use with Validators */
                            pub_key?: {
                              /** Format: byte */
                              ed25519?: string;
                              /** Format: byte */
                              secp256k1?: string;
                            };
                            /** Format: int64 */
                            voting_power?: string;
                            /** Format: int64 */
                            proposer_priority?: string;
                          };
                          /** Format: int64 */
                          total_voting_power?: string;
                        };
                      };
                      /** Format: int64 */
                      common_height?: string;
                      byzantine_validators?: {
                          /** Format: byte */
                          address?: string;
                          /** PublicKey defines the keys available for use with Validators */
                          pub_key?: {
                            /** Format: byte */
                            ed25519?: string;
                            /** Format: byte */
                            secp256k1?: string;
                          };
                          /** Format: int64 */
                          voting_power?: string;
                          /** Format: int64 */
                          proposer_priority?: string;
                        }[];
                      /** Format: int64 */
                      total_voting_power?: string;
                      /** Format: date-time */
                      timestamp?: string;
                    };
                  })[];
              };
              /** @description Commit contains the evidence that a block was committed by a set of validators. */
              last_commit?: {
                /** Format: int64 */
                height?: string;
                /** Format: int32 */
                round?: number;
                /** BlockID */
                block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                signatures?: ({
                    /**
                     * BlockIdFlag indicates which BlockID the signature is for
                     * @default BLOCK_ID_FLAG_UNKNOWN
                     * @enum {string}
                     */
                    block_id_flag?: "BLOCK_ID_FLAG_UNKNOWN" | "BLOCK_ID_FLAG_ABSENT" | "BLOCK_ID_FLAG_COMMIT" | "BLOCK_ID_FLAG_NIL";
                    /** Format: byte */
                    validator_address?: string;
                    /** Format: date-time */
                    timestamp?: string;
                    /** Format: byte */
                    signature?: string;
                  })[];
              };
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GetNodeInfo queries the current node info. */
  GetNodeInfo: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            default_node_info?: {
              protocol_version?: {
                /** Format: uint64 */
                p2p?: string;
                /** Format: uint64 */
                block?: string;
                /** Format: uint64 */
                app?: string;
              };
              default_node_id?: string;
              listen_addr?: string;
              network?: string;
              version?: string;
              /** Format: byte */
              channels?: string;
              moniker?: string;
              other?: {
                tx_index?: string;
                rpc_address?: string;
              };
            };
            /** @description VersionInfo is the type for the GetNodeInfoResponse message. */
            application_version?: {
              name?: string;
              app_name?: string;
              version?: string;
              git_commit?: string;
              build_tags?: string;
              go_version?: string;
              build_deps?: {
                  /** module path */
                  path?: string;
                  /** module version */
                  version?: string;
                  /** checksum */
                  sum?: string;
                }[];
              /** Since: cosmos-sdk 0.43 */
              cosmos_sdk_version?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GetSyncing queries node syncing. */
  GetSyncing: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            syncing?: boolean;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GetLatestValidatorSet queries latest validator-set. */
  GetLatestValidatorSet: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** Format: int64 */
            block_height?: string;
            validators?: ({
                address?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                pub_key?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /** Format: int64 */
                voting_power?: string;
                /** Format: int64 */
                proposer_priority?: string;
              })[];
            /** @description pagination defines an pagination for the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GetValidatorSetByHeight queries validator-set at a given height. */
  GetValidatorSetByHeight: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        height: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** Format: int64 */
            block_height?: string;
            validators?: ({
                address?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                pub_key?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /** Format: int64 */
                voting_power?: string;
                /** Format: int64 */
                proposer_priority?: string;
              })[];
            /** @description pagination defines an pagination for the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Config queries for the operator configuration. */
  Config: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            minimum_gas_price?: string;
            /** pruning settings */
            pruning_keep_recent?: string;
            pruning_interval?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Status queries for the node status. */
  Status: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** Format: uint64 */
            earliest_store_height?: string;
            /** Format: uint64 */
            height?: string;
            /** Format: date-time */
            timestamp?: string;
            /** Format: byte */
            app_hash?: string;
            /** Format: byte */
            validator_hash?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** CommunityPool queries the community pool coins. */
  CommunityPool: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description pool defines community pool's coins. */
            pool?: {
                denom?: string;
                amount?: string;
              }[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * DelegationTotalRewards queries the total rewards accrued by each
   * validator.
   */
  DelegationTotalRewards: {
    parameters: {
      path: {
        /** @description delegator_address defines the delegator address to query for. */
        delegator_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description rewards defines all the rewards accrued by a delegator. */
            rewards?: {
                validator_address?: string;
                reward?: {
                    denom?: string;
                    amount?: string;
                  }[];
              }[];
            /** @description total defines the sum of all the rewards. */
            total?: {
                denom?: string;
                amount?: string;
              }[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** DelegationRewards queries the total rewards accrued by a delegation. */
  DelegationRewards: {
    parameters: {
      path: {
        /** @description delegator_address defines the delegator address to query for. */
        delegator_address: string;
        /** @description validator_address defines the validator address to query for. */
        validator_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description rewards defines the rewards accrued by a delegation. */
            rewards?: {
                denom?: string;
                amount?: string;
              }[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** DelegatorValidators queries the validators of a delegator. */
  DelegatorValidators: {
    parameters: {
      path: {
        /** @description delegator_address defines the delegator address to query for. */
        delegator_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description validators defines the validators a delegator is delegating for. */
            validators?: string[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** DelegatorWithdrawAddress queries withdraw address of a delegator. */
  DelegatorWithdrawAddress: {
    parameters: {
      path: {
        /** @description delegator_address defines the delegator address to query for. */
        delegator_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description withdraw_address defines the delegator address to query for. */
            withdraw_address?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Params queries params of the distribution module. */
  DistributionParams: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description params defines the parameters of the module. */
            params?: {
              community_tax?: string;
              /**
               * @description Deprecated: The base_proposer_reward field is deprecated and is no longer used
               * in the x/distribution module's reward mechanism.
               */
              base_proposer_reward?: string;
              /**
               * @description Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
               * in the x/distribution module's reward mechanism.
               */
              bonus_proposer_reward?: string;
              withdraw_addr_enabled?: boolean;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** ValidatorDistributionInfo queries validator commission and self-delegation rewards for validator */
  ValidatorDistributionInfo: {
    parameters: {
      path: {
        /** @description validator_address defines the validator address to query for. */
        validator_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description operator_address defines the validator operator address. */
            operator_address?: string;
            /** @description self_bond_rewards defines the self delegations rewards. */
            self_bond_rewards?: {
                denom?: string;
                amount?: string;
              }[];
            /** @description commission defines the commission the validator received. */
            commission?: {
                denom?: string;
                amount?: string;
              }[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** ValidatorCommission queries accumulated commission for a validator. */
  ValidatorCommission: {
    parameters: {
      path: {
        /** @description validator_address defines the validator address to query for. */
        validator_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description commission defines the commission the validator received. */
            commission?: {
              commission?: {
                  denom?: string;
                  amount?: string;
                }[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** ValidatorOutstandingRewards queries rewards of a validator address. */
  ValidatorOutstandingRewards: {
    parameters: {
      path: {
        /** @description validator_address defines the validator address to query for. */
        validator_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
             * for a validator inexpensive to track, allows simple sanity checks.
             */
            rewards?: {
              rewards?: {
                  denom?: string;
                  amount?: string;
                }[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** ValidatorSlashes queries slash events of a validator. */
  ValidatorSlashes: {
    parameters: {
      query?: {
        /** @description starting_height defines the optional starting height to query the slashes. */
        starting_height?: string;
        /** @description starting_height defines the optional ending height to query the slashes. */
        ending_height?: string;
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description validator_address defines the validator address to query for. */
        validator_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description slashes defines the slashes the validator received. */
            slashes?: {
                /** Format: uint64 */
                validator_period?: string;
                fraction?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** AllEvidence queries all evidence. */
  AllEvidence: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description evidence returns all evidences. */
            evidence?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Evidence queries evidence based on evidence hash. */
  Evidence: {
    parameters: {
      query?: {
        /**
         * @description evidence_hash defines the hash of the requested evidence.
         * Deprecated: Use hash, a HEX encoded string, instead.
         */
        evidence_hash?: string;
      };
      path: {
        /**
         * @description hash defines the evidence hash of the requested evidence.
         *
         * Since: cosmos-sdk 0.47
         */
        hash: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description `Any` contains an arbitrary serialized protocol buffer message along with a
             * URL that describes the type of the serialized message.
             *
             * Protobuf library provides support to pack/unpack Any values in the form
             * of utility functions or additional generated methods of the Any type.
             *
             * Example 1: Pack and unpack a message in C++.
             *
             *     Foo foo = ...;
             *     Any any;
             *     any.PackFrom(foo);
             *     ...
             *     if (any.UnpackTo(&foo)) {
             *       ...
             *     }
             *
             * Example 2: Pack and unpack a message in Java.
             *
             *     Foo foo = ...;
             *     Any any = Any.pack(foo);
             *     ...
             *     if (any.is(Foo.class)) {
             *       foo = any.unpack(Foo.class);
             *     }
             *     // or ...
             *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
             *       foo = any.unpack(Foo.getDefaultInstance());
             *     }
             *
             * Example 3: Pack and unpack a message in Python.
             *
             *     foo = Foo(...)
             *     any = Any()
             *     any.Pack(foo)
             *     ...
             *     if any.Is(Foo.DESCRIPTOR):
             *       any.Unpack(foo)
             *       ...
             *
             * Example 4: Pack and unpack a message in Go
             *
             *      foo := &pb.Foo{...}
             *      any, err := anypb.New(foo)
             *      if err != nil {
             *        ...
             *      }
             *      ...
             *      foo := &pb.Foo{}
             *      if err := any.UnmarshalTo(foo); err != nil {
             *        ...
             *      }
             *
             * The pack methods provided by protobuf library will by default use
             * 'type.googleapis.com/full.type.name' as the type URL and the unpack
             * methods only use the fully qualified type name after the last '/'
             * in the type URL, for example "foo.bar.com/x/y.z" will yield type
             * name "y.z".
             *
             * JSON
             *
             * The JSON representation of an `Any` value uses the regular
             * representation of the deserialized, embedded message, with an
             * additional field `@type` which contains the type URL. Example:
             *
             *     package google.profile;
             *     message Person {
             *       string first_name = 1;
             *       string last_name = 2;
             *     }
             *
             *     {
             *       "@type": "type.googleapis.com/google.profile.Person",
             *       "firstName": <string>,
             *       "lastName": <string>
             *     }
             *
             * If the embedded message type is well-known and has a custom JSON
             * representation, that representation will be embedded adding a field
             * `value` which holds the custom JSON in addition to the `@type`
             * field. Example (for message [google.protobuf.Duration][]):
             *
             *     {
             *       "@type": "type.googleapis.com/google.protobuf.Duration",
             *       "value": "1.212s"
             *     }
             */
            evidence?: {
              /**
               * @description A URL/resource name that uniquely identifies the type of the serialized
               * protocol buffer message. This string must contain at least
               * one "/" character. The last segment of the URL's path must represent
               * the fully qualified name of the type (as in
               * `path/google.protobuf.Duration`). The name should be in a canonical form
               * (e.g., leading "." is not accepted).
               *
               * In practice, teams usually precompile into the binary all types that they
               * expect it to use in the context of Any. However, for URLs which use the
               * scheme `http`, `https`, or no scheme, one can optionally set up a type
               * server that maps type URLs to message definitions as follows:
               *
               * * If no scheme is provided, `https` is assumed.
               * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
               *   value in binary format, or produce an error.
               * * Applications are allowed to cache lookup results based on the
               *   URL, or have them precompiled into a binary to avoid any
               *   lookup. Therefore, binary compatibility needs to be preserved
               *   on changes to types. (Use versioned type names to manage
               *   breaking changes.)
               *
               * Note: this functionality is not currently available in the official
               * protobuf release, and it is not used for type URLs beginning with
               * type.googleapis.com.
               *
               * Schemes other than `http`, `https` (or the empty scheme) might be
               * used with implementation specific semantics.
               */
              type_url?: string;
              /**
               * Format: byte
               * @description Must be a valid serialized protocol buffer of the above specified type.
               */
              value?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Params queries all parameters of the gov module. */
  GovParams: {
    parameters: {
      path: {
        /**
         * @description params_type defines which parameters to query for, can be one of "voting",
         * "tallying" or "deposit".
         */
        params_type: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description voting_params defines the parameters related to voting. */
            voting_params?: {
              /** @description Duration of the voting period. */
              voting_period?: string;
            };
            /** @description deposit_params defines the parameters related to deposit. */
            deposit_params?: {
              /** @description Minimum deposit for a proposal to enter voting period. */
              min_deposit?: {
                  denom?: string;
                  amount?: string;
                }[];
              /**
               * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
               * months.
               */
              max_deposit_period?: string;
            };
            /** @description tally_params defines the parameters related to tally. */
            tally_params?: {
              /**
               * Format: byte
               * @description Minimum percentage of total stake needed to vote for a result to be
               * considered valid.
               */
              quorum?: string;
              /**
               * Format: byte
               * @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.
               */
              threshold?: string;
              /**
               * Format: byte
               * @description Minimum value of Veto votes to Total votes ratio for proposal to be
               * vetoed. Default value: 1/3.
               */
              veto_threshold?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Proposals queries all proposals based on given status. */
  Proposals: {
    parameters?: {
      query?: {
        /**
         * @description proposal_status defines the status of the proposals.
         *
         *  - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
         *  - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
         * period.
         *  - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
         * period.
         *  - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
         * passed.
         *  - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
         * been rejected.
         *  - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
         * failed.
         */
        proposal_status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
        /** @description voter defines the voter address for the proposals. */
        voter?: string;
        /** @description depositor defines the deposit addresses from the proposals. */
        depositor?: string;
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description proposals defines all the requested governance proposals. */
            proposals?: ({
                /**
                 * Format: uint64
                 * @description proposal_id defines the unique id of the proposal.
                 */
                proposal_id?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                content?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /**
                 * @description status defines the proposal status.
                 * @default PROPOSAL_STATUS_UNSPECIFIED
                 * @enum {string}
                 */
                status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
                /**
                 * @description final_tally_result is the final tally result of the proposal. When
                 * querying a proposal via gRPC, this field is not populated until the
                 * proposal's voting period has ended.
                 */
                final_tally_result?: {
                  /** @description yes is the number of yes votes on a proposal. */
                  yes?: string;
                  /** @description abstain is the number of abstain votes on a proposal. */
                  abstain?: string;
                  /** @description no is the number of no votes on a proposal. */
                  no?: string;
                  /** @description no_with_veto is the number of no with veto votes on a proposal. */
                  no_with_veto?: string;
                };
                /**
                 * Format: date-time
                 * @description submit_time is the time of proposal submission.
                 */
                submit_time?: string;
                /**
                 * Format: date-time
                 * @description deposit_end_time is the end time for deposition.
                 */
                deposit_end_time?: string;
                /** @description total_deposit is the total deposit on the proposal. */
                total_deposit?: {
                    denom?: string;
                    amount?: string;
                  }[];
                /**
                 * Format: date-time
                 * @description voting_start_time is the starting time to vote on a proposal.
                 */
                voting_start_time?: string;
                /**
                 * Format: date-time
                 * @description voting_end_time is the end time of voting on a proposal.
                 */
                voting_end_time?: string;
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Proposal queries proposal details based on ProposalID. */
  Proposal: {
    parameters: {
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description Proposal defines the core field members of a governance proposal. */
            proposal?: {
              /**
               * Format: uint64
               * @description proposal_id defines the unique id of the proposal.
               */
              proposal_id?: string;
              /**
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              content?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
              /**
               * @description status defines the proposal status.
               * @default PROPOSAL_STATUS_UNSPECIFIED
               * @enum {string}
               */
              status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
              /**
               * @description final_tally_result is the final tally result of the proposal. When
               * querying a proposal via gRPC, this field is not populated until the
               * proposal's voting period has ended.
               */
              final_tally_result?: {
                /** @description yes is the number of yes votes on a proposal. */
                yes?: string;
                /** @description abstain is the number of abstain votes on a proposal. */
                abstain?: string;
                /** @description no is the number of no votes on a proposal. */
                no?: string;
                /** @description no_with_veto is the number of no with veto votes on a proposal. */
                no_with_veto?: string;
              };
              /**
               * Format: date-time
               * @description submit_time is the time of proposal submission.
               */
              submit_time?: string;
              /**
               * Format: date-time
               * @description deposit_end_time is the end time for deposition.
               */
              deposit_end_time?: string;
              /** @description total_deposit is the total deposit on the proposal. */
              total_deposit?: {
                  denom?: string;
                  amount?: string;
                }[];
              /**
               * Format: date-time
               * @description voting_start_time is the starting time to vote on a proposal.
               */
              voting_start_time?: string;
              /**
               * Format: date-time
               * @description voting_end_time is the end time of voting on a proposal.
               */
              voting_end_time?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Deposits queries all deposits of a single proposal. */
  Deposits: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description deposits defines the requested deposits. */
            deposits?: {
                /**
                 * Format: uint64
                 * @description proposal_id defines the unique id of the proposal.
                 */
                proposal_id?: string;
                /** @description depositor defines the deposit addresses from the proposals. */
                depositor?: string;
                /** @description amount to be deposited by depositor. */
                amount?: {
                    denom?: string;
                    amount?: string;
                  }[];
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Deposit queries single deposit information based on proposalID, depositor address. */
  Deposit: {
    parameters: {
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
        /** @description depositor defines the deposit addresses from the proposals. */
        depositor: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Deposit defines an amount deposited by an account address to an active
             * proposal.
             */
            deposit?: {
              /**
               * Format: uint64
               * @description proposal_id defines the unique id of the proposal.
               */
              proposal_id?: string;
              /** @description depositor defines the deposit addresses from the proposals. */
              depositor?: string;
              /** @description amount to be deposited by depositor. */
              amount?: {
                  denom?: string;
                  amount?: string;
                }[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** TallyResult queries the tally of a proposal vote. */
  TallyResult: {
    parameters: {
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description tally defines the requested tally. */
            tally?: {
              /** @description yes is the number of yes votes on a proposal. */
              yes?: string;
              /** @description abstain is the number of abstain votes on a proposal. */
              abstain?: string;
              /** @description no is the number of no votes on a proposal. */
              no?: string;
              /** @description no_with_veto is the number of no with veto votes on a proposal. */
              no_with_veto?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Votes queries votes of a given proposal. */
  Votes: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description votes defines the queried votes. */
            votes?: ({
                /**
                 * Format: uint64
                 * @description proposal_id defines the unique id of the proposal.
                 */
                proposal_id?: string;
                /** @description voter is the voter address of the proposal. */
                voter?: string;
                /**
                 * @description Deprecated: Prefer to use `options` instead. This field is set in queries
                 * if and only if `len(options) == 1` and that option has weight 1. In all
                 * other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
                 * @default VOTE_OPTION_UNSPECIFIED
                 * @enum {string}
                 */
                option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
                /**
                 * @description options is the weighted vote options.
                 *
                 * Since: cosmos-sdk 0.43
                 */
                options?: ({
                    /**
                     * @description option defines the valid vote options, it must not contain duplicate vote options.
                     * @default VOTE_OPTION_UNSPECIFIED
                     * @enum {string}
                     */
                    option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
                    /** @description weight is the vote weight associated with the vote option. */
                    weight?: string;
                  })[];
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Vote queries voted information based on proposalID, voterAddr. */
  Vote: {
    parameters: {
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
        /** @description voter defines the voter address for the proposals. */
        voter: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Vote defines a vote on a governance proposal.
             * A Vote consists of a proposal ID, the voter, and the vote option.
             */
            vote?: {
              /**
               * Format: uint64
               * @description proposal_id defines the unique id of the proposal.
               */
              proposal_id?: string;
              /** @description voter is the voter address of the proposal. */
              voter?: string;
              /**
               * @description Deprecated: Prefer to use `options` instead. This field is set in queries
               * if and only if `len(options) == 1` and that option has weight 1. In all
               * other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
               * @default VOTE_OPTION_UNSPECIFIED
               * @enum {string}
               */
              option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
              /**
               * @description options is the weighted vote options.
               *
               * Since: cosmos-sdk 0.43
               */
              options?: ({
                  /**
                   * @description option defines the valid vote options, it must not contain duplicate vote options.
                   * @default VOTE_OPTION_UNSPECIFIED
                   * @enum {string}
                   */
                  option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
                  /** @description weight is the vote weight associated with the vote option. */
                  weight?: string;
                })[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Constitution queries the chain's constitution. */
  Constitution: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            constitution?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Params queries all parameters of the gov module. */
  GovV1Params: {
    parameters: {
      path: {
        /**
         * @description params_type defines which parameters to query for, can be one of "voting",
         * "tallying" or "deposit".
         */
        params_type: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Deprecated: Prefer to use `params` instead.
             * voting_params defines the parameters related to voting.
             */
            voting_params?: {
              /** @description Duration of the voting period. */
              voting_period?: string;
            };
            /**
             * @description Deprecated: Prefer to use `params` instead.
             * deposit_params defines the parameters related to deposit.
             */
            deposit_params?: {
              /** @description Minimum deposit for a proposal to enter voting period. */
              min_deposit?: {
                  denom?: string;
                  amount?: string;
                }[];
              /**
               * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
               * months.
               */
              max_deposit_period?: string;
            };
            /**
             * @description Deprecated: Prefer to use `params` instead.
             * tally_params defines the parameters related to tally.
             */
            tally_params?: {
              /**
               * @description Minimum percentage of total stake needed to vote for a result to be
               * considered valid.
               */
              quorum?: string;
              /** @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5. */
              threshold?: string;
              /**
               * @description Minimum value of Veto votes to Total votes ratio for proposal to be
               * vetoed. Default value: 1/3.
               */
              veto_threshold?: string;
            };
            /**
             * @description params defines all the paramaters of x/gov module.
             *
             * Since: cosmos-sdk 0.47
             */
            params?: {
              /** @description Minimum deposit for a proposal to enter voting period. */
              min_deposit?: {
                  denom?: string;
                  amount?: string;
                }[];
              /**
               * @description Maximum period for Atom holders to deposit on a proposal. Initial value: 2
               * months.
               */
              max_deposit_period?: string;
              /** @description Duration of the voting period. */
              voting_period?: string;
              /**
               * @description Minimum percentage of total stake needed to vote for a result to be
               *  considered valid.
               */
              quorum?: string;
              /** @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.5. */
              threshold?: string;
              /**
               * @description Minimum value of Veto votes to Total votes ratio for proposal to be
               *  vetoed. Default value: 1/3.
               */
              veto_threshold?: string;
              /** @description The ratio representing the proportion of the deposit value that must be paid at proposal submission. */
              min_initial_deposit_ratio?: string;
              /**
               * @description The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.
               *
               * Since: cosmos-sdk 0.50
               */
              proposal_cancel_ratio?: string;
              /**
               * @description The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
               * If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.
               *
               * Since: cosmos-sdk 0.50
               */
              proposal_cancel_dest?: string;
              /**
               * @description Duration of the voting period of an expedited proposal.
               *
               * Since: cosmos-sdk 0.50
               */
              expedited_voting_period?: string;
              /**
               * @description Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.
               *
               * Since: cosmos-sdk 0.50
               */
              expedited_threshold?: string;
              /** @description Minimum expedited deposit for a proposal to enter voting period. */
              expedited_min_deposit?: {
                  denom?: string;
                  amount?: string;
                }[];
              /** burn deposits if a proposal does not meet quorum */
              burn_vote_quorum?: boolean;
              /** burn deposits if the proposal does not enter voting period */
              burn_proposal_deposit_prevote?: boolean;
              /** burn deposits if quorum with vote type no_veto is met */
              burn_vote_veto?: boolean;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Proposal queries proposal details based on ProposalID. */
  GovV1Proposal: {
    parameters: {
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description Proposal defines the core field members of a governance proposal. */
            proposal?: {
              /**
               * Format: uint64
               * @description id defines the unique id of the proposal.
               */
              id?: string;
              /** @description messages are the arbitrary messages to be executed if the proposal passes. */
              messages?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                }[];
              /**
               * @description status defines the proposal status.
               * @default PROPOSAL_STATUS_UNSPECIFIED
               * @enum {string}
               */
              status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_DEPOSIT_PERIOD" | "PROPOSAL_STATUS_VOTING_PERIOD" | "PROPOSAL_STATUS_PASSED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_FAILED";
              /**
               * @description final_tally_result is the final tally result of the proposal. When
               * querying a proposal via gRPC, this field is not populated until the
               * proposal's voting period has ended.
               */
              final_tally_result?: {
                /** @description yes_count is the number of yes votes on a proposal. */
                yes_count?: string;
                /** @description abstain_count is the number of abstain votes on a proposal. */
                abstain_count?: string;
                /** @description no_count is the number of no votes on a proposal. */
                no_count?: string;
                /** @description no_with_veto_count is the number of no with veto votes on a proposal. */
                no_with_veto_count?: string;
              };
              /**
               * Format: date-time
               * @description submit_time is the time of proposal submission.
               */
              submit_time?: string;
              /**
               * Format: date-time
               * @description deposit_end_time is the end time for deposition.
               */
              deposit_end_time?: string;
              /** @description total_deposit is the total deposit on the proposal. */
              total_deposit?: {
                  denom?: string;
                  amount?: string;
                }[];
              /**
               * Format: date-time
               * @description voting_start_time is the starting time to vote on a proposal.
               */
              voting_start_time?: string;
              /**
               * Format: date-time
               * @description voting_end_time is the end time of voting on a proposal.
               */
              voting_end_time?: string;
              /**
               * metadata is any arbitrary metadata attached to the proposal.
               * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#proposal-3
               */
              metadata?: string;
              /**
               * title is the title of the proposal
               * @description Since: cosmos-sdk 0.47
               */
              title?: string;
              /**
               * summary is a short summary of the proposal
               * @description Since: cosmos-sdk 0.47
               */
              summary?: string;
              /**
               * proposer is the address of the proposal sumbitter
               * @description Since: cosmos-sdk 0.47
               */
              proposer?: string;
              /**
               * expedited defines if the proposal is expedited
               * @description Since: cosmos-sdk 0.50
               */
              expedited?: boolean;
              /**
               * failed_reason defines the reason why the proposal failed
               * @description Since: cosmos-sdk 0.50
               */
              failed_reason?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Deposit queries single deposit information based on proposalID, depositAddr. */
  GovV1Deposit: {
    parameters: {
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
        /** @description depositor defines the deposit addresses from the proposals. */
        depositor: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Deposit defines an amount deposited by an account address to an active
             * proposal.
             */
            deposit?: {
              /**
               * Format: uint64
               * @description proposal_id defines the unique id of the proposal.
               */
              proposal_id?: string;
              /** @description depositor defines the deposit addresses from the proposals. */
              depositor?: string;
              /** @description amount to be deposited by depositor. */
              amount?: {
                  denom?: string;
                  amount?: string;
                }[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** TallyResult queries the tally of a proposal vote. */
  GovV1TallyResult: {
    parameters: {
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description tally defines the requested tally. */
            tally?: {
              /** @description yes_count is the number of yes votes on a proposal. */
              yes_count?: string;
              /** @description abstain_count is the number of abstain votes on a proposal. */
              abstain_count?: string;
              /** @description no_count is the number of no votes on a proposal. */
              no_count?: string;
              /** @description no_with_veto_count is the number of no with veto votes on a proposal. */
              no_with_veto_count?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Votes queries votes of a given proposal. */
  GovV1Votes: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description votes defines the queried votes. */
            votes?: ({
                /**
                 * Format: uint64
                 * @description proposal_id defines the unique id of the proposal.
                 */
                proposal_id?: string;
                /** @description voter is the voter address of the proposal. */
                voter?: string;
                /** @description options is the weighted vote options. */
                options?: ({
                    /**
                     * @description option defines the valid vote options, it must not contain duplicate vote options.
                     * @default VOTE_OPTION_UNSPECIFIED
                     * @enum {string}
                     */
                    option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
                    /** @description weight is the vote weight associated with the vote option. */
                    weight?: string;
                  })[];
                /**
                 * metadata is any arbitrary metadata attached to the vote.
                 * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
                 */
                metadata?: string;
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Vote queries voted information based on proposalID, voterAddr. */
  GovV1Vote: {
    parameters: {
      path: {
        /** @description proposal_id defines the unique id of the proposal. */
        proposal_id: string;
        /** @description voter defines the voter address for the proposals. */
        voter: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Vote defines a vote on a governance proposal.
             * A Vote consists of a proposal ID, the voter, and the vote option.
             */
            vote?: {
              /**
               * Format: uint64
               * @description proposal_id defines the unique id of the proposal.
               */
              proposal_id?: string;
              /** @description voter is the voter address of the proposal. */
              voter?: string;
              /** @description options is the weighted vote options. */
              options?: ({
                  /**
                   * @description option defines the valid vote options, it must not contain duplicate vote options.
                   * @default VOTE_OPTION_UNSPECIFIED
                   * @enum {string}
                   */
                  option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
                  /** @description weight is the vote weight associated with the vote option. */
                  weight?: string;
                })[];
              /**
               * metadata is any arbitrary metadata attached to the vote.
               * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/gov#vote-5
               */
              metadata?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** AnnualProvisions current minting annual provisions value. */
  AnnualProvisions: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * Format: byte
             * @description annual_provisions is the current minting annual provisions value.
             */
            annual_provisions?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Inflation returns the current minting inflation value. */
  Inflation: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * Format: byte
             * @description inflation is the current minting inflation value.
             */
            inflation?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Params returns the total set of minting parameters. */
  MintParams: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description params defines the parameters of the module. */
            params?: {
              /** type of coin to mint */
              mint_denom?: string;
              /** maximum annual change in inflation rate */
              inflation_rate_change?: string;
              /** maximum inflation rate */
              inflation_max?: string;
              /** minimum inflation rate */
              inflation_min?: string;
              /** goal of percent bonded atoms */
              goal_bonded?: string;
              /**
               * expected blocks per year
               * Format: uint64
               */
              blocks_per_year?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Params queries a specific parameter of a module, given its subspace and
   * key.
   */
  Params: {
    parameters?: {
      query?: {
        /** @description subspace defines the module to query the parameter for. */
        subspace?: string;
        /** @description key defines the key of the parameter in the subspace. */
        key?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description param defines the queried parameter. */
            param?: {
              subspace?: string;
              key?: string;
              value?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Subspaces queries for all registered subspaces and all keys for a subspace.
   * @description Since: cosmos-sdk 0.46
   */
  Subspaces: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            subspaces?: {
                subspace?: string;
                keys?: string[];
              }[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Params queries the parameters of slashing module */
  SlashingParams: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description Params represents the parameters used for by the slashing module. */
            params?: {
              /** Format: int64 */
              signed_blocks_window?: string;
              /** Format: byte */
              min_signed_per_window?: string;
              downtime_jail_duration?: string;
              /** Format: byte */
              slash_fraction_double_sign?: string;
              /** Format: byte */
              slash_fraction_downtime?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** SigningInfos queries signing info of all validators */
  SigningInfos: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** info is the signing info of all validators */
            info?: {
                address?: string;
                /**
                 * Height at which validator was first a candidate OR was un-jailed
                 * Format: int64
                 */
                start_height?: string;
                /**
                 * Format: int64
                 * @description Index which is incremented every time a validator is bonded in a block and
                 * _may_ have signed a pre-commit or not. This in conjunction with the
                 * signed_blocks_window param determines the index in the missed block bitmap.
                 */
                index_offset?: string;
                /**
                 * Format: date-time
                 * @description Timestamp until which the validator is jailed due to liveness downtime.
                 */
                jailed_until?: string;
                /**
                 * @description Whether or not a validator has been tombstoned (killed out of validator
                 * set). It is set once the validator commits an equivocation or for any other
                 * configured misbehavior.
                 */
                tombstoned?: boolean;
                /**
                 * Format: int64
                 * @description A counter of missed (unsigned) blocks. It is used to avoid unnecessary
                 * reads in the missed block bitmap.
                 */
                missed_blocks_counter?: string;
              }[];
            /**
             * @description PageResponse is to be embedded in gRPC response messages where the
             * corresponding request message has used PageRequest.
             *
             *  message SomeResponse {
             *          repeated Bar results = 1;
             *          PageResponse page = 2;
             *  }
             */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** SigningInfo queries the signing info of given cons address */
  SigningInfo: {
    parameters: {
      path: {
        /** @description cons_address is the address to query signing info of */
        cons_address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * val_signing_info is the signing info of requested val cons address
             * @description ValidatorSigningInfo defines a validator's signing info for monitoring their
             * liveness activity.
             */
            val_signing_info?: {
              address?: string;
              /**
               * Height at which validator was first a candidate OR was un-jailed
               * Format: int64
               */
              start_height?: string;
              /**
               * Format: int64
               * @description Index which is incremented every time a validator is bonded in a block and
               * _may_ have signed a pre-commit or not. This in conjunction with the
               * signed_blocks_window param determines the index in the missed block bitmap.
               */
              index_offset?: string;
              /**
               * Format: date-time
               * @description Timestamp until which the validator is jailed due to liveness downtime.
               */
              jailed_until?: string;
              /**
               * @description Whether or not a validator has been tombstoned (killed out of validator
               * set). It is set once the validator commits an equivocation or for any other
               * configured misbehavior.
               */
              tombstoned?: boolean;
              /**
               * Format: int64
               * @description A counter of missed (unsigned) blocks. It is used to avoid unnecessary
               * reads in the missed block bitmap.
               */
              missed_blocks_counter?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * DelegatorDelegations queries all delegations of a given delegator address.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  DelegatorDelegations: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description delegator_addr defines the delegator address to query for. */
        delegator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description delegation_responses defines all the delegations' info of a delegator. */
            delegation_responses?: {
                /**
                 * @description Delegation represents the bond with tokens held by an account. It is
                 * owned by one delegator, and is associated with the voting power of one
                 * validator.
                 */
                delegation?: {
                  /** @description delegator_address is the encoded address of the delegator. */
                  delegator_address?: string;
                  /** @description validator_address is the encoded address of the validator. */
                  validator_address?: string;
                  /** @description shares define the delegation shares received. */
                  shares?: string;
                };
                /**
                 * @description Coin defines a token with a denomination and an amount.
                 *
                 * NOTE: The amount field is an Int which implements the custom method
                 * signatures required by gogoproto.
                 */
                balance?: {
                  denom?: string;
                  amount?: string;
                };
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Redelegations queries redelegations of given address.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  Redelegations: {
    parameters: {
      query?: {
        /** @description src_validator_addr defines the validator address to redelegate from. */
        src_validator_addr?: string;
        /** @description dst_validator_addr defines the validator address to redelegate to. */
        dst_validator_addr?: string;
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description delegator_addr defines the delegator address to query for. */
        delegator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            redelegation_responses?: {
                /**
                 * @description Redelegation contains the list of a particular delegator's redelegating bonds
                 * from a particular source validator to a particular destination validator.
                 */
                redelegation?: {
                  /** @description delegator_address is the bech32-encoded address of the delegator. */
                  delegator_address?: string;
                  /** @description validator_src_address is the validator redelegation source operator address. */
                  validator_src_address?: string;
                  /** @description validator_dst_address is the validator redelegation destination operator address. */
                  validator_dst_address?: string;
                  /** @description entries are the redelegation entries. */
                  entries?: {
                      /**
                       * Format: int64
                       * @description creation_height  defines the height which the redelegation took place.
                       */
                      creation_height?: string;
                      /**
                       * Format: date-time
                       * @description completion_time defines the unix time for redelegation completion.
                       */
                      completion_time?: string;
                      /** @description initial_balance defines the initial balance when redelegation started. */
                      initial_balance?: string;
                      /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
                      shares_dst?: string;
                      /**
                       * Incrementing id that uniquely identifies this entry
                       * Format: uint64
                       */
                      unbonding_id?: string;
                      /**
                       * Strictly positive if this entry's unbonding has been stopped by external modules
                       * Format: int64
                       */
                      unbonding_on_hold_ref_count?: string;
                    }[];
                };
                entries?: {
                    /** @description RedelegationEntry defines a redelegation object with relevant metadata. */
                    redelegation_entry?: {
                      /**
                       * Format: int64
                       * @description creation_height  defines the height which the redelegation took place.
                       */
                      creation_height?: string;
                      /**
                       * Format: date-time
                       * @description completion_time defines the unix time for redelegation completion.
                       */
                      completion_time?: string;
                      /** @description initial_balance defines the initial balance when redelegation started. */
                      initial_balance?: string;
                      /** @description shares_dst is the amount of destination-validator shares created by redelegation. */
                      shares_dst?: string;
                      /**
                       * Incrementing id that uniquely identifies this entry
                       * Format: uint64
                       */
                      unbonding_id?: string;
                      /**
                       * Strictly positive if this entry's unbonding has been stopped by external modules
                       * Format: int64
                       */
                      unbonding_on_hold_ref_count?: string;
                    };
                    balance?: string;
                  }[];
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * DelegatorUnbondingDelegations queries all unbonding delegations of a given
   * delegator address.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  DelegatorUnbondingDelegations: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description delegator_addr defines the delegator address to query for. */
        delegator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            unbonding_responses?: {
                /** @description delegator_address is the encoded address of the delegator. */
                delegator_address?: string;
                /** @description validator_address is the encoded address of the validator. */
                validator_address?: string;
                /** @description entries are the unbonding delegation entries. */
                entries?: {
                    /**
                     * Format: int64
                     * @description creation_height is the height which the unbonding took place.
                     */
                    creation_height?: string;
                    /**
                     * Format: date-time
                     * @description completion_time is the unix time for unbonding completion.
                     */
                    completion_time?: string;
                    /** @description initial_balance defines the tokens initially scheduled to receive at completion. */
                    initial_balance?: string;
                    /** @description balance defines the tokens to receive at completion. */
                    balance?: string;
                    /**
                     * Incrementing id that uniquely identifies this entry
                     * Format: uint64
                     */
                    unbonding_id?: string;
                    /**
                     * Strictly positive if this entry's unbonding has been stopped by external modules
                     * Format: int64
                     */
                    unbonding_on_hold_ref_count?: string;
                  }[];
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * DelegatorValidators queries all validators info for given delegator
   * address.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  StakingDelegatorValidators: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description delegator_addr defines the delegator address to query for. */
        delegator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description validators defines the validators' info of a delegator. */
            validators?: ({
                /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
                operator_address?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                consensus_pubkey?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /** @description jailed defined whether the validator has been jailed from bonded status or not. */
                jailed?: boolean;
                /**
                 * @description status is the validator status (bonded/unbonding/unbonded).
                 * @default BOND_STATUS_UNSPECIFIED
                 * @enum {string}
                 */
                status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
                /** @description tokens define the delegated tokens (incl. self-delegation). */
                tokens?: string;
                /** @description delegator_shares defines total shares issued to a validator's delegators. */
                delegator_shares?: string;
                /** @description description defines the description terms for the validator. */
                description?: {
                  /** @description moniker defines a human-readable name for the validator. */
                  moniker?: string;
                  /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
                  identity?: string;
                  /** @description website defines an optional website link. */
                  website?: string;
                  /** @description security_contact defines an optional email for security contact. */
                  security_contact?: string;
                  /** @description details define other optional details. */
                  details?: string;
                };
                /**
                 * Format: int64
                 * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
                 */
                unbonding_height?: string;
                /**
                 * Format: date-time
                 * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
                 */
                unbonding_time?: string;
                /** @description commission defines the commission parameters. */
                commission?: {
                  /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
                  commission_rates?: {
                    /** @description rate is the commission rate charged to delegators, as a fraction. */
                    rate?: string;
                    /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
                    max_rate?: string;
                    /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
                    max_change_rate?: string;
                  };
                  /**
                   * Format: date-time
                   * @description update_time is the last time the commission rate was changed.
                   */
                  update_time?: string;
                };
                /**
                 * @description min_self_delegation is the validator's self declared minimum self delegation.
                 *
                 * Since: cosmos-sdk 0.46
                 */
                min_self_delegation?: string;
                /**
                 * strictly positive if this validator's unbonding has been stopped by external modules
                 * Format: int64
                 */
                unbonding_on_hold_ref_count?: string;
                /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
                unbonding_ids?: string[];
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * DelegatorValidator queries validator info for given delegator validator
   * pair.
   */
  DelegatorValidator: {
    parameters: {
      path: {
        /** @description delegator_addr defines the delegator address to query for. */
        delegator_addr: string;
        /** @description validator_addr defines the validator address to query for. */
        validator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Validator defines a validator, together with the total amount of the
             * Validator's bond shares and their exchange rate to coins. Slashing results in
             * a decrease in the exchange rate, allowing correct calculation of future
             * undelegations without iterating over delegators. When coins are delegated to
             * this validator, the validator is credited with a delegation whose number of
             * bond shares is based on the amount of coins delegated divided by the current
             * exchange rate. Voting power can be calculated as total bonded shares
             * multiplied by exchange rate.
             */
            validator?: {
              /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
              operator_address?: string;
              /**
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              consensus_pubkey?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
              /** @description jailed defined whether the validator has been jailed from bonded status or not. */
              jailed?: boolean;
              /**
               * @description status is the validator status (bonded/unbonding/unbonded).
               * @default BOND_STATUS_UNSPECIFIED
               * @enum {string}
               */
              status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
              /** @description tokens define the delegated tokens (incl. self-delegation). */
              tokens?: string;
              /** @description delegator_shares defines total shares issued to a validator's delegators. */
              delegator_shares?: string;
              /** @description description defines the description terms for the validator. */
              description?: {
                /** @description moniker defines a human-readable name for the validator. */
                moniker?: string;
                /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
                identity?: string;
                /** @description website defines an optional website link. */
                website?: string;
                /** @description security_contact defines an optional email for security contact. */
                security_contact?: string;
                /** @description details define other optional details. */
                details?: string;
              };
              /**
               * Format: int64
               * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
               */
              unbonding_height?: string;
              /**
               * Format: date-time
               * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
               */
              unbonding_time?: string;
              /** @description commission defines the commission parameters. */
              commission?: {
                /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
                commission_rates?: {
                  /** @description rate is the commission rate charged to delegators, as a fraction. */
                  rate?: string;
                  /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
                  max_rate?: string;
                  /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
                  max_change_rate?: string;
                };
                /**
                 * Format: date-time
                 * @description update_time is the last time the commission rate was changed.
                 */
                update_time?: string;
              };
              /**
               * @description min_self_delegation is the validator's self declared minimum self delegation.
               *
               * Since: cosmos-sdk 0.46
               */
              min_self_delegation?: string;
              /**
               * strictly positive if this validator's unbonding has been stopped by external modules
               * Format: int64
               */
              unbonding_on_hold_ref_count?: string;
              /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
              unbonding_ids?: string[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** HistoricalInfo queries the historical info for given height. */
  HistoricalInfo: {
    parameters: {
      path: {
        /** @description height defines at which height to query the historical info. */
        height: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description hist defines the historical info at the given height. */
            hist?: {
              /** @description Header defines the structure of a block header. */
              header?: {
                /**
                 * basic block info
                 * @description Consensus captures the consensus rules for processing a block in the blockchain,
                 * including all blockchain data structures and the rules of the application's
                 * state transition machine.
                 */
                version?: {
                  /** Format: uint64 */
                  block?: string;
                  /** Format: uint64 */
                  app?: string;
                };
                chain_id?: string;
                /** Format: int64 */
                height?: string;
                /** Format: date-time */
                time?: string;
                /** prev block info */
                last_block_id?: {
                  /** Format: byte */
                  hash?: string;
                  /** PartsetHeader */
                  part_set_header?: {
                    /** Format: int64 */
                    total?: number;
                    /** Format: byte */
                    hash?: string;
                  };
                };
                /**
                 * hashes of block data
                 * Format: byte
                 */
                last_commit_hash?: string;
                /** Format: byte */
                data_hash?: string;
                /**
                 * hashes from the app output from the prev block
                 * Format: byte
                 */
                validators_hash?: string;
                /** Format: byte */
                next_validators_hash?: string;
                /** Format: byte */
                consensus_hash?: string;
                /** Format: byte */
                app_hash?: string;
                /** Format: byte */
                last_results_hash?: string;
                /**
                 * consensus info
                 * Format: byte
                 */
                evidence_hash?: string;
                /** Format: byte */
                proposer_address?: string;
              };
              valset?: ({
                  /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
                  operator_address?: string;
                  /**
                   * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                   * URL that describes the type of the serialized message.
                   *
                   * Protobuf library provides support to pack/unpack Any values in the form
                   * of utility functions or additional generated methods of the Any type.
                   *
                   * Example 1: Pack and unpack a message in C++.
                   *
                   *     Foo foo = ...;
                   *     Any any;
                   *     any.PackFrom(foo);
                   *     ...
                   *     if (any.UnpackTo(&foo)) {
                   *       ...
                   *     }
                   *
                   * Example 2: Pack and unpack a message in Java.
                   *
                   *     Foo foo = ...;
                   *     Any any = Any.pack(foo);
                   *     ...
                   *     if (any.is(Foo.class)) {
                   *       foo = any.unpack(Foo.class);
                   *     }
                   *     // or ...
                   *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                   *       foo = any.unpack(Foo.getDefaultInstance());
                   *     }
                   *
                   * Example 3: Pack and unpack a message in Python.
                   *
                   *     foo = Foo(...)
                   *     any = Any()
                   *     any.Pack(foo)
                   *     ...
                   *     if any.Is(Foo.DESCRIPTOR):
                   *       any.Unpack(foo)
                   *       ...
                   *
                   * Example 4: Pack and unpack a message in Go
                   *
                   *      foo := &pb.Foo{...}
                   *      any, err := anypb.New(foo)
                   *      if err != nil {
                   *        ...
                   *      }
                   *      ...
                   *      foo := &pb.Foo{}
                   *      if err := any.UnmarshalTo(foo); err != nil {
                   *        ...
                   *      }
                   *
                   * The pack methods provided by protobuf library will by default use
                   * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                   * methods only use the fully qualified type name after the last '/'
                   * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                   * name "y.z".
                   *
                   * JSON
                   *
                   * The JSON representation of an `Any` value uses the regular
                   * representation of the deserialized, embedded message, with an
                   * additional field `@type` which contains the type URL. Example:
                   *
                   *     package google.profile;
                   *     message Person {
                   *       string first_name = 1;
                   *       string last_name = 2;
                   *     }
                   *
                   *     {
                   *       "@type": "type.googleapis.com/google.profile.Person",
                   *       "firstName": <string>,
                   *       "lastName": <string>
                   *     }
                   *
                   * If the embedded message type is well-known and has a custom JSON
                   * representation, that representation will be embedded adding a field
                   * `value` which holds the custom JSON in addition to the `@type`
                   * field. Example (for message [google.protobuf.Duration][]):
                   *
                   *     {
                   *       "@type": "type.googleapis.com/google.protobuf.Duration",
                   *       "value": "1.212s"
                   *     }
                   */
                  consensus_pubkey?: {
                    /**
                     * @description A URL/resource name that uniquely identifies the type of the serialized
                     * protocol buffer message. This string must contain at least
                     * one "/" character. The last segment of the URL's path must represent
                     * the fully qualified name of the type (as in
                     * `path/google.protobuf.Duration`). The name should be in a canonical form
                     * (e.g., leading "." is not accepted).
                     *
                     * In practice, teams usually precompile into the binary all types that they
                     * expect it to use in the context of Any. However, for URLs which use the
                     * scheme `http`, `https`, or no scheme, one can optionally set up a type
                     * server that maps type URLs to message definitions as follows:
                     *
                     * * If no scheme is provided, `https` is assumed.
                     * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                     *   value in binary format, or produce an error.
                     * * Applications are allowed to cache lookup results based on the
                     *   URL, or have them precompiled into a binary to avoid any
                     *   lookup. Therefore, binary compatibility needs to be preserved
                     *   on changes to types. (Use versioned type names to manage
                     *   breaking changes.)
                     *
                     * Note: this functionality is not currently available in the official
                     * protobuf release, and it is not used for type URLs beginning with
                     * type.googleapis.com.
                     *
                     * Schemes other than `http`, `https` (or the empty scheme) might be
                     * used with implementation specific semantics.
                     */
                    type_url?: string;
                    /**
                     * Format: byte
                     * @description Must be a valid serialized protocol buffer of the above specified type.
                     */
                    value?: string;
                  };
                  /** @description jailed defined whether the validator has been jailed from bonded status or not. */
                  jailed?: boolean;
                  /**
                   * @description status is the validator status (bonded/unbonding/unbonded).
                   * @default BOND_STATUS_UNSPECIFIED
                   * @enum {string}
                   */
                  status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
                  /** @description tokens define the delegated tokens (incl. self-delegation). */
                  tokens?: string;
                  /** @description delegator_shares defines total shares issued to a validator's delegators. */
                  delegator_shares?: string;
                  /** @description description defines the description terms for the validator. */
                  description?: {
                    /** @description moniker defines a human-readable name for the validator. */
                    moniker?: string;
                    /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
                    identity?: string;
                    /** @description website defines an optional website link. */
                    website?: string;
                    /** @description security_contact defines an optional email for security contact. */
                    security_contact?: string;
                    /** @description details define other optional details. */
                    details?: string;
                  };
                  /**
                   * Format: int64
                   * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
                   */
                  unbonding_height?: string;
                  /**
                   * Format: date-time
                   * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
                   */
                  unbonding_time?: string;
                  /** @description commission defines the commission parameters. */
                  commission?: {
                    /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
                    commission_rates?: {
                      /** @description rate is the commission rate charged to delegators, as a fraction. */
                      rate?: string;
                      /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
                      max_rate?: string;
                      /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
                      max_change_rate?: string;
                    };
                    /**
                     * Format: date-time
                     * @description update_time is the last time the commission rate was changed.
                     */
                    update_time?: string;
                  };
                  /**
                   * @description min_self_delegation is the validator's self declared minimum self delegation.
                   *
                   * Since: cosmos-sdk 0.46
                   */
                  min_self_delegation?: string;
                  /**
                   * strictly positive if this validator's unbonding has been stopped by external modules
                   * Format: int64
                   */
                  unbonding_on_hold_ref_count?: string;
                  /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
                  unbonding_ids?: string[];
                })[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Parameters queries the staking parameters. */
  StakingParams: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description params holds all the parameters of this module. */
            params?: {
              /** @description unbonding_time is the time duration of unbonding. */
              unbonding_time?: string;
              /**
               * Format: int64
               * @description max_validators is the maximum number of validators.
               */
              max_validators?: number;
              /**
               * Format: int64
               * @description max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
               */
              max_entries?: number;
              /**
               * Format: int64
               * @description historical_entries is the number of historical entries to persist.
               */
              historical_entries?: number;
              /** @description bond_denom defines the bondable coin denomination. */
              bond_denom?: string;
              /** min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators */
              min_commission_rate?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Pool queries the pool info. */
  Pool: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description pool defines the pool info. */
            pool?: {
              not_bonded_tokens?: string;
              bonded_tokens?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Validators queries all validators that match the given status.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  Validators: {
    parameters?: {
      query?: {
        /** @description status enables to query for validators matching a given status. */
        status?: string;
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description validators contains all the queried validators. */
            validators?: ({
                /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
                operator_address?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                consensus_pubkey?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /** @description jailed defined whether the validator has been jailed from bonded status or not. */
                jailed?: boolean;
                /**
                 * @description status is the validator status (bonded/unbonding/unbonded).
                 * @default BOND_STATUS_UNSPECIFIED
                 * @enum {string}
                 */
                status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
                /** @description tokens define the delegated tokens (incl. self-delegation). */
                tokens?: string;
                /** @description delegator_shares defines total shares issued to a validator's delegators. */
                delegator_shares?: string;
                /** @description description defines the description terms for the validator. */
                description?: {
                  /** @description moniker defines a human-readable name for the validator. */
                  moniker?: string;
                  /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
                  identity?: string;
                  /** @description website defines an optional website link. */
                  website?: string;
                  /** @description security_contact defines an optional email for security contact. */
                  security_contact?: string;
                  /** @description details define other optional details. */
                  details?: string;
                };
                /**
                 * Format: int64
                 * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
                 */
                unbonding_height?: string;
                /**
                 * Format: date-time
                 * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
                 */
                unbonding_time?: string;
                /** @description commission defines the commission parameters. */
                commission?: {
                  /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
                  commission_rates?: {
                    /** @description rate is the commission rate charged to delegators, as a fraction. */
                    rate?: string;
                    /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
                    max_rate?: string;
                    /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
                    max_change_rate?: string;
                  };
                  /**
                   * Format: date-time
                   * @description update_time is the last time the commission rate was changed.
                   */
                  update_time?: string;
                };
                /**
                 * @description min_self_delegation is the validator's self declared minimum self delegation.
                 *
                 * Since: cosmos-sdk 0.46
                 */
                min_self_delegation?: string;
                /**
                 * strictly positive if this validator's unbonding has been stopped by external modules
                 * Format: int64
                 */
                unbonding_on_hold_ref_count?: string;
                /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
                unbonding_ids?: string[];
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Validator queries validator info for given validator address. */
  Validator: {
    parameters: {
      path: {
        /** @description validator_addr defines the validator address to query for. */
        validator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Validator defines a validator, together with the total amount of the
             * Validator's bond shares and their exchange rate to coins. Slashing results in
             * a decrease in the exchange rate, allowing correct calculation of future
             * undelegations without iterating over delegators. When coins are delegated to
             * this validator, the validator is credited with a delegation whose number of
             * bond shares is based on the amount of coins delegated divided by the current
             * exchange rate. Voting power can be calculated as total bonded shares
             * multiplied by exchange rate.
             */
            validator?: {
              /** @description operator_address defines the address of the validator's operator; bech encoded in JSON. */
              operator_address?: string;
              /**
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              consensus_pubkey?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
              /** @description jailed defined whether the validator has been jailed from bonded status or not. */
              jailed?: boolean;
              /**
               * @description status is the validator status (bonded/unbonding/unbonded).
               * @default BOND_STATUS_UNSPECIFIED
               * @enum {string}
               */
              status?: "BOND_STATUS_UNSPECIFIED" | "BOND_STATUS_UNBONDED" | "BOND_STATUS_UNBONDING" | "BOND_STATUS_BONDED";
              /** @description tokens define the delegated tokens (incl. self-delegation). */
              tokens?: string;
              /** @description delegator_shares defines total shares issued to a validator's delegators. */
              delegator_shares?: string;
              /** @description description defines the description terms for the validator. */
              description?: {
                /** @description moniker defines a human-readable name for the validator. */
                moniker?: string;
                /** @description identity defines an optional identity signature (ex. UPort or Keybase). */
                identity?: string;
                /** @description website defines an optional website link. */
                website?: string;
                /** @description security_contact defines an optional email for security contact. */
                security_contact?: string;
                /** @description details define other optional details. */
                details?: string;
              };
              /**
               * Format: int64
               * @description unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
               */
              unbonding_height?: string;
              /**
               * Format: date-time
               * @description unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
               */
              unbonding_time?: string;
              /** @description commission defines the commission parameters. */
              commission?: {
                /** @description commission_rates defines the initial commission rates to be used for creating a validator. */
                commission_rates?: {
                  /** @description rate is the commission rate charged to delegators, as a fraction. */
                  rate?: string;
                  /** @description max_rate defines the maximum commission rate which validator can ever charge, as a fraction. */
                  max_rate?: string;
                  /** @description max_change_rate defines the maximum daily increase of the validator commission, as a fraction. */
                  max_change_rate?: string;
                };
                /**
                 * Format: date-time
                 * @description update_time is the last time the commission rate was changed.
                 */
                update_time?: string;
              };
              /**
               * @description min_self_delegation is the validator's self declared minimum self delegation.
               *
               * Since: cosmos-sdk 0.46
               */
              min_self_delegation?: string;
              /**
               * strictly positive if this validator's unbonding has been stopped by external modules
               * Format: int64
               */
              unbonding_on_hold_ref_count?: string;
              /** list of unbonding ids, each uniquely identifing an unbonding of this validator */
              unbonding_ids?: string[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * ValidatorDelegations queries delegate info for given validator.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  ValidatorDelegations: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description validator_addr defines the validator address to query for. */
        validator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            delegation_responses?: {
                /**
                 * @description Delegation represents the bond with tokens held by an account. It is
                 * owned by one delegator, and is associated with the voting power of one
                 * validator.
                 */
                delegation?: {
                  /** @description delegator_address is the encoded address of the delegator. */
                  delegator_address?: string;
                  /** @description validator_address is the encoded address of the validator. */
                  validator_address?: string;
                  /** @description shares define the delegation shares received. */
                  shares?: string;
                };
                /**
                 * @description Coin defines a token with a denomination and an amount.
                 *
                 * NOTE: The amount field is an Int which implements the custom method
                 * signatures required by gogoproto.
                 */
                balance?: {
                  denom?: string;
                  amount?: string;
                };
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Delegation queries delegate info for given validator delegator pair. */
  Delegation: {
    parameters: {
      path: {
        /** @description validator_addr defines the validator address to query for. */
        validator_addr: string;
        /** @description delegator_addr defines the delegator address to query for. */
        delegator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description DelegationResponse is equivalent to Delegation except that it contains a
             * balance in addition to shares which is more suitable for client responses.
             */
            delegation_response?: {
              /**
               * @description Delegation represents the bond with tokens held by an account. It is
               * owned by one delegator, and is associated with the voting power of one
               * validator.
               */
              delegation?: {
                /** @description delegator_address is the encoded address of the delegator. */
                delegator_address?: string;
                /** @description validator_address is the encoded address of the validator. */
                validator_address?: string;
                /** @description shares define the delegation shares received. */
                shares?: string;
              };
              /**
               * @description Coin defines a token with a denomination and an amount.
               *
               * NOTE: The amount field is an Int which implements the custom method
               * signatures required by gogoproto.
               */
              balance?: {
                denom?: string;
                amount?: string;
              };
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * UnbondingDelegation queries unbonding info for given validator delegator
   * pair.
   */
  UnbondingDelegation: {
    parameters: {
      path: {
        /** @description validator_addr defines the validator address to query for. */
        validator_addr: string;
        /** @description delegator_addr defines the delegator address to query for. */
        delegator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description UnbondingDelegation stores all of a single delegator's unbonding bonds
             * for a single validator in an time-ordered list.
             */
            unbond?: {
              /** @description delegator_address is the encoded address of the delegator. */
              delegator_address?: string;
              /** @description validator_address is the encoded address of the validator. */
              validator_address?: string;
              /** @description entries are the unbonding delegation entries. */
              entries?: {
                  /**
                   * Format: int64
                   * @description creation_height is the height which the unbonding took place.
                   */
                  creation_height?: string;
                  /**
                   * Format: date-time
                   * @description completion_time is the unix time for unbonding completion.
                   */
                  completion_time?: string;
                  /** @description initial_balance defines the tokens initially scheduled to receive at completion. */
                  initial_balance?: string;
                  /** @description balance defines the tokens to receive at completion. */
                  balance?: string;
                  /**
                   * Incrementing id that uniquely identifies this entry
                   * Format: uint64
                   */
                  unbonding_id?: string;
                  /**
                   * Strictly positive if this entry's unbonding has been stopped by external modules
                   * Format: int64
                   */
                  unbonding_on_hold_ref_count?: string;
                }[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * ValidatorUnbondingDelegations queries unbonding delegations of a validator.
   * @description When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   */
  ValidatorUnbondingDelegations: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description validator_addr defines the validator address to query for. */
        validator_addr: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            unbonding_responses?: {
                /** @description delegator_address is the encoded address of the delegator. */
                delegator_address?: string;
                /** @description validator_address is the encoded address of the validator. */
                validator_address?: string;
                /** @description entries are the unbonding delegation entries. */
                entries?: {
                    /**
                     * Format: int64
                     * @description creation_height is the height which the unbonding took place.
                     */
                    creation_height?: string;
                    /**
                     * Format: date-time
                     * @description completion_time is the unix time for unbonding completion.
                     */
                    completion_time?: string;
                    /** @description initial_balance defines the tokens initially scheduled to receive at completion. */
                    initial_balance?: string;
                    /** @description balance defines the tokens to receive at completion. */
                    balance?: string;
                    /**
                     * Incrementing id that uniquely identifies this entry
                     * Format: uint64
                     */
                    unbonding_id?: string;
                    /**
                     * Strictly positive if this entry's unbonding has been stopped by external modules
                     * Format: int64
                     */
                    unbonding_on_hold_ref_count?: string;
                  }[];
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * TxDecode decodes the transaction.
   * @description Since: cosmos-sdk 0.47
   */
  TxDecode: {
    requestBody: {
      content: {
        "*/*": {
          /**
           * Format: byte
           * @description tx_bytes is the raw transaction.
           */
          tx_bytes?: string;
        };
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": components["schemas"]["cosmos.tx.v1beta1.TxDecodeResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
   * @description Since: cosmos-sdk 0.47
   */
  TxDecodeAmino: {
    requestBody: {
      content: {
        "*/*": {
          /** Format: byte */
          amino_binary?: string;
        };
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            amino_json?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * TxEncode encodes the transaction.
   * @description Since: cosmos-sdk 0.47
   */
  TxEncode: {
    requestBody: {
      content: {
        "*/*": components["schemas"]["cosmos.tx.v1beta1.TxEncodeRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * Format: byte
             * @description tx_bytes is the encoded transaction bytes.
             */
            tx_bytes?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
   * @description Since: cosmos-sdk 0.47
   */
  TxEncodeAmino: {
    requestBody: {
      content: {
        "*/*": {
          amino_json?: string;
        };
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** Format: byte */
            amino_binary?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Simulate simulates executing a transaction for estimating gas usage. */
  Simulate: {
    requestBody: {
      content: {
        "*/*": components["schemas"]["cosmos.tx.v1beta1.SimulateRequest"];
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description gas_info is the information about gas used in the simulation. */
            gas_info?: {
              /**
               * Format: uint64
               * @description GasWanted is the maximum units of work we allow this tx to perform.
               */
              gas_wanted?: string;
              /**
               * Format: uint64
               * @description GasUsed is the amount of gas actually consumed.
               */
              gas_used?: string;
            };
            /** @description result is the result of the simulation. */
            result?: {
              /**
               * Format: byte
               * @description Data is any data returned from message or handler execution. It MUST be
               * length prefixed in order to separate data from multiple message executions.
               * Deprecated. This field is still populated, but prefer msg_response instead
               * because it also contains the Msg response typeURL.
               */
              data?: string;
              /** @description Log contains the log information from message or handler execution. */
              log?: string;
              /**
               * @description Events contains a slice of Event objects that were emitted during message
               * or handler execution.
               */
              events?: {
                  type?: string;
                  attributes?: {
                      key?: string;
                      value?: string;
                      index?: boolean;
                    }[];
                }[];
              /**
               * @description msg_responses contains the Msg handler responses type packed in Anys.
               *
               * Since: cosmos-sdk 0.46
               */
              msg_responses?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                }[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GetTxsEvent fetches txs by event. */
  GetTxsEvent: {
    parameters?: {
      query?: {
        /**
         * @description events is the list of transaction event type.
         * Deprecated post v0.47.x: use query instead, which should contain a valid
         * events query.
         */
        events?: string[];
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
        /**
         * @description  - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
         * to ASC in this case.
         *  - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
         *  - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
         */
        order_by?: "ORDER_BY_UNSPECIFIED" | "ORDER_BY_ASC" | "ORDER_BY_DESC";
        /**
         * @description page is the page number to query, starts at 1. If not provided, will
         * default to first page.
         */
        page?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        limit?: string;
        /**
         * @description query defines the transaction event query that is proxied to Tendermint's
         * TxSearch RPC method. The query must be valid.
         *
         * Since cosmos-sdk 0.50
         */
        query?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": components["schemas"]["cosmos.tx.v1beta1.GetTxsEventResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** BroadcastTx broadcast transaction. */
  BroadcastTx: {
    requestBody: {
      content: {
        "*/*": {
          /**
           * Format: byte
           * @description tx_bytes is the raw transaction.
           */
          tx_bytes?: string;
          /**
           * @description BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
           * method.
           *
           *  - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
           *  - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
           * BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
           *  - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
           * for a CheckTx execution response only.
           *  - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
           * returns immediately.
           * @default BROADCAST_MODE_UNSPECIFIED
           * @enum {string}
           */
          mode?: "BROADCAST_MODE_UNSPECIFIED" | "BROADCAST_MODE_BLOCK" | "BROADCAST_MODE_SYNC" | "BROADCAST_MODE_ASYNC";
        };
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description TxResponse defines a structure containing relevant tx data and metadata. The
             * tags are stringified and the log is JSON decoded.
             */
            tx_response?: {
              /**
               * The block height
               * Format: int64
               */
              height?: string;
              /** @description The transaction hash. */
              txhash?: string;
              /** Namespace for the Code */
              codespace?: string;
              /**
               * Format: int64
               * @description Response code.
               */
              code?: number;
              /** @description Result bytes, if any. */
              data?: string;
              /**
               * @description The output of the application's logger (raw string). May be
               * non-deterministic.
               */
              raw_log?: string;
              /** @description The output of the application's logger (typed). May be non-deterministic. */
              logs?: {
                  /** Format: int64 */
                  msg_index?: number;
                  log?: string;
                  /**
                   * @description Events contains a slice of Event objects that were emitted during some
                   * execution.
                   */
                  events?: {
                      type?: string;
                      attributes?: {
                          key?: string;
                          value?: string;
                        }[];
                    }[];
                }[];
              /** @description Additional information. May be non-deterministic. */
              info?: string;
              /**
               * Format: int64
               * @description Amount of gas requested for transaction.
               */
              gas_wanted?: string;
              /**
               * Format: int64
               * @description Amount of gas consumed by transaction.
               */
              gas_used?: string;
              /**
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              tx?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
              /**
               * @description Time of the previous block. For heights > 1, it's the weighted median of
               * the timestamps of the valid votes in the block.LastCommit. For height == 1,
               * it's genesis time.
               */
              timestamp?: string;
              /**
               * @description Events defines all the events emitted by processing a transaction. Note,
               * these events include those emitted by processing all the messages and those
               * emitted from the ante. Whereas Logs contains the events, with
               * additional metadata, emitted only by processing the messages.
               *
               * Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
               */
              events?: {
                  type?: string;
                  attributes?: {
                      key?: string;
                      value?: string;
                      index?: boolean;
                    }[];
                }[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * GetBlockWithTxs fetches a block with decoded txs.
   * @description Since: cosmos-sdk 0.45.2
   */
  GetBlockWithTxs: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description height is the height of the block to query. */
        height: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": components["schemas"]["cosmos.tx.v1beta1.GetBlockWithTxsResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GetTx fetches a tx by hash. */
  GetTx: {
    parameters: {
      path: {
        /** @description hash is the tx hash to query, encoded as a hex string. */
        hash: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": components["schemas"]["cosmos.tx.v1beta1.GetTxResponse"];
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** AppliedPlan queries a previously applied upgrade plan by its name. */
  AppliedPlan: {
    parameters: {
      path: {
        /** @description name is the name of the applied plan to query for. */
        name: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * Format: int64
             * @description height is the block height at which the plan was applied.
             */
            height?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Returns the account with authority to conduct upgrades
   * @description Since: cosmos-sdk 0.46
   */
  Authority: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            address?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** CurrentPlan queries the current upgrade plan. */
  CurrentPlan: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description plan is the current upgrade plan. */
            plan?: {
              /**
               * @description Sets the name for the upgrade. This name will be used by the upgraded
               * version of the software to apply any special "on-upgrade" commands during
               * the first BeginBlock method after the upgrade is applied. It is also used
               * to detect whether a software version can handle a given upgrade. If no
               * upgrade handler with this name has been set in the software, it will be
               * assumed that the software is out-of-date when the upgrade Time or Height is
               * reached and the software will exit.
               */
              name?: string;
              /**
               * Format: date-time
               * @description Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
               * has been removed from the SDK.
               * If this field is not empty, an error will be thrown.
               */
              time?: string;
              /**
               * Format: int64
               * @description The height at which the upgrade must be performed.
               */
              height?: string;
              /**
               * Any application specific upgrade info to be included on-chain
               * such as a git commit that validators could automatically upgrade to
               */
              info?: string;
              /**
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              upgraded_client_state?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * ModuleVersions queries the list of module versions from state.
   * @description Since: cosmos-sdk 0.43
   */
  ModuleVersions: {
    parameters?: {
      query?: {
        /**
         * @description module_name is a field to query a specific module
         * consensus version from state. Leaving this empty will
         * fetch the full list of module versions from state.
         */
        module_name?: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description module_versions is a list of module names with their consensus versions. */
            module_versions?: {
                /** name of the app module */
                name?: string;
                /**
                 * consensus version of the app module
                 * Format: uint64
                 */
                version?: string;
              }[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * UpgradedConsensusState queries the consensus state that will serve
   * as a trusted kernel for the next version of this chain. It will only be
   * stored at the last height of this chain.
   * UpgradedConsensusState RPC not supported with legacy querier
   * This rpc is deprecated now that IBC has its own replacement
   * (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
   */
  UpgradedConsensusState: {
    parameters: {
      path: {
        /**
         * @description last height of the current chain must be sent in request
         * as this is the height under which next consensus state is stored
         */
        last_height: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * Since: cosmos-sdk 0.43
             * Format: byte
             */
            upgraded_consensus_state?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Returns list of `Authorization`, granted to the grantee by the granter. */
  Grants: {
    parameters?: {
      query?: {
        granter?: string;
        grantee?: string;
        /** @description Optional, msg_type_url, when set, will query only grants matching given msg type. */
        msg_type_url?: string;
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description authorizations is a list of grants granted for grantee by granter. */
            grants?: ({
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                authorization?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /**
                 * time when the grant will expire and will be pruned. If null, then the grant
                 * doesn't have a time expiration (other conditions  in `authorization`
                 * may apply to invalidate the grant)
                 * Format: date-time
                 */
                expiration?: string;
              })[];
            /** @description pagination defines an pagination for the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * GranteeGrants returns a list of `GrantAuthorization` by grantee.
   * @description Since: cosmos-sdk 0.46
   */
  GranteeGrants: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        grantee: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description grants is a list of grants granted to the grantee. */
            grants?: ({
                granter?: string;
                grantee?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                authorization?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /** Format: date-time */
                expiration?: string;
              })[];
            /** @description pagination defines an pagination for the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * GranterGrants returns list of `GrantAuthorization`, granted by granter.
   * @description Since: cosmos-sdk 0.46
   */
  GranterGrants: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        granter: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description grants is a list of grants granted by the granter. */
            grants?: ({
                granter?: string;
                grantee?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                authorization?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /** Format: date-time */
                expiration?: string;
              })[];
            /** @description pagination defines an pagination for the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Allowance returns granted allwance to the grantee by the granter. */
  Allowance: {
    parameters: {
      path: {
        /** @description granter is the address of the user granting an allowance of their funds. */
        granter: string;
        /** @description grantee is the address of the user being granted an allowance of another user's funds. */
        grantee: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * Grant is stored in the KVStore to record a grant with full context
             * @description allowance is a allowance granted for grantee by granter.
             */
            allowance?: {
              /** @description granter is the address of the user granting an allowance of their funds. */
              granter?: string;
              /** @description grantee is the address of the user being granted an allowance of another user's funds. */
              grantee?: string;
              /** @description allowance can be any of basic, periodic, allowed fee allowance. */
              allowance?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Allowances returns all the grants for the given grantee address. */
  Allowances: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        grantee: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description allowances are allowance's granted for grantee by granter. */
            allowances?: {
                /** @description granter is the address of the user granting an allowance of their funds. */
                granter?: string;
                /** @description grantee is the address of the user being granted an allowance of another user's funds. */
                grantee?: string;
                /** @description allowance can be any of basic, periodic, allowed fee allowance. */
                allowance?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
              }[];
            /** @description pagination defines an pagination for the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * AllowancesByGranter returns all the grants given by an address
   * @description Since: cosmos-sdk 0.46
   */
  AllowancesByGranter: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        granter: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description allowances that have been issued by the granter. */
            allowances?: {
                /** @description granter is the address of the user granting an allowance of their funds. */
                granter?: string;
                /** @description grantee is the address of the user being granted an allowance of another user's funds. */
                grantee?: string;
                /** @description allowance can be any of basic, periodic, allowed fee allowance. */
                allowance?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
              }[];
            /** @description pagination defines an pagination for the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721 */
  NftBalance: {
    parameters: {
      path: {
        /** @description owner is the owner address of the nft */
        owner: string;
        /** @description class_id associated with the nft */
        class_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * amount is the number of all NFTs of a given class owned by the owner
             * Format: uint64
             */
            amount?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Classes queries all NFT classes */
  Classes: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description class defines the class of the nft type. */
            classes?: ({
                /** id defines the unique identifier of the NFT classification, similar to the contract address of ERC721 */
                id?: string;
                /** name defines the human-readable name of the NFT classification. Optional */
                name?: string;
                /** symbol is an abbreviated name for nft classification. Optional */
                symbol?: string;
                /** description is a brief description of nft classification. Optional */
                description?: string;
                /** uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional */
                uri?: string;
                /** uri_hash is a hash of the document pointed by uri. Optional */
                uri_hash?: string;
                /**
                 * data is the app specific metadata of the NFT class. Optional
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                data?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Class queries an NFT class based on its id */
  Class: {
    parameters: {
      path: {
        /** @description class_id associated with the nft */
        class_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description Class defines the class of the nft type. */
            class?: {
              /** id defines the unique identifier of the NFT classification, similar to the contract address of ERC721 */
              id?: string;
              /** name defines the human-readable name of the NFT classification. Optional */
              name?: string;
              /** symbol is an abbreviated name for nft classification. Optional */
              symbol?: string;
              /** description is a brief description of nft classification. Optional */
              description?: string;
              /** uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional */
              uri?: string;
              /** uri_hash is a hash of the document pointed by uri. Optional */
              uri_hash?: string;
              /**
               * data is the app specific metadata of the NFT class. Optional
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              data?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in
   * ERC721Enumerable
   */
  NFTs: {
    parameters?: {
      query?: {
        /** @description class_id associated with the nft. */
        class_id?: string;
        /** @description owner is the owner address of the nft. */
        owner?: string;
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** NFT defines the NFT */
            nfts?: ({
                /** class_id associated with the NFT, similar to the contract address of ERC721 */
                class_id?: string;
                /** id is a unique identifier of the NFT */
                id?: string;
                /** uri for the NFT metadata stored off chain */
                uri?: string;
                /** uri_hash is a hash of the document pointed by uri */
                uri_hash?: string;
                /**
                 * data is an app specific data of the NFT. Optional
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                data?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** NFT queries an NFT based on its class and id. */
  NFT: {
    parameters: {
      path: {
        /** @description class_id associated with the nft */
        class_id: string;
        /** @description id is a unique identifier of the NFT */
        id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * owner is the owner address of the nft
             * @description NFT defines the NFT.
             */
            nft?: {
              /** class_id associated with the NFT, similar to the contract address of ERC721 */
              class_id?: string;
              /** id is a unique identifier of the NFT */
              id?: string;
              /** uri for the NFT metadata stored off chain */
              uri?: string;
              /** uri_hash is a hash of the document pointed by uri */
              uri_hash?: string;
              /**
               * data is an app specific data of the NFT. Optional
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              data?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721 */
  Owner: {
    parameters: {
      path: {
        /** @description class_id associated with the nft */
        class_id: string;
        /** @description id is a unique identifier of the NFT */
        id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** owner is the owner address of the nft */
            owner?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Supply queries the number of NFTs from the given class, same as totalSupply of ERC721. */
  Supply: {
    parameters: {
      path: {
        /** @description class_id associated with the nft */
        class_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * amount is the number of all NFTs from the given class
             * Format: uint64
             */
            amount?: string;
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GroupInfo queries group info based on group id. */
  GroupInfo: {
    parameters: {
      path: {
        /** @description group_id is the unique ID of the group. */
        group_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description info is the GroupInfo of the group. */
            info?: {
              /**
               * Format: uint64
               * @description id is the unique ID of the group.
               */
              id?: string;
              /** @description admin is the account address of the group's admin. */
              admin?: string;
              /**
               * metadata is any arbitrary metadata to attached to the group.
               * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
               */
              metadata?: string;
              /**
               * version is used to track changes to a group's membership structure that
               * would break existing proposals. Whenever any members weight is changed,
               * or any member is added or removed this version is incremented and will
               * cause proposals based on older versions of this group to fail
               * Format: uint64
               */
              version?: string;
              /** @description total_weight is the sum of the group members' weights. */
              total_weight?: string;
              /**
               * Format: date-time
               * @description created_at is a timestamp specifying when a group was created.
               */
              created_at?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GroupMembers queries members of a group by group id. */
  GroupMembers: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description group_id is the unique ID of the group. */
        group_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description members are the members of the group with given group_id. */
            members?: {
                /**
                 * Format: uint64
                 * @description group_id is the unique ID of the group.
                 */
                group_id?: string;
                /** @description member is the member data. */
                member?: {
                  /** @description address is the member's account address. */
                  address?: string;
                  /** @description weight is the member's voting weight that should be greater than 0. */
                  weight?: string;
                  /** @description metadata is any arbitrary metadata attached to the member. */
                  metadata?: string;
                  /**
                   * Format: date-time
                   * @description added_at is a timestamp specifying when a member was added.
                   */
                  added_at?: string;
                };
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GroupPoliciesByAdmin queries group policies by admin address. */
  GroupPoliciesByAdmin: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description admin is the admin address of the group policy. */
        admin: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description group_policies are the group policies info with provided admin. */
            group_policies?: ({
                /** @description address is the account address of group policy. */
                address?: string;
                /**
                 * Format: uint64
                 * @description group_id is the unique ID of the group.
                 */
                group_id?: string;
                /** @description admin is the account address of the group admin. */
                admin?: string;
                /**
                 * metadata is any arbitrary metadata attached to the group policy.
                 * the recommended format of the metadata is to be found here:
                 * https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
                 */
                metadata?: string;
                /**
                 * Format: uint64
                 * @description version is used to track changes to a group's GroupPolicyInfo structure that
                 * would create a different result on a running proposal.
                 */
                version?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                decision_policy?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /**
                 * Format: date-time
                 * @description created_at is a timestamp specifying when a group policy was created.
                 */
                created_at?: string;
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GroupPoliciesByGroup queries group policies by group id. */
  GroupPoliciesByGroup: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description group_id is the unique ID of the group policy's group. */
        group_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description group_policies are the group policies info associated with the provided group. */
            group_policies?: ({
                /** @description address is the account address of group policy. */
                address?: string;
                /**
                 * Format: uint64
                 * @description group_id is the unique ID of the group.
                 */
                group_id?: string;
                /** @description admin is the account address of the group admin. */
                admin?: string;
                /**
                 * metadata is any arbitrary metadata attached to the group policy.
                 * the recommended format of the metadata is to be found here:
                 * https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
                 */
                metadata?: string;
                /**
                 * Format: uint64
                 * @description version is used to track changes to a group's GroupPolicyInfo structure that
                 * would create a different result on a running proposal.
                 */
                version?: string;
                /**
                 * @description `Any` contains an arbitrary serialized protocol buffer message along with a
                 * URL that describes the type of the serialized message.
                 *
                 * Protobuf library provides support to pack/unpack Any values in the form
                 * of utility functions or additional generated methods of the Any type.
                 *
                 * Example 1: Pack and unpack a message in C++.
                 *
                 *     Foo foo = ...;
                 *     Any any;
                 *     any.PackFrom(foo);
                 *     ...
                 *     if (any.UnpackTo(&foo)) {
                 *       ...
                 *     }
                 *
                 * Example 2: Pack and unpack a message in Java.
                 *
                 *     Foo foo = ...;
                 *     Any any = Any.pack(foo);
                 *     ...
                 *     if (any.is(Foo.class)) {
                 *       foo = any.unpack(Foo.class);
                 *     }
                 *     // or ...
                 *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                 *       foo = any.unpack(Foo.getDefaultInstance());
                 *     }
                 *
                 * Example 3: Pack and unpack a message in Python.
                 *
                 *     foo = Foo(...)
                 *     any = Any()
                 *     any.Pack(foo)
                 *     ...
                 *     if any.Is(Foo.DESCRIPTOR):
                 *       any.Unpack(foo)
                 *       ...
                 *
                 * Example 4: Pack and unpack a message in Go
                 *
                 *      foo := &pb.Foo{...}
                 *      any, err := anypb.New(foo)
                 *      if err != nil {
                 *        ...
                 *      }
                 *      ...
                 *      foo := &pb.Foo{}
                 *      if err := any.UnmarshalTo(foo); err != nil {
                 *        ...
                 *      }
                 *
                 * The pack methods provided by protobuf library will by default use
                 * 'type.googleapis.com/full.type.name' as the type URL and the unpack
                 * methods only use the fully qualified type name after the last '/'
                 * in the type URL, for example "foo.bar.com/x/y.z" will yield type
                 * name "y.z".
                 *
                 * JSON
                 *
                 * The JSON representation of an `Any` value uses the regular
                 * representation of the deserialized, embedded message, with an
                 * additional field `@type` which contains the type URL. Example:
                 *
                 *     package google.profile;
                 *     message Person {
                 *       string first_name = 1;
                 *       string last_name = 2;
                 *     }
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.profile.Person",
                 *       "firstName": <string>,
                 *       "lastName": <string>
                 *     }
                 *
                 * If the embedded message type is well-known and has a custom JSON
                 * representation, that representation will be embedded adding a field
                 * `value` which holds the custom JSON in addition to the `@type`
                 * field. Example (for message [google.protobuf.Duration][]):
                 *
                 *     {
                 *       "@type": "type.googleapis.com/google.protobuf.Duration",
                 *       "value": "1.212s"
                 *     }
                 */
                decision_policy?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                };
                /**
                 * Format: date-time
                 * @description created_at is a timestamp specifying when a group policy was created.
                 */
                created_at?: string;
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GroupPolicyInfo queries group policy info based on account address of group policy. */
  GroupPolicyInfo: {
    parameters: {
      path: {
        /** @description address is the account address of the group policy. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description GroupPolicyInfo represents the high-level on-chain information for a group policy. */
            info?: {
              /** @description address is the account address of group policy. */
              address?: string;
              /**
               * Format: uint64
               * @description group_id is the unique ID of the group.
               */
              group_id?: string;
              /** @description admin is the account address of the group admin. */
              admin?: string;
              /**
               * metadata is any arbitrary metadata attached to the group policy.
               * the recommended format of the metadata is to be found here:
               * https://docs.cosmos.network/v0.47/modules/group#decision-policy-1
               */
              metadata?: string;
              /**
               * Format: uint64
               * @description version is used to track changes to a group's GroupPolicyInfo structure that
               * would create a different result on a running proposal.
               */
              version?: string;
              /**
               * @description `Any` contains an arbitrary serialized protocol buffer message along with a
               * URL that describes the type of the serialized message.
               *
               * Protobuf library provides support to pack/unpack Any values in the form
               * of utility functions or additional generated methods of the Any type.
               *
               * Example 1: Pack and unpack a message in C++.
               *
               *     Foo foo = ...;
               *     Any any;
               *     any.PackFrom(foo);
               *     ...
               *     if (any.UnpackTo(&foo)) {
               *       ...
               *     }
               *
               * Example 2: Pack and unpack a message in Java.
               *
               *     Foo foo = ...;
               *     Any any = Any.pack(foo);
               *     ...
               *     if (any.is(Foo.class)) {
               *       foo = any.unpack(Foo.class);
               *     }
               *     // or ...
               *     if (any.isSameTypeAs(Foo.getDefaultInstance())) {
               *       foo = any.unpack(Foo.getDefaultInstance());
               *     }
               *
               * Example 3: Pack and unpack a message in Python.
               *
               *     foo = Foo(...)
               *     any = Any()
               *     any.Pack(foo)
               *     ...
               *     if any.Is(Foo.DESCRIPTOR):
               *       any.Unpack(foo)
               *       ...
               *
               * Example 4: Pack and unpack a message in Go
               *
               *      foo := &pb.Foo{...}
               *      any, err := anypb.New(foo)
               *      if err != nil {
               *        ...
               *      }
               *      ...
               *      foo := &pb.Foo{}
               *      if err := any.UnmarshalTo(foo); err != nil {
               *        ...
               *      }
               *
               * The pack methods provided by protobuf library will by default use
               * 'type.googleapis.com/full.type.name' as the type URL and the unpack
               * methods only use the fully qualified type name after the last '/'
               * in the type URL, for example "foo.bar.com/x/y.z" will yield type
               * name "y.z".
               *
               * JSON
               *
               * The JSON representation of an `Any` value uses the regular
               * representation of the deserialized, embedded message, with an
               * additional field `@type` which contains the type URL. Example:
               *
               *     package google.profile;
               *     message Person {
               *       string first_name = 1;
               *       string last_name = 2;
               *     }
               *
               *     {
               *       "@type": "type.googleapis.com/google.profile.Person",
               *       "firstName": <string>,
               *       "lastName": <string>
               *     }
               *
               * If the embedded message type is well-known and has a custom JSON
               * representation, that representation will be embedded adding a field
               * `value` which holds the custom JSON in addition to the `@type`
               * field. Example (for message [google.protobuf.Duration][]):
               *
               *     {
               *       "@type": "type.googleapis.com/google.protobuf.Duration",
               *       "value": "1.212s"
               *     }
               */
              decision_policy?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              };
              /**
               * Format: date-time
               * @description created_at is a timestamp specifying when a group policy was created.
               */
              created_at?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * Groups queries all groups in state.
   * @description Since: cosmos-sdk 0.47.1
   */
  Groups: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description `groups` is all the groups present in state. */
            groups?: {
                /**
                 * Format: uint64
                 * @description id is the unique ID of the group.
                 */
                id?: string;
                /** @description admin is the account address of the group's admin. */
                admin?: string;
                /**
                 * metadata is any arbitrary metadata to attached to the group.
                 * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
                 */
                metadata?: string;
                /**
                 * version is used to track changes to a group's membership structure that
                 * would break existing proposals. Whenever any members weight is changed,
                 * or any member is added or removed this version is incremented and will
                 * cause proposals based on older versions of this group to fail
                 * Format: uint64
                 */
                version?: string;
                /** @description total_weight is the sum of the group members' weights. */
                total_weight?: string;
                /**
                 * Format: date-time
                 * @description created_at is a timestamp specifying when a group was created.
                 */
                created_at?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GroupsByAdmin queries groups by admin address. */
  GroupsByAdmin: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description admin is the account address of a group's admin. */
        admin: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description groups are the groups info with the provided admin. */
            groups?: {
                /**
                 * Format: uint64
                 * @description id is the unique ID of the group.
                 */
                id?: string;
                /** @description admin is the account address of the group's admin. */
                admin?: string;
                /**
                 * metadata is any arbitrary metadata to attached to the group.
                 * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
                 */
                metadata?: string;
                /**
                 * version is used to track changes to a group's membership structure that
                 * would break existing proposals. Whenever any members weight is changed,
                 * or any member is added or removed this version is incremented and will
                 * cause proposals based on older versions of this group to fail
                 * Format: uint64
                 */
                version?: string;
                /** @description total_weight is the sum of the group members' weights. */
                total_weight?: string;
                /**
                 * Format: date-time
                 * @description created_at is a timestamp specifying when a group was created.
                 */
                created_at?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** GroupsByMember queries groups by member address. */
  GroupsByMember: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description address is the group member address. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description groups are the groups info with the provided group member. */
            groups?: {
                /**
                 * Format: uint64
                 * @description id is the unique ID of the group.
                 */
                id?: string;
                /** @description admin is the account address of the group's admin. */
                admin?: string;
                /**
                 * metadata is any arbitrary metadata to attached to the group.
                 * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#group-1
                 */
                metadata?: string;
                /**
                 * version is used to track changes to a group's membership structure that
                 * would break existing proposals. Whenever any members weight is changed,
                 * or any member is added or removed this version is incremented and will
                 * cause proposals based on older versions of this group to fail
                 * Format: uint64
                 */
                version?: string;
                /** @description total_weight is the sum of the group members' weights. */
                total_weight?: string;
                /**
                 * Format: date-time
                 * @description created_at is a timestamp specifying when a group was created.
                 */
                created_at?: string;
              }[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Proposal queries a proposal based on proposal id. */
  GroupProposal: {
    parameters: {
      path: {
        /** @description proposal_id is the unique ID of a proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description proposal is the proposal info. */
            proposal?: {
              /**
               * Format: uint64
               * @description id is the unique id of the proposal.
               */
              id?: string;
              /** @description group_policy_address is the account address of group policy. */
              group_policy_address?: string;
              /**
               * metadata is any arbitrary metadata attached to the proposal.
               * the recommended format of the metadata is to be found here:
               * https://docs.cosmos.network/v0.47/modules/group#proposal-4
               */
              metadata?: string;
              /** @description proposers are the account addresses of the proposers. */
              proposers?: string[];
              /**
               * Format: date-time
               * @description submit_time is a timestamp specifying when a proposal was submitted.
               */
              submit_time?: string;
              /**
               * Format: uint64
               * @description group_version tracks the version of the group at proposal submission.
               * This field is here for informational purposes only.
               */
              group_version?: string;
              /**
               * Format: uint64
               * @description group_policy_version tracks the version of the group policy at proposal submission.
               * When a decision policy is changed, existing proposals from previous policy
               * versions will become invalid with the `ABORTED` status.
               * This field is here for informational purposes only.
               */
              group_policy_version?: string;
              /**
               * @description status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
               * @default PROPOSAL_STATUS_UNSPECIFIED
               * @enum {string}
               */
              status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_SUBMITTED" | "PROPOSAL_STATUS_ACCEPTED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_ABORTED" | "PROPOSAL_STATUS_WITHDRAWN";
              /**
               * @description final_tally_result contains the sums of all weighted votes for this
               * proposal for each vote option. It is empty at submission, and only
               * populated after tallying, at voting period end or at proposal execution,
               * whichever happens first.
               */
              final_tally_result?: {
                /** @description yes_count is the weighted sum of yes votes. */
                yes_count?: string;
                /** @description abstain_count is the weighted sum of abstainers. */
                abstain_count?: string;
                /** @description no_count is the weighted sum of no votes. */
                no_count?: string;
                /** @description no_with_veto_count is the weighted sum of veto. */
                no_with_veto_count?: string;
              };
              /**
               * Format: date-time
               * @description voting_period_end is the timestamp before which voting must be done.
               * Unless a successful MsgExec is called before (to execute a proposal whose
               * tally is successful before the voting period ends), tallying will be done
               * at this point, and the `final_tally_result`and `status` fields will be
               * accordingly updated.
               */
              voting_period_end?: string;
              /**
               * @description executor_result is the final result of the proposal execution. Initial value is NotRun.
               * @default PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
               * @enum {string}
               */
              executor_result?: "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED" | "PROPOSAL_EXECUTOR_RESULT_NOT_RUN" | "PROPOSAL_EXECUTOR_RESULT_SUCCESS" | "PROPOSAL_EXECUTOR_RESULT_FAILURE";
              /** @description messages is a list of `sdk.Msg`s that will be executed if the proposal passes. */
              messages?: {
                  /**
                   * @description A URL/resource name that uniquely identifies the type of the serialized
                   * protocol buffer message. This string must contain at least
                   * one "/" character. The last segment of the URL's path must represent
                   * the fully qualified name of the type (as in
                   * `path/google.protobuf.Duration`). The name should be in a canonical form
                   * (e.g., leading "." is not accepted).
                   *
                   * In practice, teams usually precompile into the binary all types that they
                   * expect it to use in the context of Any. However, for URLs which use the
                   * scheme `http`, `https`, or no scheme, one can optionally set up a type
                   * server that maps type URLs to message definitions as follows:
                   *
                   * * If no scheme is provided, `https` is assumed.
                   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                   *   value in binary format, or produce an error.
                   * * Applications are allowed to cache lookup results based on the
                   *   URL, or have them precompiled into a binary to avoid any
                   *   lookup. Therefore, binary compatibility needs to be preserved
                   *   on changes to types. (Use versioned type names to manage
                   *   breaking changes.)
                   *
                   * Note: this functionality is not currently available in the official
                   * protobuf release, and it is not used for type URLs beginning with
                   * type.googleapis.com.
                   *
                   * Schemes other than `http`, `https` (or the empty scheme) might be
                   * used with implementation specific semantics.
                   */
                  type_url?: string;
                  /**
                   * Format: byte
                   * @description Must be a valid serialized protocol buffer of the above specified type.
                   */
                  value?: string;
                }[];
              /**
               * title is the title of the proposal
               * @description Since: cosmos-sdk 0.47
               */
              title?: string;
              /**
               * summary is a short summary of the proposal
               * @description Since: cosmos-sdk 0.47
               */
              summary?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /**
   * TallyResult returns the tally result of a proposal. If the proposal is
   * still in voting period, then this query computes the current tally state,
   * which might not be final. On the other hand, if the proposal is final,
   * then it simply returns the `final_tally_result` state stored in the
   * proposal itself.
   */
  GroupTallyResult: {
    parameters: {
      path: {
        /** @description proposal_id is the unique id of a proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description tally defines the requested tally. */
            tally?: {
              /** @description yes_count is the weighted sum of yes votes. */
              yes_count?: string;
              /** @description abstain_count is the weighted sum of abstainers. */
              abstain_count?: string;
              /** @description no_count is the weighted sum of no votes. */
              no_count?: string;
              /** @description no_with_veto_count is the weighted sum of veto. */
              no_with_veto_count?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** ProposalsByGroupPolicy queries proposals based on account address of group policy. */
  ProposalsByGroupPolicy: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description address is the account address of the group policy related to proposals. */
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description proposals are the proposals with given group policy. */
            proposals?: ({
                /**
                 * Format: uint64
                 * @description id is the unique id of the proposal.
                 */
                id?: string;
                /** @description group_policy_address is the account address of group policy. */
                group_policy_address?: string;
                /**
                 * metadata is any arbitrary metadata attached to the proposal.
                 * the recommended format of the metadata is to be found here:
                 * https://docs.cosmos.network/v0.47/modules/group#proposal-4
                 */
                metadata?: string;
                /** @description proposers are the account addresses of the proposers. */
                proposers?: string[];
                /**
                 * Format: date-time
                 * @description submit_time is a timestamp specifying when a proposal was submitted.
                 */
                submit_time?: string;
                /**
                 * Format: uint64
                 * @description group_version tracks the version of the group at proposal submission.
                 * This field is here for informational purposes only.
                 */
                group_version?: string;
                /**
                 * Format: uint64
                 * @description group_policy_version tracks the version of the group policy at proposal submission.
                 * When a decision policy is changed, existing proposals from previous policy
                 * versions will become invalid with the `ABORTED` status.
                 * This field is here for informational purposes only.
                 */
                group_policy_version?: string;
                /**
                 * @description status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
                 * @default PROPOSAL_STATUS_UNSPECIFIED
                 * @enum {string}
                 */
                status?: "PROPOSAL_STATUS_UNSPECIFIED" | "PROPOSAL_STATUS_SUBMITTED" | "PROPOSAL_STATUS_ACCEPTED" | "PROPOSAL_STATUS_REJECTED" | "PROPOSAL_STATUS_ABORTED" | "PROPOSAL_STATUS_WITHDRAWN";
                /**
                 * @description final_tally_result contains the sums of all weighted votes for this
                 * proposal for each vote option. It is empty at submission, and only
                 * populated after tallying, at voting period end or at proposal execution,
                 * whichever happens first.
                 */
                final_tally_result?: {
                  /** @description yes_count is the weighted sum of yes votes. */
                  yes_count?: string;
                  /** @description abstain_count is the weighted sum of abstainers. */
                  abstain_count?: string;
                  /** @description no_count is the weighted sum of no votes. */
                  no_count?: string;
                  /** @description no_with_veto_count is the weighted sum of veto. */
                  no_with_veto_count?: string;
                };
                /**
                 * Format: date-time
                 * @description voting_period_end is the timestamp before which voting must be done.
                 * Unless a successful MsgExec is called before (to execute a proposal whose
                 * tally is successful before the voting period ends), tallying will be done
                 * at this point, and the `final_tally_result`and `status` fields will be
                 * accordingly updated.
                 */
                voting_period_end?: string;
                /**
                 * @description executor_result is the final result of the proposal execution. Initial value is NotRun.
                 * @default PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                 * @enum {string}
                 */
                executor_result?: "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED" | "PROPOSAL_EXECUTOR_RESULT_NOT_RUN" | "PROPOSAL_EXECUTOR_RESULT_SUCCESS" | "PROPOSAL_EXECUTOR_RESULT_FAILURE";
                /** @description messages is a list of `sdk.Msg`s that will be executed if the proposal passes. */
                messages?: {
                    /**
                     * @description A URL/resource name that uniquely identifies the type of the serialized
                     * protocol buffer message. This string must contain at least
                     * one "/" character. The last segment of the URL's path must represent
                     * the fully qualified name of the type (as in
                     * `path/google.protobuf.Duration`). The name should be in a canonical form
                     * (e.g., leading "." is not accepted).
                     *
                     * In practice, teams usually precompile into the binary all types that they
                     * expect it to use in the context of Any. However, for URLs which use the
                     * scheme `http`, `https`, or no scheme, one can optionally set up a type
                     * server that maps type URLs to message definitions as follows:
                     *
                     * * If no scheme is provided, `https` is assumed.
                     * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                     *   value in binary format, or produce an error.
                     * * Applications are allowed to cache lookup results based on the
                     *   URL, or have them precompiled into a binary to avoid any
                     *   lookup. Therefore, binary compatibility needs to be preserved
                     *   on changes to types. (Use versioned type names to manage
                     *   breaking changes.)
                     *
                     * Note: this functionality is not currently available in the official
                     * protobuf release, and it is not used for type URLs beginning with
                     * type.googleapis.com.
                     *
                     * Schemes other than `http`, `https` (or the empty scheme) might be
                     * used with implementation specific semantics.
                     */
                    type_url?: string;
                    /**
                     * Format: byte
                     * @description Must be a valid serialized protocol buffer of the above specified type.
                     */
                    value?: string;
                  }[];
                /**
                 * title is the title of the proposal
                 * @description Since: cosmos-sdk 0.47
                 */
                title?: string;
                /**
                 * summary is a short summary of the proposal
                 * @description Since: cosmos-sdk 0.47
                 */
                summary?: string;
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** VoteByProposalVoter queries a vote by proposal id and voter. */
  VoteByProposalVoter: {
    parameters: {
      path: {
        /** @description proposal_id is the unique ID of a proposal. */
        proposal_id: string;
        /** @description voter is a proposal voter account address. */
        voter: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * Vote represents a vote for a proposal.string metadata
             * @description vote is the vote with given proposal_id and voter.
             */
            vote?: {
              /**
               * Format: uint64
               * @description proposal is the unique ID of the proposal.
               */
              proposal_id?: string;
              /** @description voter is the account address of the voter. */
              voter?: string;
              /**
               * @description option is the voter's choice on the proposal.
               * @default VOTE_OPTION_UNSPECIFIED
               * @enum {string}
               */
              option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
              /**
               * metadata is any arbitrary metadata attached to the vote.
               * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
               */
              metadata?: string;
              /**
               * Format: date-time
               * @description submit_time is the timestamp when the vote was submitted.
               */
              submit_time?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** VotesByProposal queries a vote by proposal id. */
  VotesByProposal: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description proposal_id is the unique ID of a proposal. */
        proposal_id: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description votes are the list of votes for given proposal_id. */
            votes?: ({
                /**
                 * Format: uint64
                 * @description proposal is the unique ID of the proposal.
                 */
                proposal_id?: string;
                /** @description voter is the account address of the voter. */
                voter?: string;
                /**
                 * @description option is the voter's choice on the proposal.
                 * @default VOTE_OPTION_UNSPECIFIED
                 * @enum {string}
                 */
                option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
                /**
                 * metadata is any arbitrary metadata attached to the vote.
                 * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
                 */
                metadata?: string;
                /**
                 * Format: date-time
                 * @description submit_time is the timestamp when the vote was submitted.
                 */
                submit_time?: string;
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** VotesByVoter queries a vote by voter. */
  VotesByVoter: {
    parameters: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
      path: {
        /** @description voter is a proposal voter account address. */
        voter: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /** @description votes are the list of votes by given voter. */
            votes?: ({
                /**
                 * Format: uint64
                 * @description proposal is the unique ID of the proposal.
                 */
                proposal_id?: string;
                /** @description voter is the account address of the voter. */
                voter?: string;
                /**
                 * @description option is the voter's choice on the proposal.
                 * @default VOTE_OPTION_UNSPECIFIED
                 * @enum {string}
                 */
                option?: "VOTE_OPTION_UNSPECIFIED" | "VOTE_OPTION_YES" | "VOTE_OPTION_ABSTAIN" | "VOTE_OPTION_NO" | "VOTE_OPTION_NO_WITH_VETO";
                /**
                 * metadata is any arbitrary metadata attached to the vote.
                 * the recommended format of the metadata is to be found here: https://docs.cosmos.network/v0.47/modules/group#vote-2
                 */
                metadata?: string;
                /**
                 * Format: date-time
                 * @description submit_time is the timestamp when the vote was submitted.
                 */
                submit_time?: string;
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                /**
                 * @description A URL/resource name that uniquely identifies the type of the serialized
                 * protocol buffer message. This string must contain at least
                 * one "/" character. The last segment of the URL's path must represent
                 * the fully qualified name of the type (as in
                 * `path/google.protobuf.Duration`). The name should be in a canonical form
                 * (e.g., leading "." is not accepted).
                 *
                 * In practice, teams usually precompile into the binary all types that they
                 * expect it to use in the context of Any. However, for URLs which use the
                 * scheme `http`, `https`, or no scheme, one can optionally set up a type
                 * server that maps type URLs to message definitions as follows:
                 *
                 * * If no scheme is provided, `https` is assumed.
                 * * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                 *   value in binary format, or produce an error.
                 * * Applications are allowed to cache lookup results based on the
                 *   URL, or have them precompiled into a binary to avoid any
                 *   lookup. Therefore, binary compatibility needs to be preserved
                 *   on changes to types. (Use versioned type names to manage
                 *   breaking changes.)
                 *
                 * Note: this functionality is not currently available in the official
                 * protobuf release, and it is not used for type URLs beginning with
                 * type.googleapis.com.
                 *
                 * Schemes other than `http`, `https` (or the empty scheme) might be
                 * used with implementation specific semantics.
                 */
                type_url?: string;
                /**
                 * Format: byte
                 * @description Must be a valid serialized protocol buffer of the above specified type.
                 */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Account returns account permissions. */
  CircuitAccounts: {
    parameters?: {
      query?: {
        /**
         * @description key is a value returned in PageResponse.next_key to begin
         * querying the next page most efficiently. Only one of offset or key
         * should be set.
         */
        "pagination.key"?: string;
        /**
         * @description offset is a numeric offset that can be used when key is unavailable.
         * It is less efficient than using key. Only one of offset or key should
         * be set.
         */
        "pagination.offset"?: string;
        /**
         * @description limit is the total number of results to be returned in the result page.
         * If left empty it will default to a value to be set by each app.
         */
        "pagination.limit"?: string;
        /**
         * @description count_total is set to true  to indicate that the result set should include
         * a count of the total number of items available for pagination in UIs.
         * count_total is only respected when offset is used. It is ignored when key
         * is set.
         */
        "pagination.count_total"?: boolean;
        /**
         * @description reverse is set to true if results are to be returned in the descending order.
         *
         * Since: cosmos-sdk 0.43
         */
        "pagination.reverse"?: boolean;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            accounts?: ({
                address?: string;
                /**
                 * @description Permissions are the permissions that an account has to trip
                 * or reset the circuit breaker.
                 */
                permissions?: {
                  /**
                   * @description level is the level of permissions granted to this account.
                   * @default LEVEL_NONE_UNSPECIFIED
                   * @enum {string}
                   */
                  level?: "LEVEL_NONE_UNSPECIFIED" | "LEVEL_SOME_MSGS" | "LEVEL_ALL_MSGS" | "LEVEL_SUPER_ADMIN";
                  /**
                   * @description limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
                   * URLs that the account can trip. It is an error to use limit_type_urls with
                   * a level other than LEVEL_SOME_MSGS.
                   */
                  limit_type_urls?: string[];
                };
              })[];
            /** @description pagination defines the pagination in the response. */
            pagination?: {
              /**
               * Format: byte
               * @description next_key is the key to be passed to PageRequest.key to
               * query the next page most efficiently. It will be empty if
               * there are no more results.
               */
              next_key?: string;
              /**
               * total is total number of results available if PageRequest.count_total
               * was set, its value is undefined otherwise
               * Format: uint64
               */
              total?: string;
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Account returns account permissions. */
  CircuitAccount: {
    parameters: {
      path: {
        address: string;
      };
    };
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description Permissions are the permissions that an account has to trip
             * or reset the circuit breaker.
             */
            permission?: {
              /**
               * @description level is the level of permissions granted to this account.
               * @default LEVEL_NONE_UNSPECIFIED
               * @enum {string}
               */
              level?: "LEVEL_NONE_UNSPECIFIED" | "LEVEL_SOME_MSGS" | "LEVEL_ALL_MSGS" | "LEVEL_SUPER_ADMIN";
              /**
               * @description limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
               * URLs that the account can trip. It is an error to use limit_type_urls with
               * a level other than LEVEL_SOME_MSGS.
               */
              limit_type_urls?: string[];
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** DisabledList returns a list of disabled message urls */
  DisabledList: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            disabled_list?: string[];
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
  /** Params queries the parameters of x/consensus module. */
  ConsensusParams: {
    responses: {
      /** @description A successful response. */
      200: {
        content: {
          "*/*": {
            /**
             * @description params are the tendermint consensus params stored in the consensus module.
             * Please note that `params.version` is not populated in this response, it is
             * tracked separately in the x/upgrade module.
             */
            params?: {
              /** @description BlockParams contains limits on the block size. */
              block?: {
                /**
                 * Max block size, in bytes.
                 * Note: must be greater than 0
                 * Format: int64
                 */
                max_bytes?: string;
                /**
                 * Max gas per block.
                 * Note: must be greater or equal to -1
                 * Format: int64
                 */
                max_gas?: string;
              };
              /** @description EvidenceParams determine how we handle evidence of malfeasance. */
              evidence?: {
                /**
                 * Format: int64
                 * @description Max age of evidence, in blocks.
                 *
                 * The basic formula for calculating this is: MaxAgeDuration / {average block
                 * time}.
                 */
                max_age_num_blocks?: string;
                /**
                 * @description Max age of evidence, in time.
                 *
                 * It should correspond with an app's "unbonding period" or other similar
                 * mechanism for handling [Nothing-At-Stake
                 * attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                 */
                max_age_duration?: string;
                /**
                 * This sets the maximum size of total evidence in bytes that can be committed in a single block.
                 * and should fall comfortably under the max block bytes.
                 * Default is 1048576 or 1MB
                 * Format: int64
                 */
                max_bytes?: string;
              };
              /**
               * @description ValidatorParams restrict the public key types validators can use.
               * NOTE: uses ABCI pubkey naming, not Amino names.
               */
              validator?: {
                pub_key_types?: string[];
              };
              /** @description VersionParams contains the ABCI application version. */
              version?: {
                /** Format: uint64 */
                app?: string;
              };
              /** @description ABCIParams configure functionality specific to the Application Blockchain Interface. */
              abci?: {
                /**
                 * Format: int64
                 * @description vote_extensions_enable_height configures the first height during which
                 * vote extensions will be enabled. During this specified height, and for all
                 * subsequent heights, precommit messages that do not contain valid extension data
                 * will be considered invalid. Prior to this height, vote extensions will not
                 * be used or accepted by validators on the network.
                 *
                 * Once enabled, vote extensions will be created by the application in ExtendVote,
                 * passed to the application for validation in VerifyVoteExtension and given
                 * to the application to use when proposing a block during PrepareProposal.
                 */
                vote_extensions_enable_height?: string;
              };
            };
          };
        };
      };
      /** @description An unexpected error response. */
      default: {
        content: {
          "*/*": {
            error?: string;
            /** Format: int32 */
            code?: number;
            message?: string;
            details?: {
                type_url?: string;
                /** Format: byte */
                value?: string;
              }[];
          };
        };
      };
    };
  };
}
